<<<<<<< HEAD
[{"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js":"3","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"5","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"6","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js":"9","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js":"11","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js":"13","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js":"14","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"15","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"16","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js":"17","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"18","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts":"19","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts":"20","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"21","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js":"22","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js":"23","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js":"24","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js":"25","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js":"26","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js":"27","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js":"28","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js":"29","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js":"30","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js":"31","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js":"32","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js":"33","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js":"34","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js":"35","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js":"36","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js":"37","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js":"38","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js":"39","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\ResetPassword.js":"40"},{"size":500,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":3320,"mtime":1618933205078,"results":"44","hashOfConfig":"42"},{"size":2008,"mtime":1618721841948,"results":"45","hashOfConfig":"42"},{"size":2180,"mtime":1618724879218,"results":"46","hashOfConfig":"42"},{"size":1014,"mtime":1617248893153,"results":"47","hashOfConfig":"42"},{"size":6159,"mtime":1618843323136,"results":"48","hashOfConfig":"42"},{"size":8650,"mtime":1618922628346,"results":"49","hashOfConfig":"42"},{"size":418,"mtime":1618933205087,"results":"50","hashOfConfig":"42"},{"size":346,"mtime":1615042085091,"results":"51","hashOfConfig":"42"},{"size":4900,"mtime":1618933205079,"results":"52","hashOfConfig":"42"},{"size":1556,"mtime":1615042085085,"results":"53","hashOfConfig":"42"},{"size":335,"mtime":1617873215632,"results":"54","hashOfConfig":"42"},{"size":367,"mtime":1617869718833,"results":"55","hashOfConfig":"42"},{"size":383,"mtime":1617785633533,"results":"56","hashOfConfig":"42"},{"size":655,"mtime":1617780063882,"results":"57","hashOfConfig":"42"},{"size":13275,"mtime":1618933205080,"results":"58","hashOfConfig":"42"},{"size":1104,"mtime":1618933205084,"results":"59","hashOfConfig":"42"},{"size":1353,"mtime":1616680756599,"results":"60","hashOfConfig":"42"},{"size":1168,"mtime":1616680756601,"results":"61","hashOfConfig":"42"},{"size":12825,"mtime":1618933205081,"results":"62","hashOfConfig":"42"},{"size":3754,"mtime":1618922551677,"results":"63","hashOfConfig":"42"},{"size":4160,"mtime":1617790766858,"results":"64","hashOfConfig":"42"},{"size":484,"mtime":1616683440095,"results":"65","hashOfConfig":"42"},{"size":9685,"mtime":1616683293777,"results":"66","hashOfConfig":"42"},{"size":839,"mtime":1617186663232,"results":"67","hashOfConfig":"42"},{"size":916,"mtime":1617186927393,"results":"68","hashOfConfig":"42"},{"size":7845,"mtime":1618933205085,"results":"69","hashOfConfig":"42"},{"size":268,"mtime":1617191722548,"results":"70","hashOfConfig":"42"},{"size":8606,"mtime":1618920709850,"results":"71","hashOfConfig":"42"},{"size":10716,"mtime":1618931656794,"results":"72","hashOfConfig":"42"},{"size":439,"mtime":1617786448369,"results":"73","hashOfConfig":"42"},{"size":2087,"mtime":1617910676884,"results":"74","hashOfConfig":"42"},{"size":231,"mtime":1617786537162,"results":"75","hashOfConfig":"42"},{"size":7761,"mtime":1618914256290,"results":"76","hashOfConfig":"42"},{"size":1363,"mtime":1618668642231,"results":"77","hashOfConfig":"42"},{"size":399,"mtime":1617908956499,"results":"78","hashOfConfig":"42"},{"size":10955,"mtime":1618933205082,"results":"79","hashOfConfig":"42"},{"size":11075,"mtime":1618933205083,"results":"80","hashOfConfig":"42"},{"size":3050,"mtime":1618893981848,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"n2tzlt",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"84"},"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js",[],["182","183"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["184","185","186","187","188","189","190"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from \"antd/lib/menu/MenuItem\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst CreateAuditMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"fbchecklist\">\r\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\r\n    </Menu.Item>\r\n\r\n    <Menu.Item key=\"nonfbchecklist\">\r\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass StaffLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"audits\">\r\n          <NavLink to=\"/auditlist\">Audits</NavLink>\r\n        </Menu.Item>\r\n\r\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\r\n          <Menu.Item key=\"fbchecklist\">\r\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"nonfbchecklist\">\r\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\r\n          </Menu.Item>\r\n        </SubMenu> */}\r\n\r\n        <Menu.Item key=\"createtenant\">\r\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"directory\">\r\n          <NavLink to=\"/directory\">Directory</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass TenantLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"tenanthome\">\r\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass LeftMenu extends Component {\r\n  render() {\r\n    if (this.props.auth.user.usertype === \"staff\") {\r\n      return <StaffLeftMenu />;\r\n    } else if (this.props.auth.user.usertype === \"tenant\") {\r\n      return <TenantLeftMenu />;\r\n    } else return <div></div>;\r\n  }\r\n}\r\n\r\nLeftMenu.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(LeftMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["191","192","193"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["194","195","196"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// TEST TEAM: for testing change to false\r\n// DEV TEAM: for dev change to true\r\nconst recaptchaOn = false;\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      usertypebool: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\");\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n    if (!recaptchaOn) {\r\n      this.setState({\r\n        isVerified: true,\r\n      });\r\n    }\r\n  }\r\n  // might be deprecated\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onCheckboxChange = (e) => {\r\n    this.setState({ usertypebool: !this.state.usertypebool });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    // console.log(values);\r\n    // Process checkbox boolean to usertype string\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      window.recaptcha = null;\r\n      var { usertype } = \"\";\r\n      if (this.state.usertypebool) {\r\n        usertype = \"staff\";\r\n      } else {\r\n        usertype = \"tenant\";\r\n      }\r\n      const userData = {\r\n        email: values.email,\r\n        password: values.password,\r\n        usertype: usertype,\r\n      };\r\n      console.log(values);\r\n\r\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    }\r\n  };\r\n\r\n  recaptchaLoaded() {\r\n    console.log(\"captcha loaded\");\r\n  }\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Layout>\r\n        <h2>Welcome to SingHealth Audit</h2>\r\n        <p>Enter your email and password to log in </p>\r\n        <Content>\r\n          <Form\r\n            onFinish={this.onFinish}\r\n            name=\"normal_login\"\r\n            className=\"login-register-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                className={classnames(\"\", {\r\n                  invalid: errors.email || errors.emailnotfound,\r\n                })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Password!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                className={classnames(\"\", {\r\n                  invalid: errors.password || errors.passwordincorrect,\r\n                })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"usertypebool\">\r\n              <Checkbox\r\n                onChange={this.onCheckboxChange}\r\n                value={this.state.usertypebool}\r\n                error={errors.usertypebool}\r\n                id=\"usertypebool\"\r\n              >\r\n                Singhealth Staff Member?\r\n              </Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                id=\"login-button\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-register-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n              <p></p>\r\n              <p>\r\n                Forgot password?\r\n                <Link to=\"/resetPassword\"> Click here </Link>to reset it\r\n              </p>\r\n              New staff member? <Link to=\"/Register\">Register here!</Link>\r\n            </Form.Item>\r\n          </Form>\r\n          <Recaptcha\r\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n            render=\"explicit\"\r\n            onloadCallback={console.log(\"onloadCallback\")}\r\n            verifyCallback={this.verifyCallback}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["197","198","199","200"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { getStaffKey } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Layout, Select } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  UserOutlined,\r\n  LockOutlined,\r\n  SketchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// TEST TEAM: for testing change to false\r\n// DEV TEAM: for dev change to true\r\nconst recaptchaOn = false;\r\n\r\nconst institutions = institutionsData;\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      institution: \"\",\r\n      staffkey: \"\",\r\n      dbstaffkey: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n    if (!recaptchaOn) {\r\n      this.setState({\r\n        isVerified: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  onFinish = (values) => {\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      window.recaptcha = null;\r\n      getStaffKey((data) => {\r\n        // console.log(\"data is: \", data);\r\n        this.setState({ ...this.state, dbstaffkey: data });\r\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\r\n        if (this.state.staffkey === this.state.dbstaffkey) {\r\n          const newUser = {\r\n            name: values.name,\r\n            email: values.email,\r\n            password: values.password,\r\n            password2: values.password2,\r\n            institution: values.institution,\r\n            usertype: \"staff\",\r\n          };\r\n          this.props.registerUser(newUser, this.props.history);\r\n        } else {\r\n          alert(\"Staff Key is incorrect!\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Layout>\r\n        <h2>Staff Registration Form</h2>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-register-form\"\r\n          title=\"Register\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Name\"\r\n              onChange={this.onChange}\r\n              value={this.state.name}\r\n              error={errors.name}\r\n              id=\"name\"\r\n              type=\"text\"\r\n              // className={classnames(\"\", {\r\n              // invalid: errors.name,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input a valid Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              error={errors.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              // className={classnames(\"\", {\r\n              //   invalid: errors.email,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              // className={classnames(\"\", {\r\n              //   invalid: errors.password,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password2\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              { required: true, message: \"Passwords do not match!\" },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      \"The two passwords that you entered do not match!\"\r\n                    )\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              // className={classnames(\"\", {\r\n              // invalid: errors.password2,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"staffkey\"\r\n            rules={[\r\n              { required: true, message: \"Please input your staff key!\" },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Staff Key\"\r\n              onChange={this.onChange}\r\n              value={this.state.staffkey}\r\n              error={errors.staffkey}\r\n              id=\"staffkey\"\r\n              type=\"staffkey\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.key || errors.keyincorrect,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"institution\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select an institution!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              className=\"dropdown\"\r\n              icon={MailOutlined}\r\n              placeholder=\"Institution\"\r\n              options={institutions}\r\n              onChange={this.onDropdownChange}\r\n              id=\"institution\"\r\n              type=\"institution\"\r\n              value={this.state.institution}\r\n              error={errors.institution}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-register-form-button\"\r\n            >\r\n              Register\r\n            </Button>\r\n            Or <Link to=\"/Login\">Login here</Link>\r\n          </Form.Item>\r\n        </Form>\r\n        <Recaptcha\r\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n          render=\"explicit\"\r\n          onloadCallback={console.log(\"onloadCallback\")}\r\n          verifyCallback={this.verifyCallback}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],["201","202"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js",["203","204"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["205","206","207","208","209","210"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],["211","212"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["213","214"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["215"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js",["216"],"import { getAllByPlaceholderText } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\r\n\r\nexport const submit = (data, history) => (dispatch) => {\r\n  console.log(\"submit\", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"/api/audits/add\", data)\r\n      .then(() => {\r\n        dispatch({\r\n          type: GET_MESSAGE,\r\n          payload: \"Audit Created\",\r\n        });\r\n        resolve(data);\r\n        history.push(\"/auditlist\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"in the error\");\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: error.response.data,\r\n        });\r\n        reject(\"Audit Submission Failed\");\r\n      });\r\n  });\r\n\r\n  promise\r\n    .then((message) => {\r\n      sendEmail(message);\r\n    })\r\n    .catch((message) => {\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const display = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/audits\")\r\n    .then((response) => {\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // console.log(data.length);\r\n      onDataReceived(data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAudit = (data) => {\r\n  console.log(\"Update audit: \", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\"/api/audits/update\", data)\r\n      .then(() => {\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        reject(\"Update Audit failed\");\r\n      });\r\n  });\r\n\r\n  // send email notification\r\n  promise\r\n    .then((message) => {\r\n      sendEmailAuditUpdate(message);\r\n    })\r\n    .catch((message) => {\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const updateAuditImage = (data) => {\r\n  console.log(data);\r\n  axios.put(\"/api/audits/updateImage\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\nexport const deleteAudit = (data) => {\r\n  console.log(data);\r\n  return axios\r\n    .post(\"/api/audits\", data)\r\n    .then((res) => console.log(\"audit deleted success\"))\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const sendEmail = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/audit\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailAuditUpdate = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/auditupdate\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Notification Sent\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailReminder = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  return axios\r\n    .post(\"/api/sendemail/reminder\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Reminder Sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js",["217"],"import React, { Component } from \"react\";\r\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\r\nimport { uploadPhoto } from \"../../actions/photoActions\";\r\nconst fileUpload = require('fuctbase64');\r\n\r\nexport default class PhotoPop extends Component {\r\n    state = {\r\n        image: null,\r\n        date: null,\r\n        description: \"\",\r\n        location: \"\",\r\n        photo: null,\r\n        visible: false,\r\n    }\r\n\r\n    fileSelectedHandler = event => {\r\n        // console.log(event.target.files[0]);\r\n        fileUpload(event)\r\n            .then((data) => {\r\n                // console.log(\"base64: \", data.base64);\r\n                this.setState({\r\n                    image: data.base64\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        this.setState({ date: date });\r\n    };\r\n\r\n\r\n    upload = (values) => {\r\n        // console.log(values);\r\n        this.showModal2();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    showModal2 = () => {\r\n        this.setState({\r\n            visible2: true,\r\n        });\r\n    };\r\n\r\n    handleUploadOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"photo_upload\"\r\n                    className=\"photo-upload\"\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item>\r\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"date\"\r\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\r\n                    >\r\n                        <DatePicker\r\n                            placeholder=\"Date\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Description\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Description\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.description}\r\n                            id=\"description\"\r\n                            type=\"description\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"location\"\r\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Location\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.location}\r\n                            id=\"location\"\r\n                            type=\"location\"\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"upload-photo-button\"\r\n                        onClick={() => { this.upload(this.state); }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"\"\r\n                    visible={this.state.visible2}\r\n                    onOk={this.handleUploadOk}\r\n                    okButtonProps={{ disabled: false }}\r\n                    cancelButtonProps={{ disabled: true, visible: false, }}\r\n                >\r\n                    <p>Photo Uploaded!</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}",["218","219"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js",["220","221"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nStaffRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(StaffRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js",["222","223"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nTenantRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(TenantRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js",["224","225","226","227","228"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js",[],["229","230"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js",["231","232","233"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table, Modal, Layout } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getTenants,\r\n  setSelectedTenant,\r\n  delTenant,\r\n} from \"../actions/tenantActions\";\r\nimport { deleteAudit } from \"../actions/auditActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormProvider } from \"antd/lib/form/context\";\r\nimport { deleteTenant } from \"../actions/authActions\";\r\n\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      tenantInfo: {},\r\n      visible: false,\r\n      userId: null,\r\n      rerender: \"\",\r\n    };\r\n\r\n    // this.delTenant = this.delTenant.bind(this);\r\n    this.deleteAudit = deleteAudit.bind(this);\r\n    // this.deleteTenant = this.deleteTenant.bind(this);\r\n    // this.onDeleteClick = this.onDeleteClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTenantFunction();\r\n  }\r\n\r\n  getTenantFunction() {\r\n    console.log(\"data\");\r\n    this.props.getTenants((data) => {\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i].type === \"Non-FB\") {\r\n          data[i].total_score = (data[i].total_score / 34) * 100;\r\n        } else {\r\n          data[i].total_score = (data[i].total_score / 96) * 100;\r\n        }\r\n      }\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : \"#a35709\" }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  onCreateClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    if (record.type === \"F&B\") {\r\n      this.props.history.push(\"/checklistFB\");\r\n    } else this.props.history.push(\"/checklistNonFB\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  // confirmDelete = () => {\r\n  //   // this.setState({\r\n  //   //   visible: true,\r\n  //   // });\r\n  //   this.onDeleteClick();\r\n  // }\r\n\r\n  onDeleteClick = async () => {\r\n    this.hideModal();\r\n    var tenantList = this.state.tenantData;\r\n    // function sleep(ms) {\r\n    //   return new Promise((resolve) => setTimeout(resolve, ms));\r\n    // }\r\n    for (var i = 0; i < tenantList.length; i++) {\r\n      if (tenantList[i].userId == this.state.userId) {\r\n        console.log(this.state.userId);\r\n        delTenant({ _id: tenantList[i]._id });\r\n        deleteTenant({ _id: this.state.userId });\r\n        this.deleteAudit({ tenantID: tenantList[i]._id }).then(() => {\r\n          // this.setState(this.state); // this should rerender the component but it does not\r\n          this.getTenantFunction(); // this gets the new data from database and sets the state of tenantData to the updated one\r\n        });\r\n        console.log(\"sent for deletion\");\r\n        break;\r\n      }\r\n    }\r\n    // console.log(\"sleeping\");\r\n    // await sleep(1000);\r\n    // console.log(\"slept\");\r\n    // this.forceUpdate();\r\n  };\r\n\r\n  showModal = (record) => {\r\n    this.setState({\r\n      visible: true,\r\n      userId: record.userId,\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      // {\r\n      //   title: \"Auditor\",\r\n      //   dataIndex: \"auditor\",\r\n      //   key: \"auditor\",\r\n      //   width: \"150\",\r\n      //   ...this.getColumnSearchProps(\"auditor\"),\r\n      // },\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"id\"),\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons-normalwidth\"\r\n              size=\"small\"\r\n              onClick={() => this.onCreateClick(record)}\r\n            >\r\n              Create\r\n              <br />\r\n              Audit\r\n            </Button>\r\n            <Button\r\n              className=\"action-buttons-normalwidth\"\r\n              size=\"small\"\r\n              onClick={() => this.showModal(record)}\r\n            >\r\n              Delete\r\n              <br />\r\n              Tenant\r\n            </Button>\r\n\r\n            <Modal\r\n              title=\"Confirm Delete\"\r\n              visible={this.state.visible}\r\n              onOk={this.onDeleteClick.bind(this)}\r\n              onCancel={this.hideModal}\r\n              okText=\"Confirm\"\r\n              cancelText=\"Cancel\"\r\n            >\r\n              <p>Are you sure you want to delete this Tenant?</p>\r\n            </Modal>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <Layout>\r\n        <div className=\"table\">\r\n          <h3>Tenants</h3>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={this.state.tenantData}\r\n            scroll={{ x: 400, y: \"68vh\" }}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\r\n  Directory\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js",["234","235","236","237","238","239"],"import React, { Component, TextArea } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Input, Table, Button, Layout, Space, Switch, Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { setSelectedTenant, getTenants } from \"../actions/tenantActions\";\r\nimport { sendEmailReminder } from \"../actions/auditActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { display } from \"../actions/auditActions.js\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  display,\r\n  sendEmailReminder,\r\n  setSelectedTenant,\r\n  getTenants,\r\n};\r\n\r\nclass AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n    this.state = {\r\n      audits: [],\r\n      switchState: \"ongoing\",\r\n      currentAudits: [],\r\n      expiredAudits: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"http://localhost:5000/api/audits\")\r\n    //   .then((response) => {\r\n    //     this.setState({ audits: response.data });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n    this.props.display((data) => {\r\n      console.log(data);\r\n      // let expireData = data.filter((row) => row.rectifyDate.date >= new Date());\r\n      var expiredData = [];\r\n      var currentData = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i].type === \"Non-FB\") {\r\n          data[i].total_score = ((data[i].total_score / 34) * 100).toFixed(2);\r\n        } else {\r\n          data[i].total_score = ((data[i].total_score / 96) * 100).toFixed(2);\r\n        }\r\n        if (\r\n          new Date(\r\n            moment(data[i].rectifyDate, \"YYYY-MM-DDTHH:mm:ss.SSS\").format()\r\n          ) < new Date()\r\n        ) {\r\n          console.log(\"if: \", data[i]);\r\n          expiredData.push(data[i]);\r\n        } else {\r\n          console.log(\"else: \", data[i]);\r\n          currentData.push(data[i]);\r\n        }\r\n      }\r\n\r\n      console.log(expiredData);\r\n      console.log(currentData);\r\n      this.setState({\r\n        audits: currentData,\r\n        expiredAudits: expiredData,\r\n        currentAudits: currentData,\r\n      });\r\n    });\r\n  }\r\n\r\n  onSwitchChange = () => {\r\n    if (this.state.switchState === \"expired\") {\r\n      this.setState({\r\n        switchState: \"ongoing\",\r\n        audits: this.state.currentAudits,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        switchState: \"expired\",\r\n        audits: this.state.expiredAudits,\r\n      });\r\n    }\r\n  };\r\n\r\n  onViewClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    this.props.history.push(\"/viewaudit\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  onReminderClick = (record) => {\r\n    console.log({ record });\r\n    this.props.sendEmailReminder({ record });\r\n  };\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{ color: filtered ? \"#1890ff\" : \"#a35709\", padding: \"auto\" }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    // if (this.state.audits.length > 0) {\r\n    //   console.log(\"before: \", this.state.audits[0].date);\r\n    //   const someDate = moment(this.state.audits[0].date);\r\n    //   console.log(\"after: \", someDate);\r\n    // }\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"location\",\r\n        key: \"location\",\r\n        width: \"10%\",\r\n        ...this.getColumnSearchProps(\"location\"),\r\n      },\r\n      {\r\n        title: \"Expiry\",\r\n        dataIndex: \"rectifyDate\",\r\n        key: \"rectifyDate\",\r\n        width: \"12%\",\r\n        sorter: (a, b) => {\r\n          if (a.rectifyDate > b.rectifyDate) return 1;\r\n          else return -1;\r\n        },\r\n        defaultSortOrder: \"descend\",\r\n        render: (text) =>\r\n          moment(text, \"YYYY-MM-DDTHH:mm:ss.SSS\").format(\"DD/MM/YY\"),\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"14%\",\r\n        sorter: (a, b) => {\r\n          if (a.date > b.date) return 1;\r\n          else return -1;\r\n        },\r\n        render: (text) =>\r\n          moment(text, \"YYYY-MM-DDTHH:mm:ss.SSS\").format(\"DD/MM/YY\"),\r\n      },\r\n      {\r\n        title: \"Tenant ID\",\r\n        dataIndex: \"tenantID\",\r\n        key: \"itenantID\",\r\n        width: \"20%\",\r\n        ...this.getColumnSearchProps(\"tenantID\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"15%\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"10%\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Audit Score\",\r\n        dataIndex: \"total_score\",\r\n        key: \"total_score\",\r\n        fixed: \"right\",\r\n        width: \"10%\",\r\n        sorter: (a, b) => {\r\n          if (a.score > b.score) return 1;\r\n          else return -1;\r\n        },\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"15%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              size=\"small\"\r\n              onClick={() => this.onViewClick(record)}\r\n            >\r\n              View\r\n            </Button>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              size=\"small\"\r\n              onClick={() => this.onReminderClick(record)}\r\n            >\r\n              Notify\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"table\">\r\n          <h3\r\n            style={{\r\n              position: \"absolute\",\r\n              \"margin-left\": \"auto\",\r\n              \"margin-right\": \"auto\",\r\n              left: 0,\r\n              right: 0,\r\n              \"text-align\": \"center\",\r\n              float: \"center\",\r\n              \"font-size\": \"3vh\",\r\n            }}\r\n          >\r\n            Your Audits\r\n          </h3>\r\n          <Switch\r\n            defaultChecked=\"true\"\r\n            checkedChildren=\"Ongoing\"\r\n            unCheckedChildren=\"Expired\"\r\n            size=\"small\"\r\n            style={{\r\n              float: \"right\",\r\n              \"margin-top\": \"2.5vw\",\r\n            }}\r\n            onChange={this.onSwitchChange}\r\n          ></Switch>\r\n          <Table\r\n            rowClassName={(record) =>\r\n              record.total_score < 95 ? \"red\" : \"green\"\r\n            }\r\n            columns={columns}\r\n            dataSource={this.state.audits}\r\n            scroll={{ x: 800, y: \"68vh\" }}\r\n            style={{ \"padding-top\": \"6vw\" }}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nAuditList.propTypes = {\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userID: state.auth.user.id,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditList);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js",["240","241","242","243","244","245","246","247"],"import React, { ReactDOM, Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerTenant, sendEmail } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Message, Select, Layout } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\nimport tenantData from \"../../data/tenantTypes.json\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = institutionsData;\r\nconst tenantTypes = tenantData;\r\n\r\nclass CreateTenant extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      type: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  // TODO send email to tenant with login details\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      type: values.type,\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n    };\r\n    console.log(\"newUser: \", newUser);\r\n    this.props.registerTenant(newUser, this.props.history);\r\n    // this.props.sendEmail(newUser);\r\n    window.scrollTo(0, 0); // Scroll to top\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n    return (\r\n      <Layout>\r\n        <h3\r\n          style={{\r\n            background: \"#f3ab1b\",\r\n            \"border-radius\": \"5px\",\r\n            margin: \"5vw\",\r\n          }}\r\n        >\r\n          Create a Tenant Account\r\n        </h3>\r\n        <Content>\r\n          <Form\r\n            {...layout}\r\n            name=\"normal_login\"\r\n            className=\"login-register-form\"\r\n            onFinish={this.onFinish}\r\n            initialValues={{\r\n              auditor: user.name,\r\n            }}\r\n          >\r\n            {/* No name, replace with id for annonymity */}\r\n\r\n            <Form.Item\r\n              label=\"Tenant Name\"\r\n              name=\"name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"string\",\r\n                  message: \"Please input a valid Name!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Tenant Name\"\r\n                onChange={this.onChange}\r\n                value={this.state.name}\r\n                error={errors.name}\r\n                id=\"name\"\r\n                type=\"name\"\r\n                // className={classnames(\"\", {\r\n                //   invalid: errors.email,\r\n                // })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Type\"\r\n              name=\"type\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please select F&B or non-F&B!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                showSearch\r\n                className=\"dropdown\"\r\n                placeholder=\"F&B or Non-F&B\"\r\n                options={tenantTypes}\r\n                onChange={this.onDropdownChange}\r\n                id=\"type\"\r\n                type=\"type\"\r\n                value={this.state.type}\r\n                error={errors.type}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"email\",\r\n                  message: \"Please input a valid Email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                // className={classnames(\"\", {\r\n                //   invalid: errors.email,\r\n                // })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"string\",\r\n                  message: \"Please input a valid Address!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Address\"\r\n                onChange={this.onChange}\r\n                value={this.state.address}\r\n                error={errors.address}\r\n                id=\"address\"\r\n                type=\"address\"\r\n                // className={classnames(\"\", {\r\n                //   invalid: errors.email,\r\n                // })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Institution\"\r\n              name=\"institution\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please select an institution!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                showSearch\r\n                className=\"dropdown\"\r\n                icon={MailOutlined}\r\n                placeholder=\"Institution\"\r\n                options={institutions}\r\n                onChange={this.onDropdownChange}\r\n                id=\"institution\"\r\n                type=\"institution\"\r\n                value={this.state.institution}\r\n                error={errors.institution}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Auditor\"\r\n              name=\"auditor\"\r\n              rules={[\r\n                { required: true, message: \"Please input name of Auditor!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Auditor\"\r\n                onChange={this.onChange}\r\n                value={this.state.auditor}\r\n                error={errors.auditor}\r\n                id=\"auditor\"\r\n                type=\"auditor\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-register-form-button\"\r\n              >\r\n                Create Tenant\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nCreateTenant.propTypes = {\r\n  registerTenant: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerTenant, sendEmail })(\r\n  withRouter(CreateTenant)\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js",["248"],"import axios from \"axios\";\r\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\";\r\n\r\n// Get Tenants\r\nexport const getTenants = (onDataReceived) => (dispatch) => {\r\n  console.log(\"arrived\");\r\n  axios\r\n    .get(\"/api/tenants\")\r\n    .then((response) => {\r\n      // console.log(\"response is:\", response.data);\r\n      onDataReceived(response.data);\r\n    })\r\n    .catch(\r\n      (err) =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data,\r\n        })\r\n      // console.log(\"err\")\r\n    );\r\n};\r\n\r\nexport const getTenant = (onDataReceived) => {\r\n  axios\r\n    .get(\"/api/tenants\")\r\n    .then((response) => {\r\n      // console.log(\"response is:\", response.data);\r\n      onDataReceived(response.data);\r\n    })\r\n    .catch(() => {\r\n      alert(\"Error\");\r\n    });\r\n};\r\n\r\nexport const delTenant = (data) => {\r\n  console.log(\"arrived\");\r\n  console.log(data);\r\n  return axios\r\n    .post(\"/api/tenants\", {\r\n      _id: data._id,\r\n    })\r\n    .then((response) => {\r\n      // this.setState({ users: response.data });\r\n      console.log(\"deleteUser response\", response);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n// Update tenantInfo in store with the row selected tenantInfo\r\nexport const setSelectedTenant = (data) => {\r\n  return {\r\n    type: SET_SELECTED_TENANT,\r\n    payload: data,\r\n  };\r\n};\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js",["249"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n// anonymous function\r\nexport default function (state = initialState, action) {\r\n  console.log(\"in reducer\");\r\n  switch (action.type) {\r\n    case SET_SELECTED_TENANT:\r\n      return { ...state }, action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js",["250","251","252","253"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js",["254","255","256","257"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\ResetPassword.js",["258","259","260","261","262","263","264"],"import React, { Component } from \"react\";\r\nimport { Layout, Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport store from \"../../store\";\r\n\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport { resetPassword } from \"../../actions/authActions\";\r\nimport { GET_MESSAGE } from \"../../actions/types\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// TEST TEAM: for testing change to false\r\n// DEV TEAM: for dev change to true\r\nconst recaptchaOn = false;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      email: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!recaptchaOn) {\r\n      this.setState({\r\n        isVerified: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  recaptchaLoaded() {\r\n    console.log(\"captcha loaded\");\r\n  }\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      const userData = {\r\n        email: values.email,\r\n      };\r\n      this.props.resetPassword(userData);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Welcome to SingHealth Audit</h2>\r\n        <p>\r\n          A new password will be sent to your email address if your email\r\n          address is valid\r\n        </p>\r\n        <Content>\r\n          <Form\r\n            onFinish={this.onFinish}\r\n            name=\"normal_login\"\r\n            className=\"login-register-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                id=\"reset-button\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-register-form-button\"\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Recaptcha\r\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n            render=\"explicit\"\r\n            onloadCallback={console.log(\"onloadCallback\")}\r\n            verifyCallback={this.verifyCallback}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  resetPassword: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, { resetPassword })(ResetPassword);\r\n",{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":2,"column":16,"nodeType":"271","messageId":"272","endLine":2,"endColumn":20},{"ruleId":"269","severity":1,"message":"273","line":2,"column":22,"nodeType":"271","messageId":"272","endLine":2,"endColumn":30},{"ruleId":"269","severity":1,"message":"274","line":2,"column":32,"nodeType":"271","messageId":"272","endLine":2,"endColumn":38},{"ruleId":"269","severity":1,"message":"275","line":6,"column":8,"nodeType":"271","messageId":"272","endLine":6,"endColumn":16},{"ruleId":"269","severity":1,"message":"276","line":8,"column":7,"nodeType":"271","messageId":"272","endLine":8,"endColumn":14},{"ruleId":"269","severity":1,"message":"277","line":9,"column":7,"nodeType":"271","messageId":"272","endLine":9,"endColumn":20},{"ruleId":"269","severity":1,"message":"278","line":11,"column":7,"nodeType":"271","messageId":"272","endLine":11,"endColumn":22},{"ruleId":"269","severity":1,"message":"270","line":2,"column":16,"nodeType":"271","messageId":"272","endLine":2,"endColumn":20},{"ruleId":"269","severity":1,"message":"276","line":8,"column":7,"nodeType":"271","messageId":"272","endLine":8,"endColumn":14},{"ruleId":"269","severity":1,"message":"277","line":9,"column":7,"nodeType":"271","messageId":"272","endLine":9,"endColumn":20},{"ruleId":"269","severity":1,"message":"279","line":12,"column":9,"nodeType":"271","messageId":"272","endLine":12,"endColumn":15},{"ruleId":"269","severity":1,"message":"280","line":12,"column":17,"nodeType":"271","messageId":"272","endLine":12,"endColumn":23},{"ruleId":"269","severity":1,"message":"281","line":12,"column":25,"nodeType":"271","messageId":"272","endLine":12,"endColumn":30},{"ruleId":"269","severity":1,"message":"279","line":18,"column":9,"nodeType":"271","messageId":"272","endLine":18,"endColumn":15},{"ruleId":"269","severity":1,"message":"280","line":18,"column":17,"nodeType":"271","messageId":"272","endLine":18,"endColumn":23},{"ruleId":"269","severity":1,"message":"281","line":18,"column":25,"nodeType":"271","messageId":"272","endLine":18,"endColumn":30},{"ruleId":"269","severity":1,"message":"282","line":18,"column":32,"nodeType":"271","messageId":"272","endLine":18,"endColumn":39},{"ruleId":"265","replacedBy":"283"},{"ruleId":"267","replacedBy":"284"},{"ruleId":"269","severity":1,"message":"285","line":4,"column":3,"nodeType":"271","messageId":"272","endLine":4,"endColumn":10},{"ruleId":"269","severity":1,"message":"286","line":17,"column":18,"nodeType":"271","messageId":"272","endLine":17,"endColumn":25},{"ruleId":"269","severity":1,"message":"270","line":2,"column":16,"nodeType":"271","messageId":"272","endLine":2,"endColumn":20},{"ruleId":"269","severity":1,"message":"274","line":2,"column":22,"nodeType":"271","messageId":"272","endLine":2,"endColumn":28},{"ruleId":"269","severity":1,"message":"287","line":6,"column":19,"nodeType":"271","messageId":"272","endLine":6,"endColumn":29},{"ruleId":"269","severity":1,"message":"276","line":8,"column":7,"nodeType":"271","messageId":"272","endLine":8,"endColumn":14},{"ruleId":"269","severity":1,"message":"277","line":9,"column":7,"nodeType":"271","messageId":"272","endLine":9,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":26,"column":11,"nodeType":"290","endLine":26,"endColumn":22},{"ruleId":"265","replacedBy":"291"},{"ruleId":"267","replacedBy":"292"},{"ruleId":"265","replacedBy":"293"},{"ruleId":"267","replacedBy":"294"},{"ruleId":"269","severity":1,"message":"285","line":4,"column":3,"nodeType":"271","messageId":"272","endLine":4,"endColumn":10},{"ruleId":"269","severity":1,"message":"295","line":1,"column":10,"nodeType":"271","messageId":"272","endLine":1,"endColumn":33},{"ruleId":"269","severity":1,"message":"296","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":21},{"ruleId":"265","replacedBy":"297"},{"ruleId":"267","replacedBy":"298"},{"ruleId":"269","severity":1,"message":"299","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"299","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":26},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"301","line":4,"column":10,"nodeType":"271","messageId":"272","endLine":4,"endColumn":17},{"ruleId":"269","severity":1,"message":"302","line":4,"column":19,"nodeType":"271","messageId":"272","endLine":4,"endColumn":29},{"ruleId":"269","severity":1,"message":"303","line":14,"column":9,"nodeType":"271","messageId":"272","endLine":14,"endColumn":15},{"ruleId":"269","severity":1,"message":"304","line":14,"column":17,"nodeType":"271","messageId":"272","endLine":14,"endColumn":28},{"ruleId":"265","replacedBy":"305"},{"ruleId":"267","replacedBy":"306"},{"ruleId":"269","severity":1,"message":"307","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":13},{"ruleId":"269","severity":1,"message":"308","line":15,"column":10,"nodeType":"271","messageId":"272","endLine":15,"endColumn":22},{"ruleId":"309","severity":1,"message":"310","line":177,"column":32,"nodeType":"311","messageId":"312","endLine":177,"endColumn":34},{"ruleId":"269","severity":1,"message":"313","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":36},{"ruleId":"269","severity":1,"message":"314","line":4,"column":55,"nodeType":"271","messageId":"272","endLine":4,"endColumn":58},{"ruleId":"269","severity":1,"message":"315","line":4,"column":60,"nodeType":"271","messageId":"272","endLine":4,"endColumn":63},{"ruleId":"269","severity":1,"message":"303","line":15,"column":9,"nodeType":"271","messageId":"272","endLine":15,"endColumn":15},{"ruleId":"269","severity":1,"message":"304","line":15,"column":17,"nodeType":"271","messageId":"272","endLine":15,"endColumn":28},{"ruleId":"288","severity":1,"message":"289","line":26,"column":7,"nodeType":"290","endLine":31,"endColumn":8},{"ruleId":"269","severity":1,"message":"316","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"317","line":6,"column":31,"nodeType":"271","messageId":"272","endLine":6,"endColumn":38},{"ruleId":"269","severity":1,"message":"318","line":7,"column":24,"nodeType":"271","messageId":"272","endLine":7,"endColumn":36},{"ruleId":"269","severity":1,"message":"319","line":7,"column":38,"nodeType":"271","messageId":"272","endLine":7,"endColumn":50},{"ruleId":"269","severity":1,"message":"279","line":11,"column":9,"nodeType":"271","messageId":"272","endLine":11,"endColumn":15},{"ruleId":"269","severity":1,"message":"280","line":11,"column":17,"nodeType":"271","messageId":"272","endLine":11,"endColumn":23},{"ruleId":"269","severity":1,"message":"281","line":11,"column":25,"nodeType":"271","messageId":"272","endLine":11,"endColumn":30},{"ruleId":"269","severity":1,"message":"320","line":2,"column":43,"nodeType":"271","messageId":"272","endLine":2,"endColumn":54},{"ruleId":"321","severity":1,"message":"322","line":11,"column":26,"nodeType":"323","messageId":"324","endLine":11,"endColumn":27},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"325","line":25,"column":9,"nodeType":"271","messageId":"272","endLine":25,"endColumn":13},{"ruleId":"288","severity":1,"message":"326","line":141,"column":23,"nodeType":"290","endLine":141,"endColumn":26},{"ruleId":"288","severity":1,"message":"326","line":151,"column":23,"nodeType":"290","endLine":151,"endColumn":26},{"ruleId":"269","severity":1,"message":"300","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"325","line":24,"column":9,"nodeType":"271","messageId":"272","endLine":24,"endColumn":13},{"ruleId":"288","severity":1,"message":"326","line":140,"column":23,"nodeType":"290","endLine":140,"endColumn":26},{"ruleId":"288","severity":1,"message":"326","line":152,"column":23,"nodeType":"290","endLine":152,"endColumn":26},{"ruleId":"269","severity":1,"message":"300","line":4,"column":10,"nodeType":"271","messageId":"272","endLine":4,"endColumn":14},{"ruleId":"269","severity":1,"message":"287","line":4,"column":16,"nodeType":"271","messageId":"272","endLine":4,"endColumn":26},{"ruleId":"269","severity":1,"message":"327","line":6,"column":8,"nodeType":"271","messageId":"272","endLine":6,"endColumn":13},{"ruleId":"269","severity":1,"message":"320","line":10,"column":10,"nodeType":"271","messageId":"272","endLine":10,"endColumn":21},{"ruleId":"269","severity":1,"message":"279","line":12,"column":9,"nodeType":"271","messageId":"272","endLine":12,"endColumn":15},{"ruleId":"269","severity":1,"message":"280","line":12,"column":17,"nodeType":"271","messageId":"272","endLine":12,"endColumn":23},{"ruleId":"269","severity":1,"message":"281","line":12,"column":25,"nodeType":"271","messageId":"272","endLine":12,"endColumn":30},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'CreateAuditMenu' is assigned a value but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.",["328"],["329"],"'Divider' is defined but never used.","'display' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["328"],["329"],["328"],["329"],"'getAllByPlaceholderText' is defined but never used.","'uploadPhoto' is defined but never used.",["328"],["329"],"'Component' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.",["328"],["329"],"'axios' is defined but never used.","'FormProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextArea' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'GET_MESSAGE' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Text' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'store' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"30","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"31","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js":"32","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"33","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js":"34","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js":"35"},{"size":500,"mtime":1616146148083,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1616146148083,"results":"38","hashOfConfig":"37"},{"size":3426,"mtime":1618926461699,"results":"39","hashOfConfig":"37"},{"size":333,"mtime":1616146148083,"results":"40","hashOfConfig":"37"},{"size":402,"mtime":1618926461703,"results":"41","hashOfConfig":"37"},{"size":2005,"mtime":1617883876287,"results":"42","hashOfConfig":"37"},{"size":808,"mtime":1617625254432,"results":"43","hashOfConfig":"37"},{"size":885,"mtime":1617625254432,"results":"44","hashOfConfig":"37"},{"size":5798,"mtime":1618926461703,"results":"45","hashOfConfig":"37"},{"size":8295,"mtime":1618926475863,"results":"46","hashOfConfig":"37"},{"size":10320,"mtime":1618926475863,"results":"47","hashOfConfig":"37"},{"size":12813,"mtime":1618926476039,"results":"48","hashOfConfig":"37"},{"size":12384,"mtime":1618926476035,"results":"49","hashOfConfig":"37"},{"size":11458,"mtime":1618926461703,"results":"50","hashOfConfig":"37"},{"size":11222,"mtime":1618926461703,"results":"51","hashOfConfig":"37"},{"size":1929,"mtime":1618919393740,"results":"52","hashOfConfig":"37"},{"size":7498,"mtime":1618919393740,"results":"53","hashOfConfig":"37"},{"size":5958,"mtime":1618919393740,"results":"54","hashOfConfig":"37"},{"size":7560,"mtime":1618926461703,"results":"55","hashOfConfig":"37"},{"size":8366,"mtime":1618919393740,"results":"56","hashOfConfig":"37"},{"size":3601,"mtime":1618926475863,"results":"57","hashOfConfig":"37"},{"size":218,"mtime":1617883876183,"results":"58","hashOfConfig":"37"},{"size":328,"mtime":1617895778723,"results":"59","hashOfConfig":"37"},{"size":979,"mtime":1617625254432,"results":"60","hashOfConfig":"37"},{"size":1126,"mtime":1618926461703,"results":"61","hashOfConfig":"37"},{"size":1306,"mtime":1618919393736,"results":"62","hashOfConfig":"37"},{"size":2100,"mtime":1618919393740,"results":"63","hashOfConfig":"37"},{"size":356,"mtime":1617895778995,"results":"64","hashOfConfig":"37"},{"size":421,"mtime":1617883876619,"results":"65","hashOfConfig":"37"},{"size":370,"mtime":1617883876619,"results":"66","hashOfConfig":"37"},{"size":626,"mtime":1616146148083,"results":"67","hashOfConfig":"37"},{"size":384,"mtime":1617896617126,"results":"68","hashOfConfig":"37"},{"size":256,"mtime":1617625254432,"results":"69","hashOfConfig":"37"},{"size":2934,"mtime":1618919393740,"results":"70","hashOfConfig":"37"},{"size":9889,"mtime":1618929187043,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"608doq",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["153","154"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["155","156"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["157","158"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["159","160","161"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["162","163","164","165","166","167"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["168","169"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["170"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js",["171","172","173","174","175","176","177"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js",["178","179","180","181","182"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js",["183","184","185","186","187","188","189","190"],"import React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant, sendEmail } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, Layout } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\nimport tenantData from \"../../data/tenantTypes.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TODO: this should be taken from db\nconst institutions = institutionsData;\nconst tenantTypes = tenantData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  // TODO send email to tenant with login details\n  onFinish = (values) => {\n    const newUser = {\n      name: values.name,\n      type: values.type,\n      email: values.email,\n      address: values.address,\n      institution: values.institution,\n      auditor: values.auditor,\n    };\n    console.log(\"newUser: \", newUser);\n    this.props.registerTenant(newUser, this.props.history);\n    // this.props.sendEmail(newUser);\n    window.scrollTo(0, 0); // Scroll to top\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { errors } = this.state;\n    const layout = {\n      labelCol: { span: 3 },\n    };\n    return (\n      <Layout>\n        <h3\n          style={{\n            background: \"#f3ab1b\",\n            \"border-radius\": \"5px\",\n            margin: \"5vw\",\n          }}\n        >\n          Create a Tenant Account\n        </h3>\n        <Content>\n          <Form\n            {...layout}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n            onFinish={this.onFinish}\n            initialValues={{\n              auditor: user.name,\n            }}\n          >\n            {/* No name, replace with id for annonymity */}\n\n            <Form.Item\n              label=\"Tenant Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Name!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Tenant Name\"\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"name\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Type\"\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select F&B or non-F&B!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                placeholder=\"F&B or Non-F&B\"\n                options={tenantTypes}\n                onChange={this.onDropdownChange}\n                id=\"type\"\n                type=\"type\"\n                value={this.state.type}\n                error={errors.type}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  type: \"email\",\n                  message: \"Please input a valid Email!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Address\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Address!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Address\"\n                onChange={this.onChange}\n                value={this.state.address}\n                error={errors.address}\n                id=\"address\"\n                type=\"address\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Institution\"\n              name=\"institution\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select an institution!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                icon={MailOutlined}\n                placeholder=\"Institution\"\n                options={institutions}\n                onChange={this.onDropdownChange}\n                id=\"institution\"\n                type=\"institution\"\n                value={this.state.institution}\n                error={errors.institution}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Auditor\"\n              name=\"auditor\"\n              rules={[\n                { required: true, message: \"Please input name of Auditor!\" },\n              ]}\n            >\n              <Input\n                placeholder=\"Auditor\"\n                onChange={this.onChange}\n                value={this.state.auditor}\n                error={errors.auditor}\n                id=\"auditor\"\n                type=\"auditor\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Create Tenant\n              </Button>\n            </Form.Item>\n          </Form>\n        </Content>\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerTenant, sendEmail })(\n  withRouter(CreateTenant)\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["191","192","193"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Recaptcha from \"react-recaptcha\";\n\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n  // might be deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      var { usertype } = \"\";\n      if (this.state.usertypebool) {\n        usertype = \"staff\";\n      } else {\n        usertype = \"tenant\";\n      }\n      const userData = {\n        email: values.email,\n        password: values.password,\n        usertype: usertype,\n      };\n      console.log(values);\n\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    }\n  };\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>Enter your email and password to log in </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                className={classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                className={classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item name=\"usertypebool\">\n              <Checkbox\n                onChange={this.onCheckboxChange}\n                value={this.state.usertypebool}\n                error={errors.usertypebool}\n                id=\"usertypebool\"\n              >\n                Singhealth Staff Member?\n              </Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"login-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Log in\n              </Button>\n              <p></p>\n              <p>\n                Forgot password?\n                <Link to=\"/resetPassword\"> Click here </Link>to reset it\n              </p>\n              New staff member? <Link to=\"/Register\">Register here!</Link>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",["194","195","196","197","198"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["199","200","201","202"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Layout, Select } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nconst institutions = institutionsData;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      institution: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  onFinish = (values) => {\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      getStaffKey((data) => {\n        // console.log(\"data is: \", data);\n        this.setState({ ...this.state, dbstaffkey: data });\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n        if (this.state.staffkey === this.state.dbstaffkey) {\n          const newUser = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            password2: values.password2,\n            institution: values.institution,\n            usertype: \"staff\",\n          };\n          this.props.registerUser(newUser, this.props.history);\n        } else {\n          alert(\"Staff Key is incorrect!\");\n        }\n      });\n    }\n  };\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Staff Registration Form</h2>\n        <Form\n          name=\"normal_login\"\n          className=\"login-register-form\"\n          title=\"Register\"\n          onFinish={this.onFinish}\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Name\"\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              // className={classnames(\"\", {\n              // invalid: errors.name,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please input a valid Email!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              // className={classnames(\"\", {\n              //   invalid: errors.email,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              //   invalid: errors.password,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password2\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              { required: true, message: \"Passwords do not match!\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    new Error(\n                      \"The two passwords that you entered do not match!\"\n                    )\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Confirm Password\"\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              // invalid: errors.password2,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"staffkey\"\n            rules={[\n              { required: true, message: \"Please input your staff key!\" },\n            ]}\n          >\n            <Input\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Staff Key\"\n              onChange={this.onChange}\n              value={this.state.staffkey}\n              error={errors.staffkey}\n              id=\"staffkey\"\n              type=\"staffkey\"\n              className={classnames(\"\", {\n                invalid: errors.key || errors.keyincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"institution\"\n            rules={[\n              {\n                required: true,\n                message: \"Please select an institution!\",\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              className=\"dropdown\"\n              icon={MailOutlined}\n              placeholder=\"Institution\"\n              options={institutions}\n              onChange={this.onDropdownChange}\n              id=\"institution\"\n              type=\"institution\"\n              value={this.state.institution}\n              error={errors.institution}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Register\n            </Button>\n            Or <Link to=\"/Login\">Login here</Link>\n          </Form.Item>\n        </Form>\n        <Recaptcha\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n          render=\"explicit\"\n          onloadCallback={console.log(\"onloadCallback\")}\n          verifyCallback={this.verifyCallback}\n        />\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",["203"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["204","205","206"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["207","208","209","210","211","212"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js",["213"],"import axios from \"axios\";\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\";\n\n// Get Tenants\nexport const getTenants = (onDataReceived) => (dispatch) => {\n  console.log(\"arrived\");\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(\n      (err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        })\n      // console.log(\"err\")\n    );\n};\n\nexport const getTenant = (onDataReceived) => {\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(() => {\n      alert(\"Error\");\n    });\n};\n\nexport const delTenant = (data) => {\n  console.log(\"arrived\");\n  console.log(data);\n  return axios\n    .post(\"/api/tenants\", {\n      _id: data._id,\n    })\n    .then((response) => {\n      // this.setState({ users: response.data });\n      console.log(\"deleteUser response\", response);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n// Update tenantInfo in store with the row selected tenantInfo\nexport const setSelectedTenant = (data) => {\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: data,\n  };\n};\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["214","215","216","217","218","219","220"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu> */}\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js",["221"],"/* eslint-disable import/no-anonymous-default-export */\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\n\nconst initialState = {};\n\n// anonymous function\nexport default function (state = initialState, action) {\n  console.log(\"in reducer\");\n  switch (action.type) {\n    case SET_SELECTED_TENANT:\n      return { ...state }, action.payload;\n    default:\n      return state;\n  }\n}\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js",["222","223","224","225","226","227","228"],"import React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport store from \"../../store\";\n\nimport Recaptcha from \"react-recaptcha\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { GET_MESSAGE } from \"../../actions/types\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onFinish = (values) => {\n    console.log(values);\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      const userData = {\n        email: values.email,\n      };\n      this.props.resetPassword(userData);\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>\n          A new password will be sent to your email address if your email\n          address is valid\n        </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                id=\"email\"\n                type=\"email\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"reset-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Reset Password\n              </Button>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({});\nexport default connect(mapStateToProps, { resetPassword })(ResetPassword);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js",["229","230","231","232","233","234"],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"244","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":13},{"ruleId":"239","severity":1,"message":"245","line":15,"column":10,"nodeType":"241","messageId":"242","endLine":15,"endColumn":22},{"ruleId":"246","severity":1,"message":"247","line":177,"column":32,"nodeType":"248","messageId":"249","endLine":177,"endColumn":34},{"ruleId":"239","severity":1,"message":"250","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"251","line":4,"column":55,"nodeType":"241","messageId":"242","endLine":4,"endColumn":58},{"ruleId":"239","severity":1,"message":"252","line":4,"column":60,"nodeType":"241","messageId":"242","endLine":4,"endColumn":63},{"ruleId":"239","severity":1,"message":"253","line":15,"column":9,"nodeType":"241","messageId":"242","endLine":15,"endColumn":15},{"ruleId":"239","severity":1,"message":"254","line":15,"column":17,"nodeType":"241","messageId":"242","endLine":15,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":26,"column":7,"nodeType":"257","endLine":31,"endColumn":8},{"ruleId":"239","severity":1,"message":"258","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":10},{"ruleId":"239","severity":1,"message":"259","line":17,"column":18,"nodeType":"241","messageId":"242","endLine":17,"endColumn":25},{"ruleId":"239","severity":1,"message":"258","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":10},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"260","line":25,"column":9,"nodeType":"241","messageId":"242","endLine":25,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":99,"column":11,"nodeType":"241","messageId":"263","endLine":99,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":141,"column":44,"nodeType":"248","messageId":"249","endLine":141,"endColumn":46},{"ruleId":"246","severity":1,"message":"264","line":162,"column":14,"nodeType":"248","messageId":"249","endLine":162,"endColumn":16},{"ruleId":"255","severity":1,"message":"265","line":169,"column":25,"nodeType":"257","endLine":169,"endColumn":28},{"ruleId":"255","severity":1,"message":"265","line":179,"column":25,"nodeType":"257","endLine":179,"endColumn":28},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"260","line":24,"column":9,"nodeType":"241","messageId":"242","endLine":24,"endColumn":13},{"ruleId":"261","severity":1,"message":"262","line":97,"column":11,"nodeType":"241","messageId":"263","endLine":97,"endColumn":20},{"ruleId":"255","severity":1,"message":"265","line":158,"column":23,"nodeType":"257","endLine":158,"endColumn":26},{"ruleId":"255","severity":1,"message":"265","line":170,"column":23,"nodeType":"257","endLine":170,"endColumn":26},{"ruleId":"239","severity":1,"message":"266","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"267","line":6,"column":31,"nodeType":"241","messageId":"242","endLine":6,"endColumn":38},{"ruleId":"239","severity":1,"message":"268","line":7,"column":24,"nodeType":"241","messageId":"242","endLine":7,"endColumn":36},{"ruleId":"239","severity":1,"message":"269","line":7,"column":38,"nodeType":"241","messageId":"242","endLine":7,"endColumn":50},{"ruleId":"239","severity":1,"message":"270","line":11,"column":9,"nodeType":"241","messageId":"242","endLine":11,"endColumn":15},{"ruleId":"239","severity":1,"message":"271","line":11,"column":17,"nodeType":"241","messageId":"242","endLine":11,"endColumn":23},{"ruleId":"239","severity":1,"message":"272","line":11,"column":25,"nodeType":"241","messageId":"242","endLine":11,"endColumn":30},{"ruleId":"239","severity":1,"message":"270","line":12,"column":9,"nodeType":"241","messageId":"242","endLine":12,"endColumn":15},{"ruleId":"239","severity":1,"message":"271","line":12,"column":17,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"272","line":12,"column":25,"nodeType":"241","messageId":"242","endLine":12,"endColumn":30},{"ruleId":"239","severity":1,"message":"243","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"239","severity":1,"message":"273","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":17},{"ruleId":"239","severity":1,"message":"274","line":4,"column":19,"nodeType":"241","messageId":"242","endLine":4,"endColumn":29},{"ruleId":"239","severity":1,"message":"253","line":14,"column":9,"nodeType":"241","messageId":"242","endLine":14,"endColumn":15},{"ruleId":"239","severity":1,"message":"254","line":14,"column":17,"nodeType":"241","messageId":"242","endLine":14,"endColumn":28},{"ruleId":"239","severity":1,"message":"270","line":18,"column":9,"nodeType":"241","messageId":"242","endLine":18,"endColumn":15},{"ruleId":"239","severity":1,"message":"271","line":18,"column":17,"nodeType":"241","messageId":"242","endLine":18,"endColumn":23},{"ruleId":"239","severity":1,"message":"272","line":18,"column":25,"nodeType":"241","messageId":"242","endLine":18,"endColumn":30},{"ruleId":"239","severity":1,"message":"275","line":18,"column":32,"nodeType":"241","messageId":"242","endLine":18,"endColumn":39},{"ruleId":"239","severity":1,"message":"276","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":33},{"ruleId":"239","severity":1,"message":"277","line":2,"column":16,"nodeType":"241","messageId":"242","endLine":2,"endColumn":20},{"ruleId":"239","severity":1,"message":"278","line":8,"column":7,"nodeType":"241","messageId":"242","endLine":8,"endColumn":14},{"ruleId":"239","severity":1,"message":"279","line":9,"column":7,"nodeType":"241","messageId":"242","endLine":9,"endColumn":20},{"ruleId":"239","severity":1,"message":"277","line":2,"column":16,"nodeType":"241","messageId":"242","endLine":2,"endColumn":20},{"ruleId":"239","severity":1,"message":"280","line":2,"column":22,"nodeType":"241","messageId":"242","endLine":2,"endColumn":28},{"ruleId":"239","severity":1,"message":"281","line":6,"column":19,"nodeType":"241","messageId":"242","endLine":6,"endColumn":29},{"ruleId":"239","severity":1,"message":"278","line":8,"column":7,"nodeType":"241","messageId":"242","endLine":8,"endColumn":14},{"ruleId":"239","severity":1,"message":"279","line":9,"column":7,"nodeType":"241","messageId":"242","endLine":9,"endColumn":20},{"ruleId":"255","severity":1,"message":"256","line":27,"column":13,"nodeType":"257","endLine":27,"endColumn":24},{"ruleId":"239","severity":1,"message":"282","line":2,"column":43,"nodeType":"241","messageId":"242","endLine":2,"endColumn":54},{"ruleId":"239","severity":1,"message":"277","line":2,"column":16,"nodeType":"241","messageId":"242","endLine":2,"endColumn":20},{"ruleId":"239","severity":1,"message":"283","line":2,"column":22,"nodeType":"241","messageId":"242","endLine":2,"endColumn":30},{"ruleId":"239","severity":1,"message":"280","line":2,"column":32,"nodeType":"241","messageId":"242","endLine":2,"endColumn":38},{"ruleId":"239","severity":1,"message":"284","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":16},{"ruleId":"239","severity":1,"message":"278","line":8,"column":7,"nodeType":"241","messageId":"242","endLine":8,"endColumn":14},{"ruleId":"239","severity":1,"message":"279","line":9,"column":7,"nodeType":"241","messageId":"242","endLine":9,"endColumn":20},{"ruleId":"239","severity":1,"message":"285","line":11,"column":7,"nodeType":"241","messageId":"242","endLine":11,"endColumn":22},{"ruleId":"286","severity":1,"message":"287","line":11,"column":26,"nodeType":"288","messageId":"289","endLine":11,"endColumn":27},{"ruleId":"239","severity":1,"message":"243","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":14},{"ruleId":"239","severity":1,"message":"281","line":4,"column":16,"nodeType":"241","messageId":"242","endLine":4,"endColumn":26},{"ruleId":"239","severity":1,"message":"290","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":13},{"ruleId":"239","severity":1,"message":"282","line":10,"column":10,"nodeType":"241","messageId":"242","endLine":10,"endColumn":21},{"ruleId":"239","severity":1,"message":"270","line":12,"column":9,"nodeType":"241","messageId":"242","endLine":12,"endColumn":15},{"ruleId":"239","severity":1,"message":"271","line":12,"column":17,"nodeType":"241","messageId":"242","endLine":12,"endColumn":23},{"ruleId":"239","severity":1,"message":"272","line":12,"column":25,"nodeType":"241","messageId":"242","endLine":12,"endColumn":30},{"ruleId":"239","severity":1,"message":"252","line":8,"column":5,"nodeType":"241","messageId":"242","endLine":8,"endColumn":8},{"ruleId":"239","severity":1,"message":"291","line":20,"column":9,"nodeType":"241","messageId":"242","endLine":20,"endColumn":14},{"ruleId":"239","severity":1,"message":"292","line":22,"column":7,"nodeType":"241","messageId":"242","endLine":22,"endColumn":20},{"ruleId":"239","severity":1,"message":"293","line":27,"column":7,"nodeType":"241","messageId":"242","endLine":27,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":85,"column":32,"nodeType":"248","messageId":"249","endLine":85,"endColumn":34},{"ruleId":"239","severity":1,"message":"294","line":99,"column":17,"nodeType":"241","messageId":"242","endLine":99,"endColumn":23},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","'FormProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextArea' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","'display' is defined but never used.","'Text' is assigned a value but never used.","no-redeclare","'tempArray' is already defined.","redeclared","Expected '!==' and instead saw '!='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Content' is assigned a value but never used.","'getAllByPlaceholderText' is defined but never used.","'Icon' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'GET_MESSAGE' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'store' is defined but never used.","'Title' is assigned a value but never used.","'gridStyleLeft' is assigned a value but never used.","'gridStyleRight' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> origin/week13merge
