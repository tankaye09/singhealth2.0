[{"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\store.js":"4","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Directory.js":"6","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\authActions.js":"7","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"8","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Audit-list.js":"9","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"10","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"11","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Checklist.js":"12","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"13","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js":"14","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\StoreData.ts":"15","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\AuditData.ts":"16","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\types.js":"17","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"18","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"19","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"20","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\index.js":"21","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"22","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"23","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\questionsData.js":"24"},{"size":517,"mtime":1616231467184,"results":"25","hashOfConfig":"26"},{"size":2261,"mtime":1616338390987,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1616231467186,"results":"28","hashOfConfig":"26"},{"size":418,"mtime":1616231467188,"results":"29","hashOfConfig":"26"},{"size":346,"mtime":1616231467189,"results":"30","hashOfConfig":"26"},{"size":2198,"mtime":1616231492709,"results":"31","hashOfConfig":"26"},{"size":1784,"mtime":1616338390988,"results":"32","hashOfConfig":"26"},{"size":1889,"mtime":1616231492713,"results":"33","hashOfConfig":"26"},{"size":2759,"mtime":1616231492706,"results":"34","hashOfConfig":"26"},{"size":3481,"mtime":1616338390990,"results":"35","hashOfConfig":"26"},{"size":1556,"mtime":1616231467180,"results":"36","hashOfConfig":"26"},{"size":12097,"mtime":1616668074513,"results":"37","hashOfConfig":"26"},{"size":5320,"mtime":1616231467179,"results":"38","hashOfConfig":"26"},{"size":615,"mtime":1616231467183,"results":"39","hashOfConfig":"26"},{"size":1168,"mtime":1616231492719,"results":"40","hashOfConfig":"26"},{"size":1353,"mtime":1616231492718,"results":"41","hashOfConfig":"26"},{"size":139,"mtime":1616231467177,"results":"42","hashOfConfig":"26"},{"size":690,"mtime":1616338390991,"results":"43","hashOfConfig":"26"},{"size":960,"mtime":1616338390991,"results":"44","hashOfConfig":"26"},{"size":1096,"mtime":1616231492715,"results":"45","hashOfConfig":"26"},{"size":214,"mtime":1616231467186,"results":"46","hashOfConfig":"26"},{"size":317,"mtime":1616231467186,"results":"47","hashOfConfig":"26"},{"size":655,"mtime":1616231467185,"results":"48","hashOfConfig":"26"},{"size":9685,"mtime":1616579186496,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"17v4gd9",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\index.js",[],["107","108"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Directory.js",["109","110","111"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\nimport { getData } from \"../data/StoreData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nexport default class Directory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //code runs before the page loads\r\n    axios.get(\"http://localhost:5000/users/\").then((response) => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          users: response.data.map((user) => user.username),\r\n          username: response.data[0].username, //set username as the first username in the database\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"table\">\r\n        <Table\r\n          // columns={columns}\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">CGH</div>}\r\n          size=\"middle\"\r\n          pagination={{ position: \"bottomLeft\" }}\r\n        >\r\n          <Column\r\n            title=\"Store Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(record.image, \"_blank\")}>\r\n                  {text}\r\n                </td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Location\" dataIndex=\"location\" key=\"location\" />\r\n          <Column title=\"Terms\" dataIndex=\"terms\" key=\"terms\" />\r\n          <Column title=\"Expiry\" dataIndex=\"expiry\" key=\"expiry\" />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Store Name',\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         render: (text, record) => <a>\r\n//             <td onClick={() => window.open(text, \"_blank\")} /> {text} </a>,\r\n//     },\r\n//     {\r\n//         title: 'Location',\r\n//         dataIndex: 'location',\r\n//         key: 'location',\r\n//     },\r\n//     {\r\n//         title: 'Terms',\r\n//         dataIndex: 'terms',\r\n//         key: 'terms',\r\n//     },\r\n//     {\r\n//         title: 'Expiry',\r\n//         dataIndex: 'expiry',\r\n//         key: 'expiry',\r\n//     },\r\n// ];\r\n\r\nconst data = getData(\"\");\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Audit-list.js",["112","113","114","115"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { getAudits } from \"../data/AuditData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/audits\")\r\n      .then((response) => {\r\n        this.setState({ audits: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n        >\r\n          <Column title=\"Username\" dataIndex=\"username\" key=\"username\" />\r\n          <Column\r\n            title=\"Image\"\r\n            dataIndex=\"image\"\r\n            key=\"image\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Notes\" dataIndex=\"notes\" key=\"notes\" />\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Tags\"\r\n            dataIndex=\"tags\"\r\n            key=\"tags\"\r\n            render={(tags) => (\r\n              <>\r\n                {tags.map((tag) => (\r\n                  <Tag color=\"blue\" key={tag}>\r\n                    {tag}\r\n                  </Tag>\r\n                ))}\r\n              </>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst data = getAudits(\"Pamela\");\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["116"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/auditlist\");\r\n    }\r\n  }\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/auditlist\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Form\r\n        onFinish={this.onFinish}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.email || errors.emailnotfound,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.password || errors.passwordincorrect,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or if you are a new staff member,{\" \"}\r\n          <Link to=\"/Register\">register here!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Checklist.js",["117"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["118","119"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      password2: values.password2,\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"Please input your Name!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            error={errors.name}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            // className={classnames(\"\", {\r\n            // invalid: errors.name,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.password,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password2\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            { required: true, message: \"Passwords do not match!\" },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"The two passwords that you entered do not match!\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password2}\r\n            error={errors.password2}\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            // className={classnames(\"\", {\r\n            // invalid: errors.password2,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n          Or <Link to=\"/Login\">Login here</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["120","121"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["122","123","124"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nclass LeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"audits\">\r\n          <NavLink to=\"/auditlist\">Audits</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"create\">\r\n          <NavLink to=\"/checklist\">Create Audit</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"directory\">\r\n          <NavLink to=\"/directory\">Directory</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default LeftMenu;\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["125","126","127","128","129","130"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"\">Login</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Register</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["131","132","133","134","135","136","137"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <Button onClick={this.onLogoutClick} type=\"text\">\r\n            Logout\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Name of user</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\questionsData.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":17,"nodeType":"144","messageId":"145","endLine":6,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":9,"column":3,"nodeType":"148","messageId":"149","endLine":11,"endColumn":4},{"ruleId":"150","severity":1,"message":"151","line":40,"column":15,"nodeType":"152","endLine":40,"endColumn":18},{"ruleId":"142","severity":1,"message":"153","line":4,"column":22,"nodeType":"144","messageId":"145","endLine":4,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":7,"column":17,"nodeType":"144","messageId":"145","endLine":7,"endColumn":28},{"ruleId":"150","severity":1,"message":"154","line":18,"column":7,"nodeType":"152","endLine":23,"endColumn":8},{"ruleId":"150","severity":1,"message":"151","line":83,"column":15,"nodeType":"152","endLine":83,"endColumn":18},{"ruleId":"142","severity":1,"message":"155","line":8,"column":31,"nodeType":"144","messageId":"145","endLine":8,"endColumn":39},{"ruleId":"142","severity":1,"message":"156","line":2,"column":35,"nodeType":"144","messageId":"145","endLine":2,"endColumn":40},{"ruleId":"142","severity":1,"message":"157","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"155","line":7,"column":31,"nodeType":"144","messageId":"145","endLine":7,"endColumn":39},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"158","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"159","line":5,"column":7,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"160","line":6,"column":7,"nodeType":"144","messageId":"145","endLine":6,"endColumn":20},{"ruleId":"142","severity":1,"message":"158","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"159","line":7,"column":7,"nodeType":"144","messageId":"145","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"160","line":8,"column":7,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"161","line":15,"column":13,"nodeType":"144","messageId":"145","endLine":15,"endColumn":17},{"ruleId":"150","severity":1,"message":"154","line":20,"column":11,"nodeType":"152","endLine":20,"endColumn":22},{"ruleId":"150","severity":1,"message":"154","line":23,"column":11,"nodeType":"152","endLine":23,"endColumn":22},{"ruleId":"142","severity":1,"message":"158","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"162","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"163","line":6,"column":16,"nodeType":"144","messageId":"145","endLine":6,"endColumn":26},{"ruleId":"142","severity":1,"message":"159","line":8,"column":7,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"160","line":9,"column":7,"nodeType":"144","messageId":"145","endLine":9,"endColumn":20},{"ruleId":"142","severity":1,"message":"161","line":16,"column":13,"nodeType":"144","messageId":"145","endLine":16,"endColumn":17},{"ruleId":"150","severity":1,"message":"154","line":26,"column":11,"nodeType":"152","endLine":26,"endColumn":22},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'ColumnGroup' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Space' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Checkbox' is defined but never used.","'Input' is defined but never used.","'classnames' is defined but never used.","'Icon' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]