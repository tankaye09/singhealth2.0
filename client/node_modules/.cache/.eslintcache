[{"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js":"3","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"5","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"6","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js":"9","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js":"11","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js":"13","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js":"14","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"15","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"16","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js":"17","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"18","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts":"19","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts":"20","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"21","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js":"22","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js":"23","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js":"24","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js":"25","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js":"26","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js":"27","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js":"28","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js":"29","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js":"30","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js":"31","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js":"32","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js":"33","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js":"34","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js":"35","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js":"36","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js":"37","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js":"38","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js":"39"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":3313,"mtime":1617905210294,"results":"43","hashOfConfig":"41"},{"size":1829,"mtime":1617849394394,"results":"44","hashOfConfig":"41"},{"size":2553,"mtime":1617905210307,"results":"45","hashOfConfig":"41"},{"size":1014,"mtime":1617248893153,"results":"46","hashOfConfig":"41"},{"size":5518,"mtime":1617903467238,"results":"47","hashOfConfig":"41"},{"size":8261,"mtime":1617903467241,"results":"48","hashOfConfig":"41"},{"size":416,"mtime":1617903467243,"results":"49","hashOfConfig":"41"},{"size":346,"mtime":1615042085091,"results":"50","hashOfConfig":"41"},{"size":2822,"mtime":1617799141892,"results":"51","hashOfConfig":"41"},{"size":1556,"mtime":1615042085085,"results":"52","hashOfConfig":"41"},{"size":335,"mtime":1617873215632,"results":"53","hashOfConfig":"41"},{"size":367,"mtime":1617869718833,"results":"54","hashOfConfig":"41"},{"size":383,"mtime":1617785633533,"results":"55","hashOfConfig":"41"},{"size":655,"mtime":1617780063882,"results":"56","hashOfConfig":"41"},{"size":15859,"mtime":1617905944953,"results":"57","hashOfConfig":"41"},{"size":1104,"mtime":1617249822114,"results":"58","hashOfConfig":"41"},{"size":1353,"mtime":1616680756599,"results":"59","hashOfConfig":"41"},{"size":1168,"mtime":1616680756601,"results":"60","hashOfConfig":"41"},{"size":12349,"mtime":1617908460040,"results":"61","hashOfConfig":"41"},{"size":1099,"mtime":1617908045476,"results":"62","hashOfConfig":"41"},{"size":4160,"mtime":1617790766858,"results":"63","hashOfConfig":"41"},{"size":484,"mtime":1616683440095,"results":"64","hashOfConfig":"41"},{"size":9685,"mtime":1616683293777,"results":"65","hashOfConfig":"41"},{"size":839,"mtime":1617186663232,"results":"66","hashOfConfig":"41"},{"size":916,"mtime":1617186927393,"results":"67","hashOfConfig":"41"},{"size":3787,"mtime":1617905210309,"results":"68","hashOfConfig":"41"},{"size":268,"mtime":1617191722548,"results":"69","hashOfConfig":"41"},{"size":6252,"mtime":1617905210303,"results":"70","hashOfConfig":"41"},{"size":2887,"mtime":1617876712431,"results":"71","hashOfConfig":"41"},{"size":439,"mtime":1617786448369,"results":"72","hashOfConfig":"41"},{"size":2087,"mtime":1617865068883,"results":"73","hashOfConfig":"41"},{"size":231,"mtime":1617786537162,"results":"74","hashOfConfig":"41"},{"size":6703,"mtime":1617903467236,"results":"75","hashOfConfig":"41"},{"size":801,"mtime":1617905210297,"results":"76","hashOfConfig":"41"},{"size":399,"mtime":1617905210311,"results":"77","hashOfConfig":"41"},{"size":5024,"mtime":1617905210304,"results":"78","hashOfConfig":"41"},{"size":5511,"mtime":1617905210305,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"n2tzlt",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"82"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"82"},"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js",[],["179","180"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js",["181"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport StaffRoute from \"./components/private-route/StaffRoute\";\r\nimport TenantRoute from \"./components/private-route/TenantRoute\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\n// Login Flow\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\n//Staff Flow\r\nimport AuditList from \"./components/AuditList\";\r\nimport Directory from \"./components/TenantList\";\r\nimport Checklist from \"./components/Checklist\";\r\nimport ChecklistNonFB from \"./components/ChecklistNonFB\";\r\nimport CreateTenant from \"./components/auth/CreateTenant\";\r\nimport ViewAuditAuditor from \"./components/ViewAudit\";\r\n//Tenant Flow\r\nimport TenantHome from \"./components/tenant/TenantHome\";\r\nimport TenantEditAudit from \"./components/tenant/EditAudit\";\r\nimport ViewAuditTenant from \"./components/ViewAuditTenant\";\r\n//Error warning\r\nimport MessageDisplay from \"./components/MessageDisplay\";\r\n\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <MessageDisplay />\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <StaffRoute exact path=\"/auditlist\" component={AuditList} />\r\n              <StaffRoute exact path=\"/checklistFB\" component={Checklist} />\r\n              <StaffRoute\r\n                exact\r\n                path=\"/checklistNonFB\"\r\n                component={ChecklistNonFB}\r\n              />\r\n              <StaffRoute exact path=\"/directory\" component={Directory} />\r\n              <StaffRoute exact path=\"/createtenant\" component={CreateTenant} />\r\n              <StaffRoute exact path=\"/viewaudit\" component={ViewAuditAuditor} />\r\n\r\n              <TenantRoute exact path=\"/tenant\" component={TenantHome} />\r\n              <TenantRoute exact path=\"/viewaudittenant\" component={ViewAuditTenant} />\r\n              <TenantRoute\r\n                exact\r\n                path=\"/tenant/editAudit\"\r\n                component={TenantEditAudit}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["182","183","184","185","186","187","188"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from \"antd/lib/menu/MenuItem\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst CreateAuditMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"fbchecklist\">\r\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\r\n    </Menu.Item>\r\n\r\n    <Menu.Item key=\"nonfbchecklist\">\r\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass StaffLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"audits\">\r\n          <NavLink to=\"/auditlist\">Audits</NavLink>\r\n        </Menu.Item>\r\n\r\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\r\n          <Menu.Item key=\"fbchecklist\">\r\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"nonfbchecklist\">\r\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\r\n          </Menu.Item>\r\n        </SubMenu> */}\r\n\r\n        <Menu.Item key=\"createtenant\">\r\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"directory\">\r\n          <NavLink to=\"/directory\">Directory</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"viewaudit\">\r\n          <NavLink to=\"/viewaudit\">View Audit</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass TenantLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"tenanthome\">\r\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"editaudit\">\r\n          <NavLink to=\"/tenant/editaudit\">Edit Audit</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"viewaudittenant\">\r\n          <NavLink to=\"/viewaudittenant\">View Audit</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass LeftMenu extends Component {\r\n  render() {\r\n    if (this.props.auth.user.usertype === \"staff\") {\r\n      return <StaffLeftMenu />;\r\n    } else if (this.props.auth.user.usertype === \"tenant\") {\r\n      return <TenantLeftMenu />;\r\n    } else return <div></div>;\r\n  }\r\n}\r\n\r\nLeftMenu.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(LeftMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["189","190","191"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["192"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      usertypebool: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\");\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n  }\r\n  // might be deprecated\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onCheckboxChange = (e) => {\r\n    this.setState({ usertypebool: !this.state.usertypebool });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    // console.log(values);\r\n    // Process checkbox boolean to usertype string\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      window.recaptcha = null;\r\n      var { usertype } = \"\";\r\n      if (this.state.usertypebool) {\r\n        usertype = \"staff\";\r\n      } else {\r\n        usertype = \"tenant\";\r\n      }\r\n      const userData = {\r\n        email: values.email,\r\n        password: values.password,\r\n        usertype: usertype,\r\n      };\r\n      console.log(values);\r\n\r\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    }\r\n  };\r\n\r\n  recaptchaLoaded() {\r\n    console.log(\"captcha loaded\");\r\n  }\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div>{this.state.isVerified.toString()}</div>\r\n        <Form\r\n          onFinish={this.onFinish}\r\n          name=\"normal_login\"\r\n          className=\"login-register-form\"\r\n        >\r\n          <h2>Welcome to SingHealth Audit</h2>\r\n          <p>Enter your email and password to log in </p>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              error={errors.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.email || errors.emailnotfound,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password || errors.passwordincorrect,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"usertypebool\">\r\n            <Checkbox\r\n              onChange={this.onCheckboxChange}\r\n              value={this.state.usertypebool}\r\n              error={errors.usertypebool}\r\n              id=\"usertypebool\"\r\n            >\r\n              Singhealth Staff Member?\r\n            </Checkbox>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              id=\"login-button\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-register-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            New staff member? <Link to=\"/Register\">Register here!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n        <Recaptcha\r\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n          render=\"explicit\"\r\n          verifyCallback={this.verifyCallback}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["193"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Recaptcha from \"react-recaptcha\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { getStaffKey } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  UserOutlined,\r\n  LockOutlined,\r\n  SketchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\n\r\nconst institutions = institutionsData;\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      institution: \"\",\r\n      staffkey: \"\",\r\n      dbstaffkey: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  onFinish = (values) => {\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      window.recaptcha = null;\r\n      getStaffKey((data) => {\r\n        // console.log(\"data is: \", data);\r\n        this.setState({ ...this.state, dbstaffkey: data });\r\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\r\n        if (this.state.staffkey === this.state.dbstaffkey) {\r\n          const newUser = {\r\n            name: values.name,\r\n            email: values.email,\r\n            password: values.password,\r\n            password2: values.password2,\r\n            institution: values.institution,\r\n            usertype: \"staff\",\r\n          };\r\n          this.props.registerUser(newUser, this.props.history);\r\n        } else {\r\n          alert(\"Staff Key is incorrect!\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-register-form\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Name\"\r\n              onChange={this.onChange}\r\n              value={this.state.name}\r\n              error={errors.name}\r\n              id=\"name\"\r\n              type=\"text\"\r\n              // className={classnames(\"\", {\r\n              // invalid: errors.name,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input a valid Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              error={errors.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              // className={classnames(\"\", {\r\n              //   invalid: errors.email,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              // className={classnames(\"\", {\r\n              //   invalid: errors.password,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password2\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              { required: true, message: \"Passwords do not match!\" },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      \"The two passwords that you entered do not match!\"\r\n                    )\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password2}\r\n              error={errors.password2}\r\n              id=\"password2\"\r\n              type=\"password\"\r\n              // className={classnames(\"\", {\r\n              // invalid: errors.password2,\r\n              // })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"staffkey\"\r\n            rules={[\r\n              { required: true, message: \"Please input your staff key!\" },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Staff Key\"\r\n              onChange={this.onChange}\r\n              value={this.state.staffkey}\r\n              error={errors.staffkey}\r\n              id=\"staffkey\"\r\n              type=\"staffkey\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.key || errors.keyincorrect,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"institution\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please select an institution!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              className=\"dropdown\"\r\n              icon={MailOutlined}\r\n              placeholder=\"Institution\"\r\n              options={institutions}\r\n              onChange={this.onDropdownChange}\r\n              id=\"institution\"\r\n              type=\"institution\"\r\n              value={this.state.institution}\r\n              error={errors.institution}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-register-form-button\"\r\n            >\r\n              Register\r\n            </Button>\r\n            Or <Link to=\"/Login\">Login here</Link>\r\n          </Form.Item>\r\n        </Form>\r\n        <Recaptcha\r\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n          render=\"explicit\"\r\n          verifyCallback={this.verifyCallback}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],["194","195"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js",["196","197","198"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["199","200","201","202","203","204"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\">\r\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Hello {user.name}</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],["205","206"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["207","208"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["209","210"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js",["211"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js",["212"],"import React, { Component } from \"react\";\r\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\r\nimport { uploadPhoto } from \"../../actions/photoActions\";\r\nconst fileUpload = require('fuctbase64');\r\n\r\nexport default class PhotoPop extends Component {\r\n    state = {\r\n        image: null,\r\n        date: null,\r\n        description: \"\",\r\n        location: \"\",\r\n        photo: null,\r\n        visible: false,\r\n    }\r\n\r\n    fileSelectedHandler = event => {\r\n        // console.log(event.target.files[0]);\r\n        fileUpload(event)\r\n            .then((data) => {\r\n                // console.log(\"base64: \", data.base64);\r\n                this.setState({\r\n                    image: data.base64\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        this.setState({ date: date });\r\n    };\r\n\r\n\r\n    upload = (values) => {\r\n        // console.log(values);\r\n        this.showModal2();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    showModal2 = () => {\r\n        this.setState({\r\n            visible2: true,\r\n        });\r\n    };\r\n\r\n    handleUploadOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"photo_upload\"\r\n                    className=\"photo-upload\"\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item>\r\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"date\"\r\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\r\n                    >\r\n                        <DatePicker\r\n                            placeholder=\"Date\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Description\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Description\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.description}\r\n                            id=\"description\"\r\n                            type=\"description\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"location\"\r\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Location\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.location}\r\n                            id=\"location\"\r\n                            type=\"location\"\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"upload-photo-button\"\r\n                        onClick={() => { this.upload(this.state); }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"\"\r\n                    visible={this.state.visible2}\r\n                    onOk={this.handleUploadOk}\r\n                    okButtonProps={{ disabled: false }}\r\n                    cancelButtonProps={{ disabled: true, visible: false, }}\r\n                >\r\n                    <p>Photo Uploaded!</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}",["213","214"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js",["215","216"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nStaffRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(StaffRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js",["217","218"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nTenantRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(TenantRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js",["219","220","221","222","223","224","225","226"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport { display } from \"../../actions/auditActions.js\";\r\nimport { auditInfo } from \"../../actions/tenantActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nclass TenantHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = {\r\n      audits: [],\r\n      actualAudits: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    display((data) => {\r\n      var tempList = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        console.log(data[i]);\r\n        if (data[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\r\n          tempList.push(data[i]);\r\n        }\r\n      }\r\n      this.setState({ actualAudits: tempList });\r\n    });\r\n    // this.auditList();\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  onViewClick = (record) => {\r\n    //pass to redux\r\n    this.props.auditInfo({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    this.props.history.push(\"/viewaudittenant\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  auditList() {\r\n    for (var i = 0; i < this.state.audits.length; i++) {\r\n      console.log(this.state.audits[i]);\r\n      if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\r\n        this.state.actualAudits.push(this.state.audits[i]);\r\n      }\r\n    }\r\n    return this.state.actualAudits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={this.state.actualAudits}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n          scroll={{ x: 400 }}\r\n        >\r\n          <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\r\n          {/* <Column title=\"Tenant\" dataIndex=\"tenantID\" key=\"tenantID\" /> */}\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Total Score\"\r\n            dataIndex=\"total_score\"\r\n            key=\"total_score\"\r\n          />\r\n          <Column\r\n            title=\"View Audit\"\r\n            dataIndex=\"view_audit\"\r\n            key=\"view_audit\"\r\n            render={(text, record) => (\r\n              <Button\r\n                className=\"action-buttons\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => this.onViewClick(record)}\r\n              >\r\n                View Audit\r\n              </Button>\r\n            )} />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTenantHome.propTypes = {\r\n  auditInfo: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantID: state.tenantID,\r\n});\r\nexport default connect(mapStateToProps, { auditInfo })(\r\n  TenantHome\r\n);","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js",["227","228"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTenants, setSelectedTenant } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormProvider } from \"antd/lib/form/context\";\r\n\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      tenantInfo: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  onCreateClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    if (record.type === \"F&B\") {\r\n      this.props.history.push(\"/checklistFB\");\r\n    } else this.props.history.push(\"/checklistNonFB\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n  onEditClick = () => ({\r\n    //pass props to checklist\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n  });\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      {\r\n        title: \"Auditor\",\r\n        dataIndex: \"auditor\",\r\n        key: \"auditor\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"auditor\"),\r\n      },\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"id\"),\r\n      },\r\n      {\r\n        title: \"FB/NonFB\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Audit Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onCreateClick(record)}\r\n            >\r\n              Create\r\n            </Button>\r\n            <p></p>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onEditClick(record)}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.tenantData}\r\n          scroll={{ x: 400, y: 300 }}\r\n          title={() => <div className=\"table-title\">Tenants</div>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\r\n  Directory\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js",["229","230","231","232","233","234","235","236"],"import React, { Component, TextArea } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { getAudits } from \"../data/AuditData.ts\";\r\nimport { display } from \"../actions/auditActions.js\"; import { submit } from \"../actions/auditActions.js\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"http://localhost:5000/api/audits\")\r\n    //   .then((response) => {\r\n    //     this.setState({ audits: response.data });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n    display((data) => {\r\n      this.setState({ audits: data });\r\n    });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    // console.log(this.state.audits);\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={this.state.audits}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n          scroll={{ x: 400 }}\r\n        >\r\n          <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\r\n          <Column title=\"Tenant\" dataIndex=\"tenant\" key=\"tenant\" />\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Total Score\"\r\n            dataIndex=\"total_score\"\r\n            key=\"total_score\"\r\n          />\r\n          <Column\r\n            title=\"View Audit\"\r\n            dataIndex=\"view_audit\"\r\n            key=\"view_audit\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\r\n              </a>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const data = getAudits(\"Pamela\");\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js",["237","238","239","240","241","242"],"import React, { ReactDOM, Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerTenant } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\nimport tenantData from \"../../data/tenantTypes.json\";\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = institutionsData;\r\nconst tenantTypes = tenantData;\r\n\r\nclass CreateTenant extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      type: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  // TODO send email to tenant with login details\r\n\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      type: values.type,\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerTenant(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n        initialValues={{\r\n          auditor: user.name,\r\n        }}\r\n      >\r\n        <h1>Create a Tenant Account</h1>\r\n\r\n        {/* No name, replace with id for annonymity */}\r\n\r\n        <Form.Item\r\n          label=\"Tenant Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Tenant Name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            error={errors.name}\r\n            id=\"name\"\r\n            type=\"name\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Type\"\r\n          name=\"type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select F&B or non-F&B!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            className=\"dropdown\"\r\n            placeholder=\"F&B or Non-F&B\"\r\n            options={tenantTypes}\r\n            onChange={this.onDropdownChange}\r\n            id=\"type\"\r\n            type=\"type\"\r\n            value={this.state.type}\r\n            error={errors.type}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Address!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address}\r\n            error={errors.address}\r\n            id=\"address\"\r\n            type=\"address\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Institution\"\r\n          name=\"institution\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select an institution!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            className=\"dropdown\"\r\n            icon={MailOutlined}\r\n            placeholder=\"Institution\"\r\n            options={institutions}\r\n            onChange={this.onDropdownChange}\r\n            id=\"institution\"\r\n            type=\"institution\"\r\n            value={this.state.institution}\r\n            error={errors.institution}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Auditor\"\r\n          name=\"auditor\"\r\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Auditor\"\r\n            onChange={this.onChange}\r\n            value={this.state.auditor}\r\n            error={errors.auditor}\r\n            id=\"auditor\"\r\n            type=\"auditor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Create Tenant\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nCreateTenant.propTypes = {\r\n  registerTenant: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerTenant })(\r\n  withRouter(CreateTenant)\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js",["243"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n// anonymous function\r\nexport default function (state = initialState, action) {\r\n  console.log(\"in reducer\");\r\n  switch (action.type) {\r\n    case SET_SELECTED_TENANT:\r\n      return { ...state }, action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js",["244","245"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\r\nimport dateformat from \"dateformat\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nexport default class ViewAuditAuditor extends Component {\r\n    state = {\r\n        input: \"85\",\r\n        tenant: \"tenant1\",\r\n        auditor: \"auditor\",\r\n        // auditorComments: [\"Bla\", \"blabla\"],\r\n        // tenantComments: [\"Response\", \"response\"],\r\n        comments:\r\n            [{\r\n                \"content\": \"blablabla\",\r\n                \"date\": \"2017-05-29T15:30:17.983Z\",\r\n                \"author\": \"auditor\"\r\n            },\r\n            {\r\n                \"content\": \"blabla\",\r\n                \"date\": \"2018-05-29T15:30:17.983Z\",\r\n                \"author\": \"auditor\"\r\n            },\r\n            {\r\n                \"content\": \"alab\",\r\n                \"date\": \"2016-05-29T15:30:17.983Z\",\r\n                \"author\": \"tenant1\",\r\n            },\r\n            {\r\n                \"content\": \"ooga\",\r\n                \"date\": \"2022-06-29T15:30:17.983Z\",\r\n                \"author\": \"tenant1\",\r\n            },],\r\n        image: [{ \"base64\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\", \"date\": \"2018-05-29T15:30:17.983Z\" }],\r\n        decodedImage: \"\",\r\n        newComment: \"\",\r\n    };\r\n\r\n\r\n\r\n    displayComments() {\r\n        var output = [];\r\n        var Comm = [];\r\n        for (var i = 0; i < Math.max(this.state.comments.length, this.state.image.length); i++) {\r\n            Comm.push(this.state.comments[i]);\r\n            if (this.state.image[i] != null) {\r\n                Comm.push(this.state.image[i])\r\n            }\r\n        }\r\n        Comm = Comm.sort((a, b) => a.date > b.date);\r\n        console.log(Comm);\r\n\r\n        for (var j = 0; j < Comm.length; j++) {\r\n            if (Comm[j].content) {\r\n                output.push(<div>\r\n                    <Comment\r\n                        author={<a>{Comm[j].author}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{Comm[j].content}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n            else {\r\n                output.push(<div className=\"image\">\r\n                    <Image\r\n                        width={100}\r\n                        src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n                    />\r\n                </div>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange = value => {\r\n        console.log(value.Text);\r\n        this.setState({\r\n            newComment: value\r\n        })\r\n        console.log(this.state.newComment);\r\n    };\r\n\r\n    newComment = (values) => {\r\n        // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n        this.setState({\r\n            newComment:\r\n                [{\r\n                    \"content\": values.nativeEvent.explicitOriginalTarget.value,\r\n                    \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n                    \"author\": \"auditor\",\r\n                }]\r\n        })\r\n        // console.log(this.state.newComment)\r\n    }\r\n\r\n    submitComment = () => {\r\n        var tempArray = this.state.comments;\r\n        console.log(tempArray);\r\n        tempArray.push(this.state.newComment[0]);\r\n        console.log(tempArray);\r\n        this.setState({\r\n            comments: tempArray,\r\n        })\r\n        console.log(this.state.comments);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <Progress className=\"score\"\r\n                    type=\"circle\"\r\n                    percent={this.state.input} width={200} />\r\n                <div>\r\n                    <Text className=\"name\">\r\n                        Tenant: {this.state.tenant}\r\n                    </Text>\r\n                    <div />\r\n                    <Text className=\"name\">\r\n                        Auditor: {this.state.auditor}\r\n                    </Text>\r\n                    <div />\r\n                    {this.displayComments()}\r\n                    <div />\r\n                    <Form className=\"addComment\" onChange={this.newComment} initialValues={{\r\n                        remember: false,\r\n                    }}>\r\n                        <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n                            <TextArea className=\"addCommentText\" placeholder=\"Add Comment\" rows={4} allowClear={true} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                                Submit Comment\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js",["246","247","248"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\r\nimport dateformat from \"dateformat\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { display, updateAudit } from \"../actions/auditActions.js\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass ViewAuditTenant extends Component {\r\n    state = {\r\n        _id: this.props.tenantInfo.record._id,\r\n        audit: null,\r\n        total_score: this.props.tenantInfo.record.total_score,\r\n        tenantID: this.props.tenantInfo.record.tenantID,\r\n        auditor: \"auditor\",\r\n        // auditorComments: [\"Bla\", \"blabla\"],\r\n        // tenantComments: [\"Response\", \"response\"],\r\n        comment: this.props.tenantInfo.record.comment,\r\n        image: this.props.tenantInfo.record.image,\r\n        date: this.props.tenantInfo.record.date,\r\n        catCounts: this.props.tenantInfo.record.catCounts,\r\n        type: this.props.tenantInfo.record.type,\r\n        decodedImage: \"\",\r\n        newComment: \"\",\r\n    };\r\n\r\n    displayComments() {\r\n        var output = [];\r\n        var Comm = [];\r\n        for (var i = 0; i < Math.max(this.state.comment.length, this.state.image.length); i++) {\r\n            Comm.push(this.state.comment[i]);\r\n            if (this.state.image[i] != null) {\r\n                Comm.push(this.state.image[i])\r\n            }\r\n        }\r\n        Comm = Comm.sort((a, b) => a.date > b.date);\r\n        console.log(Comm);\r\n\r\n        for (var j = 0; j < Comm.length; j++) {\r\n            if (Comm[j].content) {\r\n                output.push(<div>\r\n                    <Comment\r\n                        author={<a>{Comm[j].author}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{Comm[j].content}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n            else {\r\n                output.push(<div className=\"image\">\r\n                    <Image\r\n                        width={100}\r\n                        src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n                    />\r\n                </div>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange = value => {\r\n        console.log(value.Text);\r\n        console.log(this.state.newComment);\r\n    };\r\n\r\n    newComment = (values) => {\r\n        // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n        this.setState({\r\n            newComment:\r\n                [{\r\n                    \"content\": values.nativeEvent.explicitOriginalTarget.value,\r\n                    \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n                    \"author\": \"tenant\",\r\n                }]\r\n        })\r\n        // console.log(this.state.newComment)\r\n    }\r\n\r\n    submitComment = () => {\r\n        var tempArray = this.state.comment;\r\n        console.log(tempArray);\r\n        tempArray.push(this.state.newComment[0]);\r\n        console.log(tempArray);\r\n        this.setState({\r\n            comment: tempArray,\r\n        })\r\n        console.log(this.state.comment);\r\n        this.update();\r\n\r\n    }\r\n\r\n    update = () => {\r\n        console.log(this.state);\r\n        updateAudit({\r\n            _id: this.props.tenantInfo.record._id,\r\n            type: this.props.tenantInfo.record.type,\r\n            catCounts: this.props.tenantInfo.record.catCounts,\r\n            total_score: this.props.tenantInfo.record.total_score,\r\n            image: this.props.tenantInfo.record.image,\r\n            date: this.props.tenantInfo.record.date,\r\n            comment: this.state.comment,\r\n            location: this.props.tenantInfo.record.location,\r\n            tenantID: this.props.tenantInfo.record.tenantID,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <Progress className=\"score\"\r\n                    type=\"circle\"\r\n                    percent={this.state.total_score} width={200} />\r\n                <div>\r\n                    <Text className=\"name\">\r\n                        Tenant: {this.state.tenantID}\r\n                    </Text>\r\n                    <div />\r\n                    <Text className=\"name\">\r\n                        Auditor: {this.state.auditor}\r\n                    </Text>\r\n                    <div />\r\n                    {this.displayComments()}\r\n                    <div />\r\n                    <Form className=\"addComment\" onChange={this.newComment} initialValues={{\r\n                        remember: false,\r\n                    }}>\r\n                        <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n                            <TextArea className=\"addCommentText\" placeholder=\"Add Comment\" rows={4} allowClear={true} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                                Submit Comment\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nViewAuditTenant.propTypes = {\r\n    tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ViewAuditTenant);",{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":17},{"ruleId":"253","severity":1,"message":"257","line":2,"column":16,"nodeType":"255","messageId":"256","endLine":2,"endColumn":20},{"ruleId":"253","severity":1,"message":"258","line":2,"column":22,"nodeType":"255","messageId":"256","endLine":2,"endColumn":30},{"ruleId":"253","severity":1,"message":"259","line":2,"column":32,"nodeType":"255","messageId":"256","endLine":2,"endColumn":38},{"ruleId":"253","severity":1,"message":"260","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":16},{"ruleId":"253","severity":1,"message":"261","line":8,"column":7,"nodeType":"255","messageId":"256","endLine":8,"endColumn":14},{"ruleId":"253","severity":1,"message":"262","line":9,"column":7,"nodeType":"255","messageId":"256","endLine":9,"endColumn":20},{"ruleId":"253","severity":1,"message":"263","line":11,"column":7,"nodeType":"255","messageId":"256","endLine":11,"endColumn":22},{"ruleId":"253","severity":1,"message":"257","line":2,"column":16,"nodeType":"255","messageId":"256","endLine":2,"endColumn":20},{"ruleId":"253","severity":1,"message":"261","line":8,"column":7,"nodeType":"255","messageId":"256","endLine":8,"endColumn":14},{"ruleId":"253","severity":1,"message":"262","line":9,"column":7,"nodeType":"255","messageId":"256","endLine":9,"endColumn":20},{"ruleId":"253","severity":1,"message":"264","line":9,"column":41,"nodeType":"255","messageId":"256","endLine":9,"endColumn":46},{"ruleId":"253","severity":1,"message":"265","line":9,"column":31,"nodeType":"255","messageId":"256","endLine":9,"endColumn":39},{"ruleId":"249","replacedBy":"266"},{"ruleId":"251","replacedBy":"267"},{"ruleId":"253","severity":1,"message":"268","line":4,"column":3,"nodeType":"255","messageId":"256","endLine":4,"endColumn":10},{"ruleId":"253","severity":1,"message":"269","line":17,"column":18,"nodeType":"255","messageId":"256","endLine":17,"endColumn":25},{"ruleId":"253","severity":1,"message":"270","line":23,"column":7,"nodeType":"255","messageId":"256","endLine":23,"endColumn":13},{"ruleId":"253","severity":1,"message":"257","line":2,"column":16,"nodeType":"255","messageId":"256","endLine":2,"endColumn":20},{"ruleId":"253","severity":1,"message":"259","line":2,"column":22,"nodeType":"255","messageId":"256","endLine":2,"endColumn":28},{"ruleId":"253","severity":1,"message":"271","line":6,"column":19,"nodeType":"255","messageId":"256","endLine":6,"endColumn":29},{"ruleId":"253","severity":1,"message":"261","line":8,"column":7,"nodeType":"255","messageId":"256","endLine":8,"endColumn":14},{"ruleId":"253","severity":1,"message":"262","line":9,"column":7,"nodeType":"255","messageId":"256","endLine":9,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":26,"column":11,"nodeType":"274","endLine":26,"endColumn":22},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"249","replacedBy":"275"},{"ruleId":"251","replacedBy":"276"},{"ruleId":"253","severity":1,"message":"268","line":4,"column":3,"nodeType":"255","messageId":"256","endLine":4,"endColumn":10},{"ruleId":"253","severity":1,"message":"277","line":18,"column":8,"nodeType":"255","messageId":"256","endLine":18,"endColumn":13},{"ruleId":"253","severity":1,"message":"278","line":1,"column":10,"nodeType":"255","messageId":"256","endLine":1,"endColumn":33},{"ruleId":"253","severity":1,"message":"279","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":21},{"ruleId":"249","replacedBy":"280"},{"ruleId":"251","replacedBy":"281"},{"ruleId":"253","severity":1,"message":"282","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"283","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"282","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"283","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"284","line":4,"column":10,"nodeType":"255","messageId":"256","endLine":4,"endColumn":17},{"ruleId":"253","severity":1,"message":"285","line":4,"column":19,"nodeType":"255","messageId":"256","endLine":4,"endColumn":29},{"ruleId":"253","severity":1,"message":"286","line":5,"column":17,"nodeType":"255","messageId":"256","endLine":5,"endColumn":20},{"ruleId":"253","severity":1,"message":"287","line":5,"column":22,"nodeType":"255","messageId":"256","endLine":5,"endColumn":27},{"ruleId":"253","severity":1,"message":"288","line":10,"column":17,"nodeType":"255","messageId":"256","endLine":10,"endColumn":28},{"ruleId":"272","severity":1,"message":"273","line":22,"column":7,"nodeType":"274","endLine":27,"endColumn":8},{"ruleId":"289","severity":1,"message":"290","line":51,"column":30,"nodeType":"291","messageId":"292","endLine":51,"endColumn":32},{"ruleId":"289","severity":1,"message":"290","line":81,"column":41,"nodeType":"291","messageId":"292","endLine":81,"endColumn":43},{"ruleId":"253","severity":1,"message":"293","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":13},{"ruleId":"253","severity":1,"message":"294","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":22},{"ruleId":"253","severity":1,"message":"295","line":1,"column":28,"nodeType":"255","messageId":"256","endLine":1,"endColumn":36},{"ruleId":"253","severity":1,"message":"286","line":4,"column":17,"nodeType":"255","messageId":"256","endLine":4,"endColumn":20},{"ruleId":"253","severity":1,"message":"287","line":4,"column":22,"nodeType":"255","messageId":"256","endLine":4,"endColumn":27},{"ruleId":"253","severity":1,"message":"296","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":19},{"ruleId":"253","severity":1,"message":"297","line":6,"column":64,"nodeType":"255","messageId":"256","endLine":6,"endColumn":70},{"ruleId":"253","severity":1,"message":"288","line":8,"column":17,"nodeType":"255","messageId":"256","endLine":8,"endColumn":28},{"ruleId":"272","severity":1,"message":"273","line":19,"column":7,"nodeType":"274","endLine":24,"endColumn":8},{"ruleId":"272","severity":1,"message":"298","line":97,"column":15,"nodeType":"274","endLine":97,"endColumn":18},{"ruleId":"253","severity":1,"message":"299","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"283","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"300","line":6,"column":31,"nodeType":"255","messageId":"256","endLine":6,"endColumn":38},{"ruleId":"253","severity":1,"message":"301","line":6,"column":48,"nodeType":"255","messageId":"256","endLine":6,"endColumn":55},{"ruleId":"253","severity":1,"message":"302","line":7,"column":24,"nodeType":"255","messageId":"256","endLine":7,"endColumn":36},{"ruleId":"253","severity":1,"message":"303","line":7,"column":38,"nodeType":"255","messageId":"256","endLine":7,"endColumn":50},{"ruleId":"304","severity":1,"message":"305","line":11,"column":26,"nodeType":"306","messageId":"307","endLine":11,"endColumn":27},{"ruleId":"253","severity":1,"message":"283","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"272","severity":1,"message":"298","line":60,"column":33,"nodeType":"274","endLine":60,"endColumn":36},{"ruleId":"253","severity":1,"message":"283","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"269","line":7,"column":10,"nodeType":"255","messageId":"256","endLine":7,"endColumn":17},{"ruleId":"272","severity":1,"message":"298","line":47,"column":33,"nodeType":"274","endLine":47,"endColumn":36},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'Recaptcha' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'CreateAuditMenu' is assigned a value but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.",["308"],["309"],"'Divider' is defined but never used.","'display' is defined but never used.","'layout' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["308"],["309"],"'store' is defined but never used.","'getAllByPlaceholderText' is defined but never used.","'uploadPhoto' is defined but never used.",["308"],["309"],"'Component' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ColumnGroup' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormProvider' is defined but never used.","'TextArea' is defined but never used.","'getAudits' is defined but never used.","'submit' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]