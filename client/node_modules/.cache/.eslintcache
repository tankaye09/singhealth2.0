[{"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js":"3","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"5","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"6","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js":"9","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js":"11","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js":"13","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js":"14","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"15","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"16","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js":"17","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"18","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts":"19","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts":"20","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"21","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js":"22","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js":"23","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js":"24","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js":"25","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js":"26","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js":"27","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js":"28","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js":"29","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js":"30","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js":"31","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js":"32","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js":"33","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js":"34","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js":"35","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js":"36","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js":"37","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js":"38","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js":"39"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":3399,"mtime":1617915977924,"results":"43","hashOfConfig":"41"},{"size":1829,"mtime":1617849394394,"results":"44","hashOfConfig":"41"},{"size":2553,"mtime":1617908956492,"results":"45","hashOfConfig":"41"},{"size":1014,"mtime":1617248893153,"results":"46","hashOfConfig":"41"},{"size":5724,"mtime":1618381055234,"results":"47","hashOfConfig":"41"},{"size":8522,"mtime":1618380998596,"results":"48","hashOfConfig":"41"},{"size":416,"mtime":1617932511100,"results":"49","hashOfConfig":"41"},{"size":346,"mtime":1615042085091,"results":"50","hashOfConfig":"41"},{"size":2822,"mtime":1617799141892,"results":"51","hashOfConfig":"41"},{"size":1556,"mtime":1615042085085,"results":"52","hashOfConfig":"41"},{"size":335,"mtime":1617873215632,"results":"53","hashOfConfig":"41"},{"size":367,"mtime":1617869718833,"results":"54","hashOfConfig":"41"},{"size":383,"mtime":1617785633533,"results":"55","hashOfConfig":"41"},{"size":655,"mtime":1617780063882,"results":"56","hashOfConfig":"41"},{"size":11890,"mtime":1618330024972,"results":"57","hashOfConfig":"41"},{"size":1104,"mtime":1617249822114,"results":"58","hashOfConfig":"41"},{"size":1353,"mtime":1616680756599,"results":"59","hashOfConfig":"41"},{"size":1168,"mtime":1616680756601,"results":"60","hashOfConfig":"41"},{"size":11247,"mtime":1618329968536,"results":"61","hashOfConfig":"41"},{"size":1102,"mtime":1617913852964,"results":"62","hashOfConfig":"41"},{"size":4160,"mtime":1617790766858,"results":"63","hashOfConfig":"41"},{"size":484,"mtime":1616683440095,"results":"64","hashOfConfig":"41"},{"size":9685,"mtime":1616683293777,"results":"65","hashOfConfig":"41"},{"size":839,"mtime":1617186663232,"results":"66","hashOfConfig":"41"},{"size":916,"mtime":1617186927393,"results":"67","hashOfConfig":"41"},{"size":4479,"mtime":1618323013283,"results":"68","hashOfConfig":"41"},{"size":268,"mtime":1617191722548,"results":"69","hashOfConfig":"41"},{"size":6252,"mtime":1617908956481,"results":"70","hashOfConfig":"41"},{"size":6364,"mtime":1617912285329,"results":"71","hashOfConfig":"41"},{"size":439,"mtime":1617786448369,"results":"72","hashOfConfig":"41"},{"size":2087,"mtime":1617910676884,"results":"73","hashOfConfig":"41"},{"size":231,"mtime":1617786537162,"results":"74","hashOfConfig":"41"},{"size":6703,"mtime":1617908956486,"results":"75","hashOfConfig":"41"},{"size":1096,"mtime":1617913845335,"results":"76","hashOfConfig":"41"},{"size":399,"mtime":1617908956499,"results":"77","hashOfConfig":"41"},{"size":4485,"mtime":1617914410578,"results":"78","hashOfConfig":"41"},{"size":5060,"mtime":1617915000400,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"n2tzlt",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"82"},"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js",[],["176","177"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["178","179","180","181","182","183","184"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from \"antd/lib/menu/MenuItem\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst CreateAuditMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"fbchecklist\">\r\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\r\n    </Menu.Item>\r\n\r\n    <Menu.Item key=\"nonfbchecklist\">\r\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass StaffLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"audits\">\r\n          <NavLink to=\"/auditlist\">Audits</NavLink>\r\n        </Menu.Item>\r\n\r\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\r\n          <Menu.Item key=\"fbchecklist\">\r\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"nonfbchecklist\">\r\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\r\n          </Menu.Item>\r\n        </SubMenu> */}\r\n\r\n        <Menu.Item key=\"createtenant\">\r\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"directory\">\r\n          <NavLink to=\"/directory\">Directory</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"viewaudit\">\r\n          <NavLink to=\"/viewaudit\">View Audit</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass TenantLeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"tenanthome\">\r\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"editaudit\">\r\n          <NavLink to=\"/tenant/editaudit\">Edit Audit</NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"viewaudittenant\">\r\n          <NavLink to=\"/viewaudittenant\">View Audit</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nclass LeftMenu extends Component {\r\n  render() {\r\n    if (this.props.auth.user.usertype === \"staff\") {\r\n      return <StaffLeftMenu />;\r\n    } else if (this.props.auth.user.usertype === \"tenant\") {\r\n      return <TenantLeftMenu />;\r\n    } else return <div></div>;\r\n  }\r\n}\r\n\r\nLeftMenu.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(LeftMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["185","186","187"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["188"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["189"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],["190","191"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js",["192","193"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["194","195","196","197","198","199"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\">\r\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Hello {user.name}</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],["200","201"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["202","203"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["204"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js",["205"],"import { getAllByPlaceholderText } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\r\n\r\nexport const submit = (data) => (dispatch) => {\r\n  console.log(\"submit\", data);\r\n  axios\r\n    .post(\"/api/audits/add\", data)\r\n    .then(() =>\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Audit Created\",\r\n      })\r\n    )\r\n    .catch((error) => {\r\n      console.log(\"in the error\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const display = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/audits\")\r\n    .then((response) => {\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // console.log(data.length);\r\n      onDataReceived(data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAudit = (data) => {\r\n  console.log(data);\r\n  axios.put(\"/api/audits/update\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js",["206"],"import React, { Component } from \"react\";\r\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\r\nimport { uploadPhoto } from \"../../actions/photoActions\";\r\nconst fileUpload = require('fuctbase64');\r\n\r\nexport default class PhotoPop extends Component {\r\n    state = {\r\n        image: null,\r\n        date: null,\r\n        description: \"\",\r\n        location: \"\",\r\n        photo: null,\r\n        visible: false,\r\n    }\r\n\r\n    fileSelectedHandler = event => {\r\n        // console.log(event.target.files[0]);\r\n        fileUpload(event)\r\n            .then((data) => {\r\n                // console.log(\"base64: \", data.base64);\r\n                this.setState({\r\n                    image: data.base64\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        this.setState({ date: date });\r\n    };\r\n\r\n\r\n    upload = (values) => {\r\n        // console.log(values);\r\n        this.showModal2();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    showModal2 = () => {\r\n        this.setState({\r\n            visible2: true,\r\n        });\r\n    };\r\n\r\n    handleUploadOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"photo_upload\"\r\n                    className=\"photo-upload\"\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item>\r\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"date\"\r\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\r\n                    >\r\n                        <DatePicker\r\n                            placeholder=\"Date\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Description\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Description\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.description}\r\n                            id=\"description\"\r\n                            type=\"description\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"location\"\r\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Location\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.location}\r\n                            id=\"location\"\r\n                            type=\"location\"\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"upload-photo-button\"\r\n                        onClick={() => { this.upload(this.state); }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"\"\r\n                    visible={this.state.visible2}\r\n                    onOk={this.handleUploadOk}\r\n                    okButtonProps={{ disabled: false }}\r\n                    cancelButtonProps={{ disabled: true, visible: false, }}\r\n                >\r\n                    <p>Photo Uploaded!</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}",["207","208"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js",["209","210"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nStaffRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(StaffRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js",["211","212"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nTenantRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(TenantRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js",["213","214","215","216","217","218","219"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js",["220","221"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTenants, setSelectedTenant } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormProvider } from \"antd/lib/form/context\";\r\n\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      tenantInfo: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  onCreateClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    if (record.type === \"F&B\") {\r\n      this.props.history.push(\"/checklistFB\");\r\n    } else this.props.history.push(\"/checklistNonFB\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n  onEditClick = () => ({\r\n    //pass props to checklist\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n  });\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      {\r\n        title: \"Auditor\",\r\n        dataIndex: \"auditor\",\r\n        key: \"auditor\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"auditor\"),\r\n      },\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"id\"),\r\n      },\r\n      {\r\n        title: \"FB/NonFB\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Audit Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onCreateClick(record)}\r\n            >\r\n              Create\r\n            </Button>\r\n            <p></p>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onEditClick(record)}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.tenantData}\r\n          scroll={{ x: 400, y: 300 }}\r\n          title={() => <div className=\"table-title\">Tenants</div>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\r\n  Directory\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js",["222","223","224","225","226"],"import React, { Component, TextArea } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Input, Table, Button, Tag, Space } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { display } from \"../actions/auditActions.js\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  display,\r\n};\r\n\r\nclass AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"http://localhost:5000/api/audits\")\r\n    //   .then((response) => {\r\n    //     this.setState({ audits: response.data });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n    this.props.display((data) => {\r\n      console.log(data);\r\n      this.setState({ audits: data });\r\n    });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.audits);\r\n    const columns = [\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        dataIndex: \"location\",\r\n        key: \"location\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"location\"),\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"date\"),\r\n      },\r\n      {\r\n        title: \"Audit Score\",\r\n        dataIndex: \"total_score\",\r\n        key: \"total_score\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"total_score\"),\r\n      },\r\n      {\r\n        title: \"View Audit\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              onClick={() =>\r\n                window.open(\r\n                  \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png\"\r\n                )\r\n              }\r\n            >\r\n              View Image\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.audits}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n          scroll={{ x: 400, y: 300 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AuditList);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js",["227","228","229","230","231","232"],"import React, { ReactDOM, Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerTenant } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\nimport tenantData from \"../../data/tenantTypes.json\";\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = institutionsData;\r\nconst tenantTypes = tenantData;\r\n\r\nclass CreateTenant extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      type: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  // TODO send email to tenant with login details\r\n\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      type: values.type,\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerTenant(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n        initialValues={{\r\n          auditor: user.name,\r\n        }}\r\n      >\r\n        <h1>Create a Tenant Account</h1>\r\n\r\n        {/* No name, replace with id for annonymity */}\r\n\r\n        <Form.Item\r\n          label=\"Tenant Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Tenant Name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            error={errors.name}\r\n            id=\"name\"\r\n            type=\"name\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Type\"\r\n          name=\"type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select F&B or non-F&B!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            className=\"dropdown\"\r\n            placeholder=\"F&B or Non-F&B\"\r\n            options={tenantTypes}\r\n            onChange={this.onDropdownChange}\r\n            id=\"type\"\r\n            type=\"type\"\r\n            value={this.state.type}\r\n            error={errors.type}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Address!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address}\r\n            error={errors.address}\r\n            id=\"address\"\r\n            type=\"address\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Institution\"\r\n          name=\"institution\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select an institution!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            className=\"dropdown\"\r\n            icon={MailOutlined}\r\n            placeholder=\"Institution\"\r\n            options={institutions}\r\n            onChange={this.onDropdownChange}\r\n            id=\"institution\"\r\n            type=\"institution\"\r\n            value={this.state.institution}\r\n            error={errors.institution}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Auditor\"\r\n          name=\"auditor\"\r\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Auditor\"\r\n            onChange={this.onChange}\r\n            value={this.state.auditor}\r\n            error={errors.auditor}\r\n            id=\"auditor\"\r\n            type=\"auditor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Create Tenant\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nCreateTenant.propTypes = {\r\n  registerTenant: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerTenant })(\r\n  withRouter(CreateTenant)\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js",["233"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n// anonymous function\r\nexport default function (state = initialState, action) {\r\n  console.log(\"in reducer\");\r\n  switch (action.type) {\r\n    case SET_SELECTED_TENANT:\r\n      return { ...state }, action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js",["234","235"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Progress,\r\n  Image,\r\n  Input,\r\n  Comment,\r\n  Form,\r\n  Button,\r\n} from \"antd\";\r\nimport dateformat from \"dateformat\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nexport default class ViewAuditAuditor extends Component {\r\n  state = {\r\n    input: \"85\",\r\n    tenant: \"tenant1\",\r\n    auditor: \"auditor\",\r\n    // auditorComments: [\"Bla\", \"blabla\"],\r\n    // tenantComments: [\"Response\", \"response\"],\r\n    comments: [\r\n      {\r\n        content: \"Please clear your rubbish as seen in photo\",\r\n        date: \"2015-05-29T15:30:17.983Z\",\r\n        author: \"auditor\",\r\n      },\r\n      {\r\n        content: \"I have cleared my rubbish, this is proof\",\r\n        date: \"2016-05-29T15:30:17.983Z\",\r\n        author: \"tenant1\",\r\n      },\r\n      {\r\n        content: \"I just checked again this morning and rubbish not cleared\",\r\n        date: \"2017-05-29T15:30:17.983Z\",\r\n        author: \"auditor\",\r\n      },\r\n      {\r\n        content: \"Ok, it is cleared for sure this time\",\r\n        date: \"2022-06-29T15:30:17.983Z\",\r\n        author: \"tenant1\",\r\n      },\r\n    ],\r\n    image: [\r\n      {\r\n        base64:\r\n          \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\",\r\n        date: \"2018-05-29T15:30:17.983Z\",\r\n      },\r\n    ],\r\n    decodedImage: \"\",\r\n    newComment: \"\",\r\n  };\r\n\r\n  displayComments() {\r\n    var output = [];\r\n    var Comm = [];\r\n    for (\r\n      var i = 0;\r\n      i < Math.max(this.state.comments.length, this.state.image.length);\r\n      i++\r\n    ) {\r\n      Comm.push(this.state.comments[i]);\r\n      if (this.state.image[i] != null) {\r\n        Comm.push(this.state.image[i]);\r\n      }\r\n    }\r\n    Comm = Comm.sort((a, b) => a.date > b.date);\r\n    console.log(Comm);\r\n\r\n    for (var j = 0; j < Comm.length; j++) {\r\n      if (Comm[j].content) {\r\n        output.push(\r\n          <div>\r\n            <Comment\r\n              author={<a>{Comm[j].author}</a>}\r\n              className=\"comment\"\r\n              content={<p>{Comm[j].content}</p>}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        output.push(\r\n          <div className=\"image\">\r\n            <Image\r\n              width={100}\r\n              src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return <div>{output}</div>;\r\n  }\r\n\r\n  onChange = (value) => {\r\n    console.log(value.Text);\r\n    this.setState({\r\n      newComment: value,\r\n    });\r\n    console.log(this.state.newComment);\r\n  };\r\n\r\n  newComment = (values) => {\r\n    // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n    this.setState({\r\n      newComment: [\r\n        {\r\n          content: values.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          author: \"auditor\",\r\n        },\r\n      ],\r\n    });\r\n    // console.log(this.state.newComment)\r\n  };\r\n\r\n  submitComment = () => {\r\n    var tempArray = this.state.comments;\r\n    console.log(tempArray);\r\n    tempArray.push(this.state.newComment[0]);\r\n    console.log(tempArray);\r\n    this.setState({\r\n      comments: tempArray,\r\n    });\r\n    console.log(this.state.comments);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p></p>\r\n        <Progress\r\n          className=\"score\"\r\n          type=\"circle\"\r\n          percent={this.state.input}\r\n          width={200}\r\n        />\r\n        <div>\r\n          <Text className=\"name\">Tenant: {this.state.tenant}</Text>\r\n          <div />\r\n          <Text className=\"name\">Auditor: {this.state.auditor}</Text>\r\n          <div />\r\n          {this.displayComments()}\r\n          <div />\r\n          <Form\r\n            className=\"addComment\"\r\n            onChange={this.newComment}\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n          >\r\n            <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n              <TextArea\r\n                className=\"addCommentText\"\r\n                placeholder=\"Add Comment\"\r\n                rows={4}\r\n                allowClear={true}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                Submit Comment\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAuditTenant.js",["236","237","238"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Progress,\r\n  Image,\r\n  Input,\r\n  Comment,\r\n  Form,\r\n  Button,\r\n} from \"antd\";\r\nimport dateformat from \"dateformat\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { display, updateAudit } from \"../actions/auditActions.js\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nclass ViewAuditTenant extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    audit: \"\",\r\n    total_score: \"\",\r\n    tenantID: \"\",\r\n    auditor: \"auditor\",\r\n    // auditorComments: [\"Bla\", \"blabla\"],\r\n    // tenantComments: [\"Response\", \"response\"],\r\n    comment: \"\",\r\n    image: \"\",\r\n    date: \"\",\r\n    catCounts: \"\",\r\n    type: \"\",\r\n    decodedImage: \"\",\r\n    newComment: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      _id: this.props.tenantInfo.record._id,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n      comment: this.props.tenantInfo.record.comment,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      type: this.props.tenantInfo.record.type,\r\n    });\r\n  }\r\n\r\n  displayComments() {\r\n    var output = [];\r\n    var Comm = [];\r\n    for (\r\n      var i = 0;\r\n      i < Math.max(this.state.comment.length, this.state.image.length);\r\n      i++\r\n    ) {\r\n      Comm.push(this.state.comment[i]);\r\n      if (this.state.image[i] != null) {\r\n        Comm.push(this.state.image[i]);\r\n      }\r\n    }\r\n    Comm = Comm.sort((a, b) => a.date > b.date);\r\n    console.log(Comm);\r\n\r\n    for (var j = 0; j < Comm.length; j++) {\r\n      if (Comm[j].content) {\r\n        output.push(\r\n          <div>\r\n            <Comment\r\n              author={<a>{Comm[j].author}</a>}\r\n              className=\"comment\"\r\n              content={<p>{Comm[j].content}</p>}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        output.push(\r\n          <div className=\"image\">\r\n            <Image\r\n              width={100}\r\n              src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return <div>{output}</div>;\r\n  }\r\n\r\n  onChange = (value) => {\r\n    console.log(value.Text);\r\n    console.log(this.state.newComment);\r\n  };\r\n\r\n  newComment = (values) => {\r\n    // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n    this.setState({\r\n      newComment: [\r\n        {\r\n          content: values.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          author: \"tenant\",\r\n        },\r\n      ],\r\n    });\r\n    // console.log(this.state.newComment)\r\n  };\r\n\r\n  submitComment = () => {\r\n    var tempArray = this.state.comment;\r\n    console.log(tempArray);\r\n    tempArray.push(this.state.newComment[0]);\r\n    console.log(tempArray);\r\n    this.setState({\r\n      comment: tempArray,\r\n    });\r\n    console.log(this.state.comment);\r\n    this.update();\r\n  };\r\n\r\n  update = () => {\r\n    console.log(this.state);\r\n    updateAudit({\r\n      _id: this.props.tenantInfo.record._id,\r\n      type: this.props.tenantInfo.record.type,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      comment: this.state.comment,\r\n      location: this.props.tenantInfo.record.location,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p></p>\r\n        <Progress\r\n          className=\"score\"\r\n          type=\"circle\"\r\n          percent={this.state.total_score}\r\n          width={200}\r\n        />\r\n        <div>\r\n          <Text className=\"name\">Tenant: {this.state.tenantID}</Text>\r\n          <div />\r\n          <Text className=\"name\">Auditor: {this.state.auditor}</Text>\r\n          <div />\r\n          {this.displayComments()}\r\n          <div />\r\n          <Form\r\n            className=\"addComment\"\r\n            onChange={this.newComment}\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n          >\r\n            <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n              <TextArea\r\n                className=\"addCommentText\"\r\n                placeholder=\"Add Comment\"\r\n                rows={4}\r\n                allowClear={true}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                Submit Comment\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewAuditTenant.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ViewAuditTenant);\r\n",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":2,"column":16,"nodeType":"245","messageId":"246","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"247","line":2,"column":22,"nodeType":"245","messageId":"246","endLine":2,"endColumn":30},{"ruleId":"243","severity":1,"message":"248","line":2,"column":32,"nodeType":"245","messageId":"246","endLine":2,"endColumn":38},{"ruleId":"243","severity":1,"message":"249","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":16},{"ruleId":"243","severity":1,"message":"250","line":8,"column":7,"nodeType":"245","messageId":"246","endLine":8,"endColumn":14},{"ruleId":"243","severity":1,"message":"251","line":9,"column":7,"nodeType":"245","messageId":"246","endLine":9,"endColumn":20},{"ruleId":"243","severity":1,"message":"252","line":11,"column":7,"nodeType":"245","messageId":"246","endLine":11,"endColumn":22},{"ruleId":"243","severity":1,"message":"244","line":2,"column":16,"nodeType":"245","messageId":"246","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"250","line":8,"column":7,"nodeType":"245","messageId":"246","endLine":8,"endColumn":14},{"ruleId":"243","severity":1,"message":"251","line":9,"column":7,"nodeType":"245","messageId":"246","endLine":9,"endColumn":20},{"ruleId":"243","severity":1,"message":"253","line":9,"column":41,"nodeType":"245","messageId":"246","endLine":9,"endColumn":46},{"ruleId":"243","severity":1,"message":"254","line":9,"column":31,"nodeType":"245","messageId":"246","endLine":9,"endColumn":39},{"ruleId":"239","replacedBy":"255"},{"ruleId":"241","replacedBy":"256"},{"ruleId":"243","severity":1,"message":"257","line":4,"column":3,"nodeType":"245","messageId":"246","endLine":4,"endColumn":10},{"ruleId":"243","severity":1,"message":"258","line":17,"column":18,"nodeType":"245","messageId":"246","endLine":17,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":2,"column":16,"nodeType":"245","messageId":"246","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"248","line":2,"column":22,"nodeType":"245","messageId":"246","endLine":2,"endColumn":28},{"ruleId":"243","severity":1,"message":"259","line":6,"column":19,"nodeType":"245","messageId":"246","endLine":6,"endColumn":29},{"ruleId":"243","severity":1,"message":"250","line":8,"column":7,"nodeType":"245","messageId":"246","endLine":8,"endColumn":14},{"ruleId":"243","severity":1,"message":"251","line":9,"column":7,"nodeType":"245","messageId":"246","endLine":9,"endColumn":20},{"ruleId":"260","severity":1,"message":"261","line":26,"column":11,"nodeType":"262","endLine":26,"endColumn":22},{"ruleId":"239","replacedBy":"263"},{"ruleId":"241","replacedBy":"264"},{"ruleId":"239","replacedBy":"265"},{"ruleId":"241","replacedBy":"266"},{"ruleId":"243","severity":1,"message":"257","line":4,"column":3,"nodeType":"245","messageId":"246","endLine":4,"endColumn":10},{"ruleId":"243","severity":1,"message":"267","line":1,"column":10,"nodeType":"245","messageId":"246","endLine":1,"endColumn":33},{"ruleId":"243","severity":1,"message":"268","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":21},{"ruleId":"239","replacedBy":"269"},{"ruleId":"241","replacedBy":"270"},{"ruleId":"243","severity":1,"message":"271","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"272","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"271","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"272","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"273","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":17},{"ruleId":"243","severity":1,"message":"274","line":4,"column":19,"nodeType":"245","messageId":"246","endLine":4,"endColumn":29},{"ruleId":"243","severity":1,"message":"275","line":5,"column":17,"nodeType":"245","messageId":"246","endLine":5,"endColumn":20},{"ruleId":"243","severity":1,"message":"276","line":5,"column":22,"nodeType":"245","messageId":"246","endLine":5,"endColumn":27},{"ruleId":"243","severity":1,"message":"277","line":11,"column":17,"nodeType":"245","messageId":"246","endLine":11,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":22,"column":7,"nodeType":"262","endLine":27,"endColumn":8},{"ruleId":"278","severity":1,"message":"279","line":95,"column":41,"nodeType":"280","messageId":"281","endLine":95,"endColumn":43},{"ruleId":"243","severity":1,"message":"282","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":13},{"ruleId":"243","severity":1,"message":"283","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":22},{"ruleId":"243","severity":1,"message":"284","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"275","line":4,"column":32,"nodeType":"245","messageId":"246","endLine":4,"endColumn":35},{"ruleId":"243","severity":1,"message":"285","line":11,"column":9,"nodeType":"245","messageId":"246","endLine":11,"endColumn":15},{"ruleId":"243","severity":1,"message":"277","line":11,"column":17,"nodeType":"245","messageId":"246","endLine":11,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":22,"column":7,"nodeType":"262","endLine":27,"endColumn":8},{"ruleId":"243","severity":1,"message":"286","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"272","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"287","line":6,"column":31,"nodeType":"245","messageId":"246","endLine":6,"endColumn":38},{"ruleId":"243","severity":1,"message":"288","line":6,"column":48,"nodeType":"245","messageId":"246","endLine":6,"endColumn":55},{"ruleId":"243","severity":1,"message":"289","line":7,"column":24,"nodeType":"245","messageId":"246","endLine":7,"endColumn":36},{"ruleId":"243","severity":1,"message":"290","line":7,"column":38,"nodeType":"245","messageId":"246","endLine":7,"endColumn":50},{"ruleId":"291","severity":1,"message":"292","line":11,"column":26,"nodeType":"293","messageId":"294","endLine":11,"endColumn":27},{"ruleId":"243","severity":1,"message":"272","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"295","line":78,"column":23,"nodeType":"262","endLine":78,"endColumn":26},{"ruleId":"243","severity":1,"message":"272","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"258","line":15,"column":10,"nodeType":"245","messageId":"246","endLine":15,"endColumn":17},{"ruleId":"260","severity":1,"message":"295","line":72,"column":23,"nodeType":"262","endLine":72,"endColumn":26},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'CreateAuditMenu' is assigned a value but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.",["296"],["297"],"'Divider' is defined but never used.","'display' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["296"],["297"],["296"],["297"],"'getAllByPlaceholderText' is defined but never used.","'uploadPhoto' is defined but never used.",["296"],["297"],"'Component' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ColumnGroup' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'FormProvider' is defined but never used.","'TextArea' is defined but never used.","'Column' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]