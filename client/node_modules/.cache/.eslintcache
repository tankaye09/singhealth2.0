[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js":"30","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js":"31","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js":"32","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js":"33","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js":"34","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js":"35","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js":"36","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js":"37"},{"size":500,"mtime":1616146148083,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1616146148083,"results":"40","hashOfConfig":"39"},{"size":3300,"mtime":1617931561889,"results":"41","hashOfConfig":"39"},{"size":402,"mtime":1617883876619,"results":"42","hashOfConfig":"39"},{"size":333,"mtime":1616146148083,"results":"43","hashOfConfig":"39"},{"size":11004,"mtime":1618465020052,"results":"44","hashOfConfig":"39"},{"size":11623,"mtime":1618465014948,"results":"45","hashOfConfig":"39"},{"size":2871,"mtime":1618396618409,"results":"46","hashOfConfig":"39"},{"size":6839,"mtime":1618387895022,"results":"47","hashOfConfig":"39"},{"size":808,"mtime":1617625254432,"results":"48","hashOfConfig":"39"},{"size":885,"mtime":1617625254432,"results":"49","hashOfConfig":"39"},{"size":7574,"mtime":1618459361388,"results":"50","hashOfConfig":"39"},{"size":1757,"mtime":1617895778771,"results":"51","hashOfConfig":"39"},{"size":5534,"mtime":1618384912019,"results":"52","hashOfConfig":"39"},{"size":4324,"mtime":1618384912019,"results":"53","hashOfConfig":"39"},{"size":8242,"mtime":1618384912019,"results":"54","hashOfConfig":"39"},{"size":256,"mtime":1617625254432,"results":"55","hashOfConfig":"39"},{"size":1366,"mtime":1618461313843,"results":"56","hashOfConfig":"39"},{"size":1313,"mtime":1616146161416,"results":"57","hashOfConfig":"39"},{"size":4027,"mtime":1617626306221,"results":"58","hashOfConfig":"59"},{"size":328,"mtime":1617895778723,"results":"60","hashOfConfig":"39"},{"size":9564,"mtime":1617625254432,"results":"61","hashOfConfig":"59"},{"size":1065,"mtime":1617625254432,"results":"62","hashOfConfig":"39"},{"size":2348,"mtime":1618385775100,"results":"63","hashOfConfig":"39"},{"size":979,"mtime":1617625254432,"results":"64","hashOfConfig":"39"},{"size":464,"mtime":1616672920849,"results":"65","hashOfConfig":"59"},{"size":356,"mtime":1617895778995,"results":"66","hashOfConfig":"39"},{"size":370,"mtime":1617883876619,"results":"67","hashOfConfig":"39"},{"size":626,"mtime":1616146148083,"results":"68","hashOfConfig":"39"},{"size":8717,"mtime":1618465476945,"results":"69","hashOfConfig":"39"},{"size":2005,"mtime":1617883876287,"results":"70","hashOfConfig":"39"},{"size":6457,"mtime":1617895778759,"results":"71","hashOfConfig":"39"},{"size":1402,"mtime":1618396921616,"results":"72","hashOfConfig":"39"},{"size":218,"mtime":1617883876183,"results":"73","hashOfConfig":"39"},{"size":421,"mtime":1617883876619,"results":"74","hashOfConfig":"39"},{"size":384,"mtime":1617896617126,"results":"75","hashOfConfig":"39"},{"size":8690,"mtime":1618465456076,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"608doq",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"djewvc",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"79"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["165","166"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["167"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["168","169"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["170","171","172","173","174","175"],"import React, { Component, TextArea } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Input, Table, Button, Tag, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { auditInfo, getTenants } from \"../actions/tenantActions\";\nimport PropTypes from \"prop-types\";\n\nimport { display } from \"../actions/auditActions.js\";\n\nconst { Column, ColumnGroup } = Table;\n\nconst Audit = (props) => (\n  <tr>\n    <td>{props.audit.username}</td>\n    <td>{props.audit.image}</td>\n    <td>{props.audit.notes}</td>\n    <td>{props.audit.tags}</td>\n    <td>{props.audit.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteAudit(props.audit._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nconst mapDispatchToProps = {\n  display,\n};\n\nclass AuditList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.state = { audits: [], };\n  }\n\n  componentDidMount() {\n    // axios\n    //   .get(\"http://localhost:5000/api/audits\")\n    //   .then((response) => {\n    //     this.setState({ audits: response.data });\n    //     console.log(response.data);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n    this.props.display((data) => {\n      console.log(data);\n      this.setState({ audits: data });\n    });\n\n  }\n\n  onViewClick = (record) => {\n    //pass to redux\n    this.props.auditInfo({ record });\n    //if FB, go to FB | if non-FB go to non-FB\n    this.props.history.push(\"/viewaudit\");\n    // this.props.tenantInfo = record;\n    console.log({ record });\n  };\n\n  deleteAudit(id) {\n    axios\n      .delete(\"http://localhost:5000/audits/\" + id)\n      .then((res) => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter((el) => el._id !== id),\n    });\n  }\n\n  auditList() {\n    return this.state.audits.map((currentaudit) => {\n      return (\n        <Audit\n          audit={currentaudit}\n          deleteAudit={this.deleteAudit}\n          key={currentaudit._id}\n        />\n      );\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n          .toString()\n          .toLowerCase()\n          .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  render() {\n    // console.log(this.state.audits);\n    const columns = [\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        key: \"type\",\n        fixed: \"left\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"type\"),\n      },\n      {\n        title: \"Tenant ID\",\n        dataIndex: \"tenantID\",\n        key: \"itenantID\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"tenantID\"),\n      },\n      {\n        title: \"Inst.\",\n        dataIndex: \"institution\",\n        key: \"institution\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"institution\"),\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"location\",\n        key: \"location\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"location\"),\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"date\"),\n      },\n      {\n        title: \"Audit Score\",\n        dataIndex: \"total_score\",\n        key: \"total_score\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"total_score\"),\n      },\n      {\n        title: \"View Audit\",\n        dataIndex: \"\",\n        key: \"x\",\n        fixed: \"right\",\n        width: \"20%\",\n        render: (record) => (\n          <div>\n            <Button\n              onClick={() => this.onViewClick(record)}\n            >\n              View Audit\n            </Button>\n          </div>\n        ),\n      },\n    ];\n\n    return (\n      <div className=\"table\">\n        <Table\n          columns={columns}\n          dataSource={this.state.audits}\n          title={() => <div className=\"table-title\">Audits</div>}\n          scroll={{ x: 400, y: 300 }}\n        />\n      </div>\n    );\n  }\n}\n\nAuditList.propTypes = {\n  auditInfo: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  userID: state.auth.user.id,\n});\nexport default connect(mapStateToProps, { auditInfo, getTenants, display })(\n  AuditList\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["176","177"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["178","179"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["180","181","182"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["183"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Recaptcha from \"react-recaptcha\";\n\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n  // might be deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      var { usertype } = \"\";\n      if (this.state.usertypebool) {\n        usertype = \"staff\";\n      } else {\n        usertype = \"tenant\";\n      }\n      const userData = {\n        email: values.email,\n        password: values.password,\n        usertype: usertype,\n      };\n      console.log(values);\n\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    }\n  };\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <Form\n          onFinish={this.onFinish}\n          name=\"normal_login\"\n          className=\"login-register-form\"\n        >\n          <h2>Welcome to SingHealth Audit</h2>\n          <p>Enter your email and password to log in </p>\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your Email!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email || errors.emailnotfound,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password || errors.passwordincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item name=\"usertypebool\">\n            <Checkbox\n              onChange={this.onCheckboxChange}\n              value={this.state.usertypebool}\n              error={errors.usertypebool}\n              id=\"usertypebool\"\n            >\n              Singhealth Staff Member?\n            </Checkbox>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              id=\"login-button\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Log in\n            </Button>\n            New staff member? <Link to=\"/Register\">Register here!</Link>\n          </Form.Item>\n        </Form>\n        <Recaptcha\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n          render=\"explicit\"\n          onloadCallback={console.log(\"onloadCallback\")}\n          verifyCallback={this.verifyCallback}\n        />\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",["184","185","186","187","188","189","190"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Table, Tag, Space, Button } from \"antd\";\nimport { display } from \"../../actions/auditActions.js\";\nimport { auditInfo, getTenant } from \"../../actions/tenantActions\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store.js\";\nimport PropTypes from \"prop-types\";\nconst { Column, ColumnGroup } = Table;\n\nconst Audit = (props) => (\n  <tr>\n    <td>{props.audit.username}</td>\n    <td>{props.audit.image}</td>\n    <td>{props.audit.notes}</td>\n    <td>{props.audit.tags}</td>\n    <td>{props.audit.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteAudit(props.audit._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nclass TenantHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.state = {\n      audits: [],\n      actualAudits: [],\n      tenantId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted: \", store.getState().auth.user.id);\n    getTenant((data) => {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].userId === store.getState().auth.user.id) {\n          this.setState(\n            { tenantId: data[i]._id },\n            console.log(data[i]._id),\n            this.props.display((displayData) => {\n              // console.log(\"displayData is: \", displayData);\n              var tempList = [];\n              for (var i = 0; i < displayData.length; i++) {\n                // console.log(displayData[i].tenantID);\n                if (displayData[i].tenantID === this.state.tenantId) {\n                  tempList.push(displayData[i]);\n                }\n              }\n              // console.log(tempList);\n              this.setState({ actualAudits: tempList });\n            })\n          );\n        }\n      }\n    });\n\n    // this.auditList();\n  }\n\n  deleteAudit(id) {\n    axios\n      .delete(\"http://localhost:5000/audits/\" + id)\n      .then((res) => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter((el) => el._id !== id),\n    });\n  }\n\n  onViewClick = (record) => {\n    //pass to redux\n    this.props.auditInfo({ record });\n    //if FB, go to FB | if non-FB go to non-FB\n    this.props.history.push(\"/viewaudittenant\");\n    // this.props.tenantInfo = record;\n    console.log({ record });\n  };\n\n  auditList() {\n    for (var i = 0; i < this.state.audits.length; i++) {\n      console.log(this.state.audits[i]);\n      if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\n        this.state.actualAudits.push(this.state.audits[i]);\n      }\n    }\n    return this.state.actualAudits.map((currentaudit) => {\n      return (\n        <Audit\n          audit={currentaudit}\n          deleteAudit={this.deleteAudit}\n          key={currentaudit._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"table\">\n        <Table\n          dataSource={this.state.actualAudits}\n          title={() => <div className=\"table-title\">Your Audits</div>}\n          scroll={{ x: 400 }}\n        >\n          <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\n          {/* <Column title=\"Tenant\" dataIndex=\"tenantID\" key=\"tenantID\" /> */}\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\n          <Column\n            title=\"Total Score\"\n            dataIndex=\"total_score\"\n            key=\"total_score\"\n          />\n          <Column\n            title=\"View Audit\"\n            dataIndex=\"view_audit\"\n            key=\"view_audit\"\n            render={(text, record) => (\n              <Button\n                className=\"action-buttons\"\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => this.onViewClick(record)}\n              >\n                View Audit\n              </Button>\n            )}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n\nTenantHome.propTypes = {\n  auditInfo: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  userID: state.auth.user.id,\n});\nexport default connect(mapStateToProps, { auditInfo, getTenant, display })(\n  TenantHome\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["191"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nconst institutions = institutionsData;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      institution: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  onFinish = (values) => {\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      getStaffKey((data) => {\n        // console.log(\"data is: \", data);\n        this.setState({ ...this.state, dbstaffkey: data });\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n        if (this.state.staffkey === this.state.dbstaffkey) {\n          const newUser = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            password2: values.password2,\n            institution: values.institution,\n            usertype: \"staff\",\n          };\n          this.props.registerUser(newUser, this.props.history);\n        } else {\n          alert(\"Staff Key is incorrect!\");\n        }\n      });\n    }\n  };\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <Form\n          name=\"normal_login\"\n          className=\"login-register-form\"\n          onFinish={this.onFinish}\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Name\"\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              // className={classnames(\"\", {\n              // invalid: errors.name,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please input a valid Email!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              // className={classnames(\"\", {\n              //   invalid: errors.email,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              //   invalid: errors.password,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password2\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              { required: true, message: \"Passwords do not match!\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    new Error(\n                      \"The two passwords that you entered do not match!\"\n                    )\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Confirm Password\"\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              // invalid: errors.password2,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"staffkey\"\n            rules={[\n              { required: true, message: \"Please input your staff key!\" },\n            ]}\n          >\n            <Input\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Staff Key\"\n              onChange={this.onChange}\n              value={this.state.staffkey}\n              error={errors.staffkey}\n              id=\"staffkey\"\n              type=\"staffkey\"\n              className={classnames(\"\", {\n                invalid: errors.key || errors.keyincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"institution\"\n            rules={[\n              {\n                required: true,\n                message: \"Please select an institution!\",\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              className=\"dropdown\"\n              icon={MailOutlined}\n              placeholder=\"Institution\"\n              options={institutions}\n              onChange={this.onDropdownChange}\n              id=\"institution\"\n              type=\"institution\"\n              value={this.state.institution}\n              error={errors.institution}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Register\n            </Button>\n            Or <Link to=\"/Login\">Login here</Link>\n          </Form.Item>\n        </Form>\n        <Recaptcha\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n          render=\"explicit\"\n          onloadCallback={console.log(\"onloadCallback\")}\n          verifyCallback={this.verifyCallback}\n        />\n      </div>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",["192"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts",[],["193","194"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js",["195"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["196","197","198","199","200","201"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Button } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\">\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\n            Logout\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"\">Hello {user.name}</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["202","203","204","205","206","207","208"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu> */}\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"editaudit\">\n          <NavLink to=\"/tenant/editaudit\">Edit Audit</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"viewaudittenant\">\n          <NavLink to=\"/viewaudittenant\">View Audit</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["209","210","211"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js",["212","213","214","215"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js",["216","217","218","219","220","221"],"import React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\nimport tenantData from \"../../data/tenantTypes.json\";\n\n// TODO: this should be taken from db\nconst institutions = institutionsData;\nconst tenantTypes = tenantData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  // TODO send email to tenant with login details\n\n  onFinish = (values) => {\n    const newUser = {\n      name: values.name,\n      type: values.type,\n      email: values.email,\n      address: values.address,\n      institution: values.institution,\n      auditor: values.auditor,\n    };\n    console.log(newUser);\n    this.props.registerTenant(newUser, this.props.history);\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { errors } = this.state;\n    const layout = {\n      labelCol: { span: 3 },\n    };\n    return (\n      <Form\n        {...layout}\n        name=\"normal_login\"\n        className=\"login-register-form\"\n        onFinish={this.onFinish}\n        initialValues={{\n          auditor: user.name,\n        }}\n      >\n        <h1>Create a Tenant Account</h1>\n\n        {/* No name, replace with id for annonymity */}\n\n        <Form.Item\n          label=\"Tenant Name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input a valid Name!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Tenant Name\"\n            onChange={this.onChange}\n            value={this.state.name}\n            error={errors.name}\n            id=\"name\"\n            type=\"name\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Type\"\n          name=\"type\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select F&B or non-F&B!\",\n            },\n          ]}\n        >\n          <Select\n            className=\"dropdown\"\n            placeholder=\"F&B or Non-F&B\"\n            options={tenantTypes}\n            onChange={this.onDropdownChange}\n            id=\"type\"\n            type=\"type\"\n            value={this.state.type}\n            error={errors.type}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Email\"\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Address\"\n          name=\"address\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input a valid Address!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Address\"\n            onChange={this.onChange}\n            value={this.state.address}\n            error={errors.address}\n            id=\"address\"\n            type=\"address\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Institution\"\n          name=\"institution\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select an institution!\",\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            className=\"dropdown\"\n            icon={MailOutlined}\n            placeholder=\"Institution\"\n            options={institutions}\n            onChange={this.onDropdownChange}\n            id=\"institution\"\n            type=\"institution\"\n            value={this.state.institution}\n            error={errors.institution}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Auditor\"\n          name=\"auditor\"\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\n        >\n          <Input\n            placeholder=\"Auditor\"\n            onChange={this.onChange}\n            value={this.state.auditor}\n            error={errors.auditor}\n            id=\"auditor\"\n            type=\"auditor\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-register-form-button\"\n          >\n            Create Tenant\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerTenant })(\n  withRouter(CreateTenant)\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js",["222"],"import axios from \"axios\";\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\";\n\n// Get Tenants\nexport const getTenants = (onDataReceived) => (dispatch) => {\n  console.log(\"arrived\");\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(\n      (err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        })\n      // console.log(\"err\")\n    );\n};\n\nexport const getTenant = (onDataReceived) => {\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(() => {\n      alert(\"Error\");\n    });\n};\n\nexport const delTenant = (data) => {\n  console.log(\"arrived\");\n  console.log(data);\n  axios\n    .post(\"/api/tenants\", {\n      _id: data._id\n    })\n    .then(response => {\n      // this.setState({ users: response.data });\n      console.log('deleteUser response', response);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\n// Update tenantInfo in store with the row selected tenantInfo\nexport const setSelectedTenant = (data) => {\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: data,\n  };\n};\n\nexport const auditInfo = (data) => {\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: data,\n  };\n};\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js",["223"],"/* eslint-disable import/no-anonymous-default-export */\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\n\nconst initialState = {};\n\n// anonymous function\nexport default function (state = initialState, action) {\n  console.log(\"in reducer\");\n  switch (action.type) {\n    case SET_SELECTED_TENANT:\n      return { ...state }, action.payload;\n    default:\n      return state;\n  }\n}\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js",["224","225","226","227"],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":4,"column":3,"nodeType":"234","messageId":"235","endLine":4,"endColumn":10},{"ruleId":"232","severity":1,"message":"233","line":4,"column":3,"nodeType":"234","messageId":"235","endLine":4,"endColumn":10},{"ruleId":"232","severity":1,"message":"236","line":17,"column":18,"nodeType":"234","messageId":"235","endLine":17,"endColumn":25},{"ruleId":"232","severity":1,"message":"237","line":1,"column":28,"nodeType":"234","messageId":"235","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"238","line":4,"column":32,"nodeType":"234","messageId":"235","endLine":4,"endColumn":35},{"ruleId":"232","severity":1,"message":"239","line":13,"column":9,"nodeType":"234","messageId":"235","endLine":13,"endColumn":15},{"ruleId":"232","severity":1,"message":"240","line":13,"column":17,"nodeType":"234","messageId":"235","endLine":13,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":24,"column":7,"nodeType":"243","endLine":29,"endColumn":8},{"ruleId":"232","severity":1,"message":"244","line":36,"column":7,"nodeType":"234","messageId":"235","endLine":36,"endColumn":25},{"ruleId":"232","severity":1,"message":"245","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"246","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"245","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"246","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"247","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":13},{"ruleId":"232","severity":1,"message":"248","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":160,"column":32,"nodeType":"251","messageId":"252","endLine":160,"endColumn":34},{"ruleId":"232","severity":1,"message":"253","line":9,"column":41,"nodeType":"234","messageId":"235","endLine":9,"endColumn":46},{"ruleId":"232","severity":1,"message":"254","line":4,"column":10,"nodeType":"234","messageId":"235","endLine":4,"endColumn":17},{"ruleId":"232","severity":1,"message":"255","line":4,"column":19,"nodeType":"234","messageId":"235","endLine":4,"endColumn":29},{"ruleId":"232","severity":1,"message":"238","line":5,"column":17,"nodeType":"234","messageId":"235","endLine":5,"endColumn":20},{"ruleId":"232","severity":1,"message":"256","line":5,"column":22,"nodeType":"234","messageId":"235","endLine":5,"endColumn":27},{"ruleId":"232","severity":1,"message":"240","line":11,"column":17,"nodeType":"234","messageId":"235","endLine":11,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":22,"column":7,"nodeType":"243","endLine":27,"endColumn":8},{"ruleId":"249","severity":1,"message":"250","line":95,"column":41,"nodeType":"251","messageId":"252","endLine":95,"endColumn":43},{"ruleId":"232","severity":1,"message":"257","line":9,"column":31,"nodeType":"234","messageId":"235","endLine":9,"endColumn":39},{"ruleId":"232","severity":1,"message":"258","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":33},{"ruleId":"228","replacedBy":"259"},{"ruleId":"230","replacedBy":"260"},{"ruleId":"232","severity":1,"message":"261","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":21},{"ruleId":"232","severity":1,"message":"262","line":2,"column":16,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"263","line":2,"column":22,"nodeType":"234","messageId":"235","endLine":2,"endColumn":28},{"ruleId":"232","severity":1,"message":"264","line":6,"column":19,"nodeType":"234","messageId":"235","endLine":6,"endColumn":29},{"ruleId":"232","severity":1,"message":"265","line":8,"column":7,"nodeType":"234","messageId":"235","endLine":8,"endColumn":14},{"ruleId":"232","severity":1,"message":"266","line":9,"column":7,"nodeType":"234","messageId":"235","endLine":9,"endColumn":20},{"ruleId":"241","severity":1,"message":"242","line":26,"column":11,"nodeType":"243","endLine":26,"endColumn":22},{"ruleId":"232","severity":1,"message":"262","line":2,"column":16,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"267","line":2,"column":22,"nodeType":"234","messageId":"235","endLine":2,"endColumn":30},{"ruleId":"232","severity":1,"message":"263","line":2,"column":32,"nodeType":"234","messageId":"235","endLine":2,"endColumn":38},{"ruleId":"232","severity":1,"message":"268","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":16},{"ruleId":"232","severity":1,"message":"265","line":8,"column":7,"nodeType":"234","messageId":"235","endLine":8,"endColumn":14},{"ruleId":"232","severity":1,"message":"266","line":9,"column":7,"nodeType":"234","messageId":"235","endLine":9,"endColumn":20},{"ruleId":"232","severity":1,"message":"269","line":11,"column":7,"nodeType":"234","messageId":"235","endLine":11,"endColumn":22},{"ruleId":"232","severity":1,"message":"262","line":2,"column":16,"nodeType":"234","messageId":"235","endLine":2,"endColumn":20},{"ruleId":"232","severity":1,"message":"265","line":8,"column":7,"nodeType":"234","messageId":"235","endLine":8,"endColumn":14},{"ruleId":"232","severity":1,"message":"266","line":9,"column":7,"nodeType":"234","messageId":"235","endLine":9,"endColumn":20},{"ruleId":"232","severity":1,"message":"246","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"236","line":16,"column":10,"nodeType":"234","messageId":"235","endLine":16,"endColumn":17},{"ruleId":"241","severity":1,"message":"270","line":126,"column":23,"nodeType":"243","endLine":126,"endColumn":26},{"ruleId":"241","severity":1,"message":"270","line":139,"column":23,"nodeType":"243","endLine":139,"endColumn":26},{"ruleId":"232","severity":1,"message":"271","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"246","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"272","line":6,"column":31,"nodeType":"234","messageId":"235","endLine":6,"endColumn":38},{"ruleId":"232","severity":1,"message":"273","line":6,"column":48,"nodeType":"234","messageId":"235","endLine":6,"endColumn":55},{"ruleId":"232","severity":1,"message":"274","line":7,"column":24,"nodeType":"234","messageId":"235","endLine":7,"endColumn":36},{"ruleId":"232","severity":1,"message":"275","line":7,"column":38,"nodeType":"234","messageId":"235","endLine":7,"endColumn":50},{"ruleId":"232","severity":1,"message":"276","line":2,"column":43,"nodeType":"234","messageId":"235","endLine":2,"endColumn":54},{"ruleId":"277","severity":1,"message":"278","line":11,"column":26,"nodeType":"279","messageId":"280","endLine":11,"endColumn":27},{"ruleId":"232","severity":1,"message":"246","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"236","line":16,"column":10,"nodeType":"234","messageId":"235","endLine":16,"endColumn":17},{"ruleId":"241","severity":1,"message":"270","line":123,"column":23,"nodeType":"243","endLine":123,"endColumn":26},{"ruleId":"241","severity":1,"message":"270","line":136,"column":23,"nodeType":"243","endLine":136,"endColumn":26},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'display' is defined but never used.","'TextArea' is defined but never used.","'Tag' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'mapDispatchToProps' is assigned a value but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'FormProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Alert' is defined but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Space' is defined but never used.","'Checkbox' is defined but never used.","'getAllByPlaceholderText' is defined but never used.",["281"],["282"],"'uploadPhoto' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'GET_MESSAGE' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]