[{"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js":"3","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"5","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"6","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js":"9","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js":"11","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js":"13","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js":"14","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js":"15","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"16","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"17","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"18","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts":"19","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts":"20","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Audit-list.js":"21","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"22","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Directory.js":"23","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js":"24","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\RegisterTenant.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":2472,"mtime":1616583991584,"results":"29","hashOfConfig":"27"},{"size":1889,"mtime":1615433166415,"results":"30","hashOfConfig":"27"},{"size":823,"mtime":1616162857525,"results":"31","hashOfConfig":"27"},{"size":1025,"mtime":1616162960175,"results":"32","hashOfConfig":"27"},{"size":3611,"mtime":1616579663882,"results":"33","hashOfConfig":"27"},{"size":6455,"mtime":1616673594572,"results":"34","hashOfConfig":"27"},{"size":418,"mtime":1615042085090,"results":"35","hashOfConfig":"27"},{"size":346,"mtime":1615042085091,"results":"36","hashOfConfig":"27"},{"size":2403,"mtime":1616672525050,"results":"37","hashOfConfig":"27"},{"size":1556,"mtime":1615042085085,"results":"38","hashOfConfig":"27"},{"size":615,"mtime":1615042085086,"results":"39","hashOfConfig":"27"},{"size":139,"mtime":1615042085081,"results":"40","hashOfConfig":"27"},{"size":214,"mtime":1615042085089,"results":"41","hashOfConfig":"27"},{"size":317,"mtime":1615042085089,"results":"42","hashOfConfig":"27"},{"size":655,"mtime":1615042085088,"results":"43","hashOfConfig":"27"},{"size":1096,"mtime":1615370193985,"results":"44","hashOfConfig":"27"},{"size":1353,"mtime":1615432421842,"results":"45","hashOfConfig":"27"},{"size":1168,"mtime":1615348162997,"results":"46","hashOfConfig":"27"},{"size":2759,"mtime":1615466733171,"results":"47","hashOfConfig":"27"},{"size":6928,"mtime":1615469450918,"results":"48","hashOfConfig":"27"},{"size":2198,"mtime":1615466774054,"results":"49","hashOfConfig":"27"},{"size":4853,"mtime":1616665735896,"results":"50","hashOfConfig":"27"},{"size":5470,"mtime":1616571586542,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"n2tzlt",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js",[],["113","114"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["115","116","117"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nclass LeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"viewAudits\">\r\n          <NavLink to=\"/audits\">Audits</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"createAudit\">\r\n          <NavLink to=\"/createAudit\">Create Audit</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"directory\">\r\n          <NavLink to=\"/directory\">Directory</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"createTenant\">\r\n          <NavLink to=\"/createTenant\">Create Tenant</NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default LeftMenu;\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["118","119","120","121"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["122"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/audits\");\r\n    }\r\n  }\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/audits\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Form\r\n        onFinish={this.onFinish}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n      >\r\n        <h1>Welcome to SingHealth Audit</h1>\r\n        <h2>Enter your username and password to log in </h2>\r\n        <h3>Key: {}</h3>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.email || errors.emailnotfound,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.password || errors.passwordincorrect,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or if you are a new staff member,{\" \"}\r\n          <Link to=\"/Register\">register here!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["123"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["124","125","126","127","128","129","130"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <Button onClick={this.onLogoutClick} type=\"text\">\r\n            Logout\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Name of user</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],["131","132"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Audit-list.js",["133","134","135","136"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { getAudits } from \"../data/AuditData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/audits\")\r\n      .then((response) => {\r\n        this.setState({ audits: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n        >\r\n          <Column title=\"Username\" dataIndex=\"username\" key=\"username\" />\r\n          <Column\r\n            title=\"Image\"\r\n            dataIndex=\"image\"\r\n            key=\"image\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Notes\" dataIndex=\"notes\" key=\"notes\" />\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Tags\"\r\n            dataIndex=\"tags\"\r\n            key=\"tags\"\r\n            render={(tags) => (\r\n              <>\r\n                {tags.map((tag) => (\r\n                  <Tag color=\"blue\" key={tag}>\r\n                    {tag}\r\n                  </Tag>\r\n                ))}\r\n              </>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst data = getAudits(\"Pamela\");\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["137","138","139"],"import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport Questions from \"../data/questions.json\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass ChecklistNonFB extends Component {\r\n  componentWillMount = () => {\r\n    this.selectedCheckboxes = new Set();\r\n  };\r\n\r\n  toggleCheckbox = (label) => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = (formSubmitEvent) => {\r\n    formSubmitEvent.preventDefault();\r\n\r\n    for (const checkbox of this.selectedCheckboxes) {\r\n      console.log(checkbox, \"is selected.\");\r\n    }\r\n  };\r\n\r\n  createprofCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleprofCheckCount(e)}\r\n    />\r\n  );\r\n\r\n  state = {\r\n    checked: false,\r\n    profcount: 0,\r\n  };\r\n  handleprofCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.profcount++, this.logCount);\r\n    } else {\r\n      this.setState((state) => state.profcount--, this.logCount);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panels\">\r\n        <Collapse defaultActiveKey=\"1\">\r\n          <Panel\r\n            header=\"1. Professionalism & Staff Hygiene\"\r\n            key=\"1\"\r\n            className=\"bg-orange text-white\"\r\n          >\r\n            <Collapse defaultActiveKey=\"1\">\r\n              <Panel\r\n                header=\"Professionalism\"\r\n                key=\"1\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  dataSource={[\r\n                    \"Shop is open and ready to service patients/visitors according to operating hours.\",\r\n                    \"Staff Attendance: adequate staff for peak and non-peak hours.\",\r\n                    \"At least one clearly assigned person in-charge on site.\",\r\n                  ]}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                      <div>{this.createprofCheckbox()}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n\r\n              <Panel\r\n                header=\"Staff Hygiene\"\r\n                key=\"2\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  dataSource={[\r\n                    \"Staff uniform/attire is not soiled.\",\r\n                    \"Staff who are unfit for work due to illness should not report to work\",\r\n                    \"Staff who are fit for work but suffering from the lingering effects of a cough and/or cold should cover their mouths with a surgical mask.\",\r\n                  ]}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                      <div>{this.createprofCheckbox()}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n            </Collapse>\r\n            <div class=\"pt-10 font-bold text-right\">\r\n              Score: {Math.round((20 / 6) * this.state.profcount)}/20\r\n            </div>\r\n          </Panel>\r\n\r\n          <Panel\r\n            header=\"2. Housekeeping & General Cleanliness\"\r\n            key=\"2\"\r\n            className=\"bg-orange text-white\"\r\n          >\r\n            <Collapse defaultActiveKey=\"1\">\r\n              <Panel\r\n                header=\"General Environment Cleanliness\"\r\n                key=\"1\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  // dataSource={dataNonFB.data2_1}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n            </Collapse>\r\n            <div class=\"pt-10 font-bold text-right\">Score: __/40</div>\r\n          </Panel>\r\n\r\n          <Panel\r\n            header=\"3. Workplace Safety & Health\"\r\n            key=\"3\"\r\n            className=\"bg-orange text-white\"\r\n          >\r\n            <Collapse defaultActiveKey=\"1\">\r\n              <Panel\r\n                header=\"General Safety\"\r\n                key=\"1\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  // dataSource={dataNonFB.data3_1}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n\r\n              <Panel\r\n                header=\"Fire & Emergency Safety\"\r\n                key=\"2\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  // dataSource={dataNonFB.data3_2}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n\r\n              <Panel\r\n                header=\"Electrical Safety\"\r\n                key=\"3\"\r\n                className=\"bg-orange text-white\"\r\n              >\r\n                <List\r\n                  // dataSource={dataNonFB.data3_3}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <div className=\"create-audit-row\">{item}</div>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Panel>\r\n            </Collapse>\r\n            <div class=\"pt-10 font-bold text-right\">Score: __/40</div>\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n\r\n      // {/*  <div class=\"pt-20\">\r\n      //         <TextArea placeholder=\"Remarks\" allowClear onChange={onChange} />\r\n      //     </div>\r\n      //     <Divider />\r\n      //     <div class=\"create-audit-row\">\r\n      //         <div>Professionalism & Staff Hygiene</div>\r\n      //         <div>__/20%</div>\r\n      //     </div>\r\n      //     <div class=\"create-audit-row\">\r\n      //         <div>Housekeeping & General Cleanliness</div>\r\n      //         <div>__/40%</div>\r\n      //     </div>\r\n      //     <div class=\"create-audit-row\">\r\n      //         <div>Workplace Safety & Health</div>\r\n      //         <div>__/40%</div>\r\n      //     </div>\r\n      //     <div class=\"create-audit-row font-bold\">\r\n      //         <div>Total</div>\r\n      //         <div>__/100%</div>\r\n      //     </div> */}\r\n    );\r\n  }\r\n}\r\nexport default ChecklistNonFB;\r\n",["140","141"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Directory.js",["142","143","144"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\nimport { getData } from \"../data/StoreData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nexport default class Directory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //code runs before the page loads\r\n    axios.get(\"http://localhost:5000/users/\").then((response) => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          users: response.data.map((user) => user.username),\r\n          username: response.data[0].username, //set username as the first username in the database\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"table\">\r\n        <Table\r\n          // columns={columns}\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">CGH</div>}\r\n          size=\"middle\"\r\n          pagination={{ position: \"bottomLeft\" }}\r\n        >\r\n          <Column\r\n            title=\"Store Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(record.image, \"_blank\")}>\r\n                  {text}\r\n                </td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Location\" dataIndex=\"location\" key=\"location\" />\r\n          <Column title=\"Terms\" dataIndex=\"terms\" key=\"terms\" />\r\n          <Column title=\"Expiry\" dataIndex=\"expiry\" key=\"expiry\" />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Store Name',\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         render: (text, record) => <a>\r\n//             <td onClick={() => window.open(text, \"_blank\")} /> {text} </a>,\r\n//     },\r\n//     {\r\n//         title: 'Location',\r\n//         dataIndex: 'location',\r\n//         key: 'location',\r\n//     },\r\n//     {\r\n//         title: 'Terms',\r\n//         dataIndex: 'terms',\r\n//         key: 'terms',\r\n//     },\r\n//     {\r\n//         title: 'Expiry',\r\n//         dataIndex: 'expiry',\r\n//         key: 'expiry',\r\n//     },\r\n// ];\r\n\r\nconst data = getData(\"\");\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js",["145","146"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\RegisterTenant.js",["147","148","149","150","151"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = [\r\n  { label: \"CGH\", value: \"CGH\" },\r\n  { label: \"SGH\", value: \"SGH\" },\r\n  { label: \"KKH\", value: \"KKH\" },\r\n];\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  // TODO create password method\r\n  createPassword() {\r\n    return \"password\";\r\n  }\r\n\r\n  // TODO send email to tenant with login details\r\n\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n      password: this.createPassword(),\r\n    };\r\n    console.log(newUser);\r\n    // this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n        initialValues={{\r\n          auditor: user.name,\r\n        }}\r\n      >\r\n        <h1>Create a Tenant Account</h1>\r\n\r\n        {/* No name, replace with id for annonymity */}\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Address!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address}\r\n            error={errors.address}\r\n            id=\"address\"\r\n            type=\"address\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Institution\"\r\n          name=\"institution\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select an institution!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            className=\"dropdown\"\r\n            icon={MailOutlined}\r\n            placeholder=\"Institution\"\r\n            options={institutions}\r\n            onChange={this.onDropdownChange}\r\n            id=\"institution\"\r\n            type=\"institution\"\r\n            value={this.state.institution}\r\n            error={errors.institution}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Auditor\"\r\n          name=\"auditor\"\r\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Auditor\"\r\n            onChange={this.onChange}\r\n            value={this.state.auditor}\r\n            error={errors.auditor}\r\n            id=\"auditor\"\r\n            type=\"auditor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Create Tenant\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":20},{"ruleId":"156","severity":1,"message":"160","line":5,"column":7,"nodeType":"158","messageId":"159","endLine":5,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":6,"column":7,"nodeType":"158","messageId":"159","endLine":6,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":20},{"ruleId":"156","severity":1,"message":"160","line":8,"column":7,"nodeType":"158","messageId":"159","endLine":8,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":9,"column":7,"nodeType":"158","messageId":"159","endLine":9,"endColumn":20},{"ruleId":"156","severity":1,"message":"162","line":16,"column":13,"nodeType":"158","messageId":"159","endLine":16,"endColumn":17},{"ruleId":"156","severity":1,"message":"163","line":8,"column":31,"nodeType":"158","messageId":"159","endLine":8,"endColumn":39},{"ruleId":"156","severity":1,"message":"163","line":8,"column":31,"nodeType":"158","messageId":"159","endLine":8,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":20},{"ruleId":"156","severity":1,"message":"164","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":14},{"ruleId":"156","severity":1,"message":"165","line":6,"column":16,"nodeType":"158","messageId":"159","endLine":6,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":8,"column":7,"nodeType":"158","messageId":"159","endLine":8,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":9,"column":7,"nodeType":"158","messageId":"159","endLine":9,"endColumn":20},{"ruleId":"156","severity":1,"message":"162","line":16,"column":13,"nodeType":"158","messageId":"159","endLine":16,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":26,"column":11,"nodeType":"168","endLine":26,"endColumn":22},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"169","line":4,"column":22,"nodeType":"158","messageId":"159","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"170","line":7,"column":17,"nodeType":"158","messageId":"159","endLine":7,"endColumn":28},{"ruleId":"166","severity":1,"message":"167","line":18,"column":7,"nodeType":"168","endLine":23,"endColumn":8},{"ruleId":"166","severity":1,"message":"171","line":83,"column":15,"nodeType":"168","endLine":83,"endColumn":18},{"ruleId":"156","severity":1,"message":"172","line":2,"column":20,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"156","severity":1,"message":"173","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":40},{"ruleId":"156","severity":1,"message":"174","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"152","replacedBy":"175"},{"ruleId":"154","replacedBy":"176"},{"ruleId":"156","severity":1,"message":"170","line":6,"column":17,"nodeType":"158","messageId":"159","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":9,"column":3,"nodeType":"179","messageId":"180","endLine":11,"endColumn":4},{"ruleId":"166","severity":1,"message":"171","line":40,"column":15,"nodeType":"168","endLine":40,"endColumn":18},{"ruleId":"156","severity":1,"message":"172","line":2,"column":20,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"156","severity":1,"message":"173","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":40},{"ruleId":"156","severity":1,"message":"164","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"181","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"156","severity":1,"message":"163","line":7,"column":31,"nodeType":"158","messageId":"159","endLine":7,"endColumn":39},{"ruleId":"156","severity":1,"message":"182","line":8,"column":24,"nodeType":"158","messageId":"159","endLine":8,"endColumn":36},{"ruleId":"156","severity":1,"message":"183","line":8,"column":38,"nodeType":"158","messageId":"159","endLine":8,"endColumn":50},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'user' is assigned a value but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Space' is defined but never used.","'ColumnGroup' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Divider' is defined but never used.","'Input' is defined but never used.","'Questions' is defined but never used.",["184"],["185"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'classnames' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]