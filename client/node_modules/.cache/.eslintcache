[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"30","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"31","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js":"32","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"33","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js":"34","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js":"35"},{"size":500,"mtime":1616146148083,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1616146148083,"results":"38","hashOfConfig":"37"},{"size":3426,"mtime":1618926461699,"results":"39","hashOfConfig":"37"},{"size":333,"mtime":1616146148083,"results":"40","hashOfConfig":"37"},{"size":402,"mtime":1618926461703,"results":"41","hashOfConfig":"37"},{"size":2005,"mtime":1617883876287,"results":"42","hashOfConfig":"37"},{"size":808,"mtime":1617625254432,"results":"43","hashOfConfig":"37"},{"size":885,"mtime":1617625254432,"results":"44","hashOfConfig":"37"},{"size":5798,"mtime":1618926461703,"results":"45","hashOfConfig":"37"},{"size":8295,"mtime":1618926475863,"results":"46","hashOfConfig":"37"},{"size":10320,"mtime":1618926475863,"results":"47","hashOfConfig":"37"},{"size":12709,"mtime":1618929521663,"results":"48","hashOfConfig":"37"},{"size":12003,"mtime":1618929520695,"results":"49","hashOfConfig":"37"},{"size":11458,"mtime":1618926461703,"results":"50","hashOfConfig":"37"},{"size":11222,"mtime":1618926461703,"results":"51","hashOfConfig":"37"},{"size":1929,"mtime":1618919393740,"results":"52","hashOfConfig":"37"},{"size":7498,"mtime":1618919393740,"results":"53","hashOfConfig":"37"},{"size":5958,"mtime":1618919393740,"results":"54","hashOfConfig":"37"},{"size":7560,"mtime":1618926461703,"results":"55","hashOfConfig":"37"},{"size":8366,"mtime":1618919393740,"results":"56","hashOfConfig":"37"},{"size":3601,"mtime":1618926475863,"results":"57","hashOfConfig":"37"},{"size":218,"mtime":1617883876183,"results":"58","hashOfConfig":"37"},{"size":328,"mtime":1617895778723,"results":"59","hashOfConfig":"37"},{"size":979,"mtime":1617625254432,"results":"60","hashOfConfig":"37"},{"size":1126,"mtime":1618926461703,"results":"61","hashOfConfig":"37"},{"size":1306,"mtime":1618919393736,"results":"62","hashOfConfig":"37"},{"size":2100,"mtime":1618919393740,"results":"63","hashOfConfig":"37"},{"size":356,"mtime":1617895778995,"results":"64","hashOfConfig":"37"},{"size":421,"mtime":1617883876619,"results":"65","hashOfConfig":"37"},{"size":370,"mtime":1617883876619,"results":"66","hashOfConfig":"37"},{"size":626,"mtime":1616146148083,"results":"67","hashOfConfig":"37"},{"size":384,"mtime":1617896617126,"results":"68","hashOfConfig":"37"},{"size":256,"mtime":1617625254432,"results":"69","hashOfConfig":"37"},{"size":2934,"mtime":1618919393740,"results":"70","hashOfConfig":"37"},{"size":9889,"mtime":1618929187043,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"608doq",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["153","154"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["155","156"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["157","158"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["159","160","161"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["162","163","164","165","166","167"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["168","169"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["170","171"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js",["172","173","174","175","176","177","178"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js",["179","180","181","182","183"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js",["184","185","186","187","188","189","190","191"],"import React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant, sendEmail } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, Layout } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\nimport tenantData from \"../../data/tenantTypes.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TODO: this should be taken from db\nconst institutions = institutionsData;\nconst tenantTypes = tenantData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  // TODO send email to tenant with login details\n  onFinish = (values) => {\n    const newUser = {\n      name: values.name,\n      type: values.type,\n      email: values.email,\n      address: values.address,\n      institution: values.institution,\n      auditor: values.auditor,\n    };\n    console.log(\"newUser: \", newUser);\n    this.props.registerTenant(newUser, this.props.history);\n    // this.props.sendEmail(newUser);\n    window.scrollTo(0, 0); // Scroll to top\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { errors } = this.state;\n    const layout = {\n      labelCol: { span: 3 },\n    };\n    return (\n      <Layout>\n        <h3\n          style={{\n            background: \"#f3ab1b\",\n            \"border-radius\": \"5px\",\n            margin: \"5vw\",\n          }}\n        >\n          Create a Tenant Account\n        </h3>\n        <Content>\n          <Form\n            {...layout}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n            onFinish={this.onFinish}\n            initialValues={{\n              auditor: user.name,\n            }}\n          >\n            {/* No name, replace with id for annonymity */}\n\n            <Form.Item\n              label=\"Tenant Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Name!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Tenant Name\"\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"name\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Type\"\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select F&B or non-F&B!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                placeholder=\"F&B or Non-F&B\"\n                options={tenantTypes}\n                onChange={this.onDropdownChange}\n                id=\"type\"\n                type=\"type\"\n                value={this.state.type}\n                error={errors.type}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  type: \"email\",\n                  message: \"Please input a valid Email!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Address\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Address!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Address\"\n                onChange={this.onChange}\n                value={this.state.address}\n                error={errors.address}\n                id=\"address\"\n                type=\"address\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Institution\"\n              name=\"institution\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select an institution!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                icon={MailOutlined}\n                placeholder=\"Institution\"\n                options={institutions}\n                onChange={this.onDropdownChange}\n                id=\"institution\"\n                type=\"institution\"\n                value={this.state.institution}\n                error={errors.institution}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Auditor\"\n              name=\"auditor\"\n              rules={[\n                { required: true, message: \"Please input name of Auditor!\" },\n              ]}\n            >\n              <Input\n                placeholder=\"Auditor\"\n                onChange={this.onChange}\n                value={this.state.auditor}\n                error={errors.auditor}\n                id=\"auditor\"\n                type=\"auditor\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Create Tenant\n              </Button>\n            </Form.Item>\n          </Form>\n        </Content>\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerTenant, sendEmail })(\n  withRouter(CreateTenant)\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["192","193","194"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Recaptcha from \"react-recaptcha\";\n\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n  // might be deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      var { usertype } = \"\";\n      if (this.state.usertypebool) {\n        usertype = \"staff\";\n      } else {\n        usertype = \"tenant\";\n      }\n      const userData = {\n        email: values.email,\n        password: values.password,\n        usertype: usertype,\n      };\n      console.log(values);\n\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    }\n  };\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>Enter your email and password to log in </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                className={classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                className={classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item name=\"usertypebool\">\n              <Checkbox\n                onChange={this.onCheckboxChange}\n                value={this.state.usertypebool}\n                error={errors.usertypebool}\n                id=\"usertypebool\"\n              >\n                Singhealth Staff Member?\n              </Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"login-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Log in\n              </Button>\n              <p></p>\n              <p>\n                Forgot password?\n                <Link to=\"/resetPassword\"> Click here </Link>to reset it\n              </p>\n              New staff member? <Link to=\"/Register\">Register here!</Link>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",["195","196","197","198","199"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["200","201","202","203"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Layout, Select } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nconst institutions = institutionsData;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      institution: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  onFinish = (values) => {\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      getStaffKey((data) => {\n        // console.log(\"data is: \", data);\n        this.setState({ ...this.state, dbstaffkey: data });\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n        if (this.state.staffkey === this.state.dbstaffkey) {\n          const newUser = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            password2: values.password2,\n            institution: values.institution,\n            usertype: \"staff\",\n          };\n          this.props.registerUser(newUser, this.props.history);\n        } else {\n          alert(\"Staff Key is incorrect!\");\n        }\n      });\n    }\n  };\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Staff Registration Form</h2>\n        <Form\n          name=\"normal_login\"\n          className=\"login-register-form\"\n          title=\"Register\"\n          onFinish={this.onFinish}\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Name\"\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              // className={classnames(\"\", {\n              // invalid: errors.name,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please input a valid Email!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              // className={classnames(\"\", {\n              //   invalid: errors.email,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              //   invalid: errors.password,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password2\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              { required: true, message: \"Passwords do not match!\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    new Error(\n                      \"The two passwords that you entered do not match!\"\n                    )\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Confirm Password\"\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              // invalid: errors.password2,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"staffkey\"\n            rules={[\n              { required: true, message: \"Please input your staff key!\" },\n            ]}\n          >\n            <Input\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Staff Key\"\n              onChange={this.onChange}\n              value={this.state.staffkey}\n              error={errors.staffkey}\n              id=\"staffkey\"\n              type=\"staffkey\"\n              className={classnames(\"\", {\n                invalid: errors.key || errors.keyincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"institution\"\n            rules={[\n              {\n                required: true,\n                message: \"Please select an institution!\",\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              className=\"dropdown\"\n              icon={MailOutlined}\n              placeholder=\"Institution\"\n              options={institutions}\n              onChange={this.onDropdownChange}\n              id=\"institution\"\n              type=\"institution\"\n              value={this.state.institution}\n              error={errors.institution}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Register\n            </Button>\n            Or <Link to=\"/Login\">Login here</Link>\n          </Form.Item>\n        </Form>\n        <Recaptcha\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n          render=\"explicit\"\n          onloadCallback={console.log(\"onloadCallback\")}\n          verifyCallback={this.verifyCallback}\n        />\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",["204"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["205","206","207"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["208","209","210","211","212","213"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js",["214"],"import axios from \"axios\";\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\";\n\n// Get Tenants\nexport const getTenants = (onDataReceived) => (dispatch) => {\n  console.log(\"arrived\");\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(\n      (err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        })\n      // console.log(\"err\")\n    );\n};\n\nexport const getTenant = (onDataReceived) => {\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(() => {\n      alert(\"Error\");\n    });\n};\n\nexport const delTenant = (data) => {\n  console.log(\"arrived\");\n  console.log(data);\n  return axios\n    .post(\"/api/tenants\", {\n      _id: data._id,\n    })\n    .then((response) => {\n      // this.setState({ users: response.data });\n      console.log(\"deleteUser response\", response);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\n// Update tenantInfo in store with the row selected tenantInfo\nexport const setSelectedTenant = (data) => {\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: data,\n  };\n};\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["215","216","217","218","219","220","221"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu> */}\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js",["222"],"/* eslint-disable import/no-anonymous-default-export */\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\n\nconst initialState = {};\n\n// anonymous function\nexport default function (state = initialState, action) {\n  console.log(\"in reducer\");\n  switch (action.type) {\n    case SET_SELECTED_TENANT:\n      return { ...state }, action.payload;\n    default:\n      return state;\n  }\n}\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js",["223","224","225","226","227","228","229"],"import React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport store from \"../../store\";\n\nimport Recaptcha from \"react-recaptcha\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { GET_MESSAGE } from \"../../actions/types\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onFinish = (values) => {\n    console.log(values);\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      const userData = {\n        email: values.email,\n      };\n      this.props.resetPassword(userData);\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>\n          A new password will be sent to your email address if your email\n          address is valid\n        </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                id=\"email\"\n                type=\"email\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"reset-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Reset Password\n              </Button>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({});\nexport default connect(mapStateToProps, { resetPassword })(ResetPassword);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js",["230","231","232","233","234","235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"245","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":13},{"ruleId":"240","severity":1,"message":"246","line":15,"column":10,"nodeType":"242","messageId":"243","endLine":15,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":177,"column":32,"nodeType":"249","messageId":"250","endLine":177,"endColumn":34},{"ruleId":"240","severity":1,"message":"251","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"252","line":4,"column":55,"nodeType":"242","messageId":"243","endLine":4,"endColumn":58},{"ruleId":"240","severity":1,"message":"253","line":4,"column":60,"nodeType":"242","messageId":"243","endLine":4,"endColumn":63},{"ruleId":"240","severity":1,"message":"254","line":15,"column":9,"nodeType":"242","messageId":"243","endLine":15,"endColumn":15},{"ruleId":"240","severity":1,"message":"255","line":15,"column":17,"nodeType":"242","messageId":"243","endLine":15,"endColumn":28},{"ruleId":"256","severity":1,"message":"257","line":26,"column":7,"nodeType":"258","endLine":31,"endColumn":8},{"ruleId":"240","severity":1,"message":"259","line":4,"column":3,"nodeType":"242","messageId":"243","endLine":4,"endColumn":10},{"ruleId":"240","severity":1,"message":"260","line":17,"column":18,"nodeType":"242","messageId":"243","endLine":17,"endColumn":25},{"ruleId":"240","severity":1,"message":"259","line":4,"column":3,"nodeType":"242","messageId":"243","endLine":4,"endColumn":10},{"ruleId":"240","severity":1,"message":"260","line":17,"column":18,"nodeType":"242","messageId":"243","endLine":17,"endColumn":25},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":25,"column":9,"nodeType":"242","messageId":"243","endLine":25,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":99,"column":11,"nodeType":"242","messageId":"264","endLine":99,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":141,"column":44,"nodeType":"249","messageId":"250","endLine":141,"endColumn":46},{"ruleId":"247","severity":1,"message":"265","line":162,"column":14,"nodeType":"249","messageId":"250","endLine":162,"endColumn":16},{"ruleId":"256","severity":1,"message":"266","line":169,"column":25,"nodeType":"258","endLine":169,"endColumn":28},{"ruleId":"256","severity":1,"message":"266","line":179,"column":25,"nodeType":"258","endLine":179,"endColumn":28},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":24,"column":9,"nodeType":"242","messageId":"243","endLine":24,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":97,"column":11,"nodeType":"242","messageId":"264","endLine":97,"endColumn":20},{"ruleId":"256","severity":1,"message":"266","line":158,"column":23,"nodeType":"258","endLine":158,"endColumn":26},{"ruleId":"256","severity":1,"message":"266","line":170,"column":23,"nodeType":"258","endLine":170,"endColumn":26},{"ruleId":"240","severity":1,"message":"267","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"268","line":6,"column":31,"nodeType":"242","messageId":"243","endLine":6,"endColumn":38},{"ruleId":"240","severity":1,"message":"269","line":7,"column":24,"nodeType":"242","messageId":"243","endLine":7,"endColumn":36},{"ruleId":"240","severity":1,"message":"270","line":7,"column":38,"nodeType":"242","messageId":"243","endLine":7,"endColumn":50},{"ruleId":"240","severity":1,"message":"271","line":11,"column":9,"nodeType":"242","messageId":"243","endLine":11,"endColumn":15},{"ruleId":"240","severity":1,"message":"272","line":11,"column":17,"nodeType":"242","messageId":"243","endLine":11,"endColumn":23},{"ruleId":"240","severity":1,"message":"273","line":11,"column":25,"nodeType":"242","messageId":"243","endLine":11,"endColumn":30},{"ruleId":"240","severity":1,"message":"271","line":12,"column":9,"nodeType":"242","messageId":"243","endLine":12,"endColumn":15},{"ruleId":"240","severity":1,"message":"272","line":12,"column":17,"nodeType":"242","messageId":"243","endLine":12,"endColumn":23},{"ruleId":"240","severity":1,"message":"273","line":12,"column":25,"nodeType":"242","messageId":"243","endLine":12,"endColumn":30},{"ruleId":"240","severity":1,"message":"244","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"240","severity":1,"message":"274","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":17},{"ruleId":"240","severity":1,"message":"275","line":4,"column":19,"nodeType":"242","messageId":"243","endLine":4,"endColumn":29},{"ruleId":"240","severity":1,"message":"254","line":14,"column":9,"nodeType":"242","messageId":"243","endLine":14,"endColumn":15},{"ruleId":"240","severity":1,"message":"255","line":14,"column":17,"nodeType":"242","messageId":"243","endLine":14,"endColumn":28},{"ruleId":"240","severity":1,"message":"271","line":18,"column":9,"nodeType":"242","messageId":"243","endLine":18,"endColumn":15},{"ruleId":"240","severity":1,"message":"272","line":18,"column":17,"nodeType":"242","messageId":"243","endLine":18,"endColumn":23},{"ruleId":"240","severity":1,"message":"273","line":18,"column":25,"nodeType":"242","messageId":"243","endLine":18,"endColumn":30},{"ruleId":"240","severity":1,"message":"276","line":18,"column":32,"nodeType":"242","messageId":"243","endLine":18,"endColumn":39},{"ruleId":"240","severity":1,"message":"277","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":33},{"ruleId":"240","severity":1,"message":"278","line":2,"column":16,"nodeType":"242","messageId":"243","endLine":2,"endColumn":20},{"ruleId":"240","severity":1,"message":"279","line":8,"column":7,"nodeType":"242","messageId":"243","endLine":8,"endColumn":14},{"ruleId":"240","severity":1,"message":"280","line":9,"column":7,"nodeType":"242","messageId":"243","endLine":9,"endColumn":20},{"ruleId":"240","severity":1,"message":"278","line":2,"column":16,"nodeType":"242","messageId":"243","endLine":2,"endColumn":20},{"ruleId":"240","severity":1,"message":"281","line":2,"column":22,"nodeType":"242","messageId":"243","endLine":2,"endColumn":28},{"ruleId":"240","severity":1,"message":"282","line":6,"column":19,"nodeType":"242","messageId":"243","endLine":6,"endColumn":29},{"ruleId":"240","severity":1,"message":"279","line":8,"column":7,"nodeType":"242","messageId":"243","endLine":8,"endColumn":14},{"ruleId":"240","severity":1,"message":"280","line":9,"column":7,"nodeType":"242","messageId":"243","endLine":9,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":27,"column":13,"nodeType":"258","endLine":27,"endColumn":24},{"ruleId":"240","severity":1,"message":"283","line":2,"column":43,"nodeType":"242","messageId":"243","endLine":2,"endColumn":54},{"ruleId":"240","severity":1,"message":"278","line":2,"column":16,"nodeType":"242","messageId":"243","endLine":2,"endColumn":20},{"ruleId":"240","severity":1,"message":"284","line":2,"column":22,"nodeType":"242","messageId":"243","endLine":2,"endColumn":30},{"ruleId":"240","severity":1,"message":"281","line":2,"column":32,"nodeType":"242","messageId":"243","endLine":2,"endColumn":38},{"ruleId":"240","severity":1,"message":"285","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":16},{"ruleId":"240","severity":1,"message":"279","line":8,"column":7,"nodeType":"242","messageId":"243","endLine":8,"endColumn":14},{"ruleId":"240","severity":1,"message":"280","line":9,"column":7,"nodeType":"242","messageId":"243","endLine":9,"endColumn":20},{"ruleId":"240","severity":1,"message":"286","line":11,"column":7,"nodeType":"242","messageId":"243","endLine":11,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":11,"column":26,"nodeType":"289","messageId":"290","endLine":11,"endColumn":27},{"ruleId":"240","severity":1,"message":"244","line":4,"column":10,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"282","line":4,"column":16,"nodeType":"242","messageId":"243","endLine":4,"endColumn":26},{"ruleId":"240","severity":1,"message":"291","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":13},{"ruleId":"240","severity":1,"message":"283","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":21},{"ruleId":"240","severity":1,"message":"271","line":12,"column":9,"nodeType":"242","messageId":"243","endLine":12,"endColumn":15},{"ruleId":"240","severity":1,"message":"272","line":12,"column":17,"nodeType":"242","messageId":"243","endLine":12,"endColumn":23},{"ruleId":"240","severity":1,"message":"273","line":12,"column":25,"nodeType":"242","messageId":"243","endLine":12,"endColumn":30},{"ruleId":"240","severity":1,"message":"253","line":8,"column":5,"nodeType":"242","messageId":"243","endLine":8,"endColumn":8},{"ruleId":"240","severity":1,"message":"292","line":20,"column":9,"nodeType":"242","messageId":"243","endLine":20,"endColumn":14},{"ruleId":"240","severity":1,"message":"293","line":22,"column":7,"nodeType":"242","messageId":"243","endLine":22,"endColumn":20},{"ruleId":"240","severity":1,"message":"294","line":27,"column":7,"nodeType":"242","messageId":"243","endLine":27,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":85,"column":32,"nodeType":"249","messageId":"250","endLine":85,"endColumn":34},{"ruleId":"240","severity":1,"message":"295","line":99,"column":17,"nodeType":"242","messageId":"243","endLine":99,"endColumn":23},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","'FormProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextArea' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","'display' is defined but never used.","'Text' is assigned a value but never used.","no-redeclare","'tempArray' is already defined.","redeclared","Expected '!==' and instead saw '!='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Content' is assigned a value but never used.","'getAllByPlaceholderText' is defined but never used.","'Icon' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'GET_MESSAGE' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'store' is defined but never used.","'Title' is assigned a value but never used.","'gridStyleLeft' is assigned a value but never used.","'gridStyleRight' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]