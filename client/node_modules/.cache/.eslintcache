[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js":"30","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js":"31","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js":"32","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js":"33","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js":"34","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js":"35"},{"size":500,"mtime":1616146148083,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1616146148083,"results":"38","hashOfConfig":"37"},{"size":3014,"mtime":1617860835746,"results":"39","hashOfConfig":"37"},{"size":402,"mtime":1617848850939,"results":"40","hashOfConfig":"37"},{"size":333,"mtime":1616146148083,"results":"41","hashOfConfig":"37"},{"size":8316,"mtime":1617848850935,"results":"42","hashOfConfig":"37"},{"size":9768,"mtime":1617850983544,"results":"43","hashOfConfig":"37"},{"size":2707,"mtime":1617848850903,"results":"44","hashOfConfig":"37"},{"size":2779,"mtime":1617865436814,"results":"45","hashOfConfig":"37"},{"size":808,"mtime":1617625254432,"results":"46","hashOfConfig":"37"},{"size":885,"mtime":1617625254432,"results":"47","hashOfConfig":"37"},{"size":2206,"mtime":1617848850935,"results":"48","hashOfConfig":"37"},{"size":1724,"mtime":1617625254432,"results":"49","hashOfConfig":"37"},{"size":5101,"mtime":1617852973880,"results":"50","hashOfConfig":"37"},{"size":149,"mtime":1617625254432,"results":"51","hashOfConfig":"37"},{"size":7027,"mtime":1617848850935,"results":"52","hashOfConfig":"37"},{"size":256,"mtime":1617625254432,"results":"53","hashOfConfig":"37"},{"size":413,"mtime":1617856183776,"results":"54","hashOfConfig":"37"},{"size":1313,"mtime":1616146161416,"results":"55","hashOfConfig":"37"},{"size":4027,"mtime":1617626306221,"results":"56","hashOfConfig":"57"},{"size":270,"mtime":1617848850935,"results":"58","hashOfConfig":"37"},{"size":9564,"mtime":1617625254432,"results":"59","hashOfConfig":"57"},{"size":1065,"mtime":1617625254432,"results":"60","hashOfConfig":"37"},{"size":2327,"mtime":1617860780025,"results":"61","hashOfConfig":"37"},{"size":979,"mtime":1617625254432,"results":"62","hashOfConfig":"37"},{"size":464,"mtime":1616672920849,"results":"63","hashOfConfig":"57"},{"size":282,"mtime":1617848850939,"results":"64","hashOfConfig":"37"},{"size":370,"mtime":1617848850939,"results":"65","hashOfConfig":"37"},{"size":626,"mtime":1616146148083,"results":"66","hashOfConfig":"37"},{"size":2005,"mtime":1617848850935,"results":"67","hashOfConfig":"37"},{"size":5766,"mtime":1617848850935,"results":"68","hashOfConfig":"37"},{"size":545,"mtime":1617848850903,"results":"69","hashOfConfig":"37"},{"size":421,"mtime":1617848850939,"results":"70","hashOfConfig":"37"},{"size":218,"mtime":1617848850903,"results":"71","hashOfConfig":"37"},{"size":4056,"mtime":1617869562099,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"608doq",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"djewvc",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["157","158"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["159"],"import \"../App.css\";\nimport {\n  Collapse,\n  Divider,\n  DatePicker,\n  Form,\n  List,\n  Input,\n  Checkbox,\n  Button,\n  Modal,\n} from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { submit } from \"../actions/auditActions.js\";\nconst fileUpload = require(\"fuctbase64\");\nconst nonFb = importJSON.non_fb;\nconst { Panel } = Collapse;\n\n// TODO: Take score from json file => Update the score, replace the json file\n\nclass ChecklistNonFB extends Component {\n  // not exactly dynamic\n  state = {\n    type: \"Non-FB\",\n    checked: false,\n    catCounts: [0, 0, 0],\n    // counts[0]: for Professionalism & Staff Hygiene (20%),\n    //counts[1]: for Housekeeping & General Cleanliness (40%)\n    //counts[2]: for Workplace Safety & Health (40%)\n    total_score: 0,\n    image: null,\n    date: null,\n    description: \"\",\n    location: \"\",\n    visibleForm: false,\n    visibleConfirm: false,\n    visibleAudit: false,\n  };\n\n  submitAudit = () => {\n    console.log(this.state);\n    submit({\n      type: \"Non-FB\",\n      catCounts: this.state.catCounts,\n      total_score:\n        this.state.catCounts[0] +\n        this.state.catCounts[1] +\n        this.state.catCounts[2],\n      image: this.state.image,\n      date: this.state.date,\n      description: this.state.description,\n      location: this.state.location,\n    });\n    this.showAuditModal();\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onChangeDate = (date, dateString) => {\n    this.setState({ date: date });\n  };\n\n  showFormModal = () => {\n    this.setState({\n      visibleForm: true,\n    });\n  };\n\n  showAuditModal = () => {\n    this.setState({\n      visibleAudit: true,\n    });\n  };\n\n  showConfirmModal = () => {\n    this.setState({\n      visibleConfirm: true,\n    });\n  };\n\n  handleFormOk = (e) => {\n    console.log(e);\n    this.showConfirmModal();\n  };\n\n  handleAuditOk = (e) => {\n    console.log(e);\n    this.setState({\n      visibleAudit: false,\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visibleForm: false,\n    });\n  };\n\n  handleUploadOk = (e) => {\n    console.log(e);\n    this.setState({\n      visibleConfirm: false,\n    });\n  };\n\n  createCheckbox = (label, catIndex) => (\n    <Checkbox\n      label={label}\n      // handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n      onChange={(e) => this.handleCount(e, catIndex)}\n    />\n  );\n\n  fileSelectedHandler = (event) => {\n    // console.log(event.target.files[0]);\n    fileUpload(event).then((data) => {\n      // console.log(\"base64: \", data.base64);\n      this.setState({\n        image: data.base64,\n      });\n    });\n  };\n\n  handleCount = (e, catIndex) => {\n    const { checked, type } = e.target;\n    switch (catIndex) {\n      case 0:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[0]++);\n        } else {\n          this.setState((state) => state.catCounts[0]--);\n        }\n        break;\n      case 1:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[1]++);\n        } else {\n          this.setState((state) => state.catCounts[1]--);\n        }\n        break;\n      case 2:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[2]++);\n        } else {\n          this.setState((state) => state.catCounts[2]--);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"table\">\n        <h1>Non-FB CheckList</h1>\n        {nonFb.map((cat, catIndex) => {\n          // var catScore = cat.score;\n          return (\n            // Category\n            <Collapse defaultActiveKey={[\"1\"]}>\n              <Panel\n                header={<div catIndex={catIndex}>{cat.name}</div>}\n                key={catIndex + 1}\n                className=\"bg-orange\"\n              >\n                <div catIndex={catIndex}>\n                  {cat.subcategories.map((subCat, subCatIndex) => {\n                    return (\n                      // SubCategory\n                      <Collapse defaultActiveKey={[\"1\"]}>\n                        <Panel\n                          header={\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\n                          }\n                          key={subCatIndex + 1}\n                          className=\"bg-orange\"\n                        >\n                          <List\n                            dataSource={subCat.questions} // Questions\n                            renderItem={(item) => (\n                              <List.Item>\n                                <div className=\"create-audit-row\">{item}</div>\n                                <div>{this.createCheckbox(item, catIndex)}</div>\n                              </List.Item>\n                            )}\n                          />\n                        </Panel>\n                      </Collapse>\n                    );\n                  })}\n                </div>\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\n              </Panel>\n            </Collapse>\n          );\n        })}\n\n        <Button type=\"primary\" onClick={this.showFormModal}>\n          Upload Photo\n        </Button>\n        <Modal\n          title=\"Upload Photo\"\n          visible={this.state.visibleForm}\n          onOk={this.handleFormOk}\n          onCancel={this.handleCancel}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: false }}\n        >\n          <Form\n            name=\"photo_upload\"\n            className=\"photo-upload\"\n            onFinish={this.onFinish}\n          >\n            <Form.Item>\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\n            </Form.Item>\n            <Form.Item\n              name=\"date\"\n              rules={[{ required: true, message: \"Date of Incident\" }]}\n            >\n              <DatePicker placeholder=\"Date\" onChange={this.onChangeDate} />\n            </Form.Item>\n\n            <Form.Item\n              name=\"description\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Description\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Description\"\n                onChange={this.onChange}\n                value={this.state.description}\n                id=\"description\"\n                type=\"description\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"location\"\n              rules={[{ required: true, message: \"Location of Incident\" }]}\n            >\n              <Input\n                placeholder=\"Location\"\n                onChange={this.onChange}\n                value={this.state.location}\n                id=\"location\"\n                type=\"location\"\n              />\n            </Form.Item>\n          </Form>\n          {/* <Form>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"upload-photo-button\"\n              onClick={() => { this.upload(this.state); }}\n            >\n              Upload\n                    </Button>\n          </Form> */}\n          <Modal\n            title=\"Upload Confirm\"\n            destroyOnClose={true}\n            visible={this.state.visibleConfirm}\n            onOk={this.handleUploadOk}\n            okButtonProps={{ disabled: false }}\n            cancelButtonProps={{ disabled: true, visible: false }}\n          >\n            <p>Photo Added!</p>\n          </Modal>\n        </Modal>\n        <Button\n          onClick={() => this.submitAudit()}\n          className=\"submit-button\"\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          SUBMIT\n        </Button>\n        {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\n          TEST\n        </Button> */}\n        <Modal\n          title=\"\"\n          visible={this.state.visibleAudit}\n          onOk={this.handleAuditOk}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: true, visible: false }}\n        >\n          <p>Audit Uploaded!</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChecklistNonFB;\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["160","161"],"import \"../App.css\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  Input,\n  Checkbox,\n  Button,\n  Modal,\n  Form,\n  DatePicker,\n} from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { submit, display } from \"../actions/auditActions.js\";\nconst fileUpload = require(\"fuctbase64\");\nconst Fb = importJSON.fb;\nconst { Panel } = Collapse;\n\n// TODO: Take score from json file => Update the score, replace the json file\n\nclass Checklist extends Component {\n  // componentWillMount = () => {\n  //   this.selectedCheckboxes = new Set();\n  // };\n\n  // toggleCheckbox = (label) => {\n  //   if (this.selectedCheckboxes.has(label)) {\n  //     this.selectedCheckboxes.delete(label);\n  //   } else {\n  //     this.selectedCheckboxes.add(label);\n  //   }\n  // };\n\n  // handleFormSubmit = (formSubmitEvent) => {\n  //   formSubmitEvent.preventDefault();\n\n  //   for (const checkbox of this.selectedCheckboxes) {\n  //     console.log(checkbox, \"is selected.\");\n  //   }\n  // };\n\n  // onFinish = () => {\n  //   var newState = [];\n  //   for (var i = 0; i < this.state.catCounts.length; i++) {\n  //     newState.push(this.state.catCounts[i] / 2);\n  //   }\n  //   const submitData = {\n  //     catCounts: newState,\n  //   };\n\n  //   console.log(submitData);\n  // };\n\n  submitAudit = () => {\n    console.log(this.state);\n    submit({\n      type: \"FB\",\n      catCounts: this.state.catCounts,\n      total_score:\n        this.state.catCounts[0] +\n        this.state.catCounts[1] +\n        this.state.catCounts[2] +\n        this.state.catCounts[3] +\n        this.state.catCounts[4],\n      image: this.state.image,\n      date: this.state.date,\n      description: this.state.description,\n      location: this.state.location,\n    });\n    this.showAuditModal();\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onChangeDate = (date, dateString) => {\n    this.setState({ date: date });\n  };\n\n  fileSelectedHandler = (event) => {\n    // console.log(event.target.files[0]);\n    fileUpload(event).then((data) => {\n      // console.log(\"base64: \", data.base64);\n      this.setState({\n        image: data.base64,\n      });\n    });\n  };\n\n  showAuditModal = () => {\n    this.setState({\n      visibleAudit: true,\n    });\n  };\n\n  showFormModal = () => {\n    this.setState({\n      visibleForm: true,\n    });\n  };\n\n  showConfirmModal = () => {\n    this.setState({\n      visibleConfirm: true,\n    });\n  };\n\n  handleAuditOk = (e) => {\n    console.log(e);\n    this.setState({\n      visibleAudit: false,\n    });\n  };\n\n  handleFormOk = (e) => {\n    console.log(e);\n    this.showConfirmModal();\n  };\n\n  handleUploadOk = (e) => {\n    console.log(e);\n    this.setState({\n      visibleConfirm: false,\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visibleForm: false,\n    });\n  };\n\n  createCheckbox = (label, catIndex) => (\n    <Checkbox\n      label={label}\n      // handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n      onChange={(e) => this.handleCount(e, catIndex)}\n    />\n  );\n  handlegcCheckCount = (e) => {\n    const { checked, type } = e.target;\n    if (type === \"checkbox\" && checked === true) {\n      this.setState((state) => state.gc_count++);\n    } else {\n      this.setState((state) => state.gc_count--);\n    }\n  };\n  //for food hygiene cat\n  createfoodCheckbox = (label) => (\n    <Checkbox\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n      onChange={(e) => this.handlefoodCheckCount(e)}\n    />\n  );\n  handlefoodCheckCount = (e) => {\n    const { checked, type } = e.target;\n    if (type === \"checkbox\" && checked === true) {\n      this.setState((state) => state.food_count++);\n    } else {\n      this.setState((state) => state.food_count--);\n    }\n  };\n\n  // not exactly dynamic\n  state = {\n    checked: false,\n    catCounts: [0, 0, 0, 0, 0], // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\n    image: null,\n    date: null,\n    description: \"\",\n    location: \"\",\n    visibleForm: false,\n    visibleConfirm: false,\n    visibleAudit: false,\n  };\n  handleCount = (e, catIndex) => {\n    const { checked, type } = e.target;\n    switch (catIndex) {\n      case 0:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[0]++);\n        } else {\n          this.setState((state) => state.catCounts[0]--);\n        }\n        break;\n      case 1:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[1]++);\n        } else {\n          this.setState((state) => state.catCounts[1]--);\n        }\n        break;\n      case 2:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[2]++);\n        } else {\n          this.setState((state) => state.catCounts[2]--);\n        }\n        break;\n      case 3:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[3]++);\n        } else {\n          this.setState((state) => state.catCounts[3]--);\n        }\n        break;\n      case 4:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[4]++);\n        } else {\n          this.setState((state) => state.catCounts[4]--);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"table\">\n        <h1>FB CheckList</h1>\n        {Fb.map((cat, catIndex) => {\n          // var catScore = cat.score;\n          return (\n            // Category\n            <Collapse defaultActiveKey={[\"1\"]}>\n              <Panel\n                header={<div catIndex={catIndex}>{cat.name}</div>}\n                key={catIndex + 1}\n                className=\"bg-orange\"\n              >\n                <div catIndex={catIndex}>\n                  {cat.subcategories.map((subCat, subCatIndex) => {\n                    return (\n                      // SubCategory\n                      <Collapse defaultActiveKey={[\"1\"]}>\n                        <Panel\n                          header={\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\n                          }\n                          key={subCatIndex + 1}\n                          className=\"bg-orange\"\n                        >\n                          <List\n                            dataSource={subCat.questions} // Questions\n                            renderItem={(item) => (\n                              <List.Item>\n                                <div className=\"create-audit-row\">{item}</div>\n                                <div>{this.createCheckbox(item, catIndex)}</div>\n                              </List.Item>\n                            )}\n                          />\n                        </Panel>\n                      </Collapse>\n                    );\n                  })}\n                </div>\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\n              </Panel>\n            </Collapse>\n          );\n        })}\n        <Button type=\"primary\" onClick={this.showFormModal}>\n          Upload Photo\n        </Button>\n        <Modal\n          title=\"Upload Photo\"\n          visible={this.state.visibleForm}\n          onOk={this.handleFormOk}\n          onCancel={this.handleCancel}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: false }}\n        >\n          <Form\n            name=\"photo_upload\"\n            className=\"photo-upload\"\n            onFinish={this.onFinish}\n          >\n            <Form.Item>\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\n            </Form.Item>\n            <Form.Item\n              name=\"date\"\n              rules={[{ required: true, message: \"Date of Incident\" }]}\n            >\n              <DatePicker placeholder=\"Date\" onChange={this.onChangeDate} />\n            </Form.Item>\n\n            <Form.Item\n              name=\"description\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Description\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Description\"\n                onChange={this.onChange}\n                value={this.state.description}\n                id=\"description\"\n                type=\"description\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"location\"\n              rules={[{ required: true, message: \"Location of Incident\" }]}\n            >\n              <Input\n                placeholder=\"Location\"\n                onChange={this.onChange}\n                value={this.state.location}\n                id=\"location\"\n                type=\"location\"\n              />\n            </Form.Item>\n          </Form>\n\n          <Modal\n            title=\"Upload Confirm\"\n            destroyOnClose={true}\n            visible={this.state.visibleConfirm}\n            onOk={this.handleUploadOk}\n            okButtonProps={{ disabled: false }}\n            cancelButtonProps={{ disabled: true, visible: false }}\n          >\n            <p>Photo Added!</p>\n          </Modal>\n        </Modal>\n        <Button\n          className=\"submit-button\"\n          type=\"primary\"\n          onClick={() => this.submitAudit()}\n        >\n          SUBMIT\n        </Button>\n\n        <Modal\n          title=\"\"\n          visible={this.state.visibleAudit}\n          onOk={this.handleAuditOk}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: true, visible: false }}\n        >\n          <p>Audit Uploaded!</p>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Checklist;\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["162","163","164","165","166","167","168","169"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["170","171"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["172","173"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["174","175","176"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Col, Table } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getTenants } from \"../actions/tenantActions\";\nimport PropTypes from \"prop-types\";\n\nconst { Column, ColumnGroup } = Table;\n\n// const hardData = [\n//   {\n//     _id: \"60631883a28310df640dcfe9\",\n//     userId: \"60631883a28310df640dcfe8\",\n//     address: \"addtenent7\",\n//     institution: \"CGH\",\n//     auditor: \"1\",\n//     __v: 0,\n//   },\n//   {\n//     _id: \"60631d491b5182a0d81d3942\",\n//     userId: \"60631d491b5182a0d81d3941\",\n//     address: \"tenant1\",\n//     institution: \"SGH\",\n//     auditor: \"staff1\",\n//     __v: 0,\n//   },\n// ];\nclass Directory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tenantData: [],\n    };\n  }\n\n  // TODO: can't get data to assign to state before rendering\n  componentDidMount() {\n    console.log(\"data\");\n\n    this.props.getTenants((data) => {\n      this.setState({ tenantData: data });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"table\">\n        <Table\n          dataSource={this.state.tenantData}\n          scroll={{ x: 400 }}\n          title={() => <div className=\"table-title\">Tenants</div>}\n        >\n          <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n          <Column\n            title=\"Institution\"\n            dataIndex=\"institution\"\n            key=\"institution\"\n          />\n          <Column title=\"Auditor\" dataIndex=\"auditor\" key=\"auditor\" />\n          <Column title=\"User Id\" dataIndex=\"userId\" key=\"userId\" />\n        </Table>\n      </div>\n    );\n    //     <div className=\"panels\">\n    //       {/* <Table> */}\n    //       {this.state.tenants.map((tenant, tenIndex) => {\n    //         console.log(tenant);\n    //         return <div>{tenant}</div>;\n    //       })}\n    //       {/* </Table> */}\n    //     </div>\n    //   );\n    // }\n  }\n}\n\nDirectory.propTypes = {\n  getTenants: PropTypes.func.isRequired,\n  tenantData: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  tenantData: state.tenantData,\n});\nexport default connect(mapStateToProps, { getTenants })(Directory);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["177","178","179"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nimport ReCAPTCHA from \"react-google-recaptcha\";\nconst recaptchaRef = React.createRef();\nconst grecaptchaObject = window.grecaptcha;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n  }\n  // might be deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    var { usertype } = \"\";\n    if (this.state.usertypebool) {\n      usertype = \"staff\";\n    } else {\n      usertype = \"tenant\";\n    }\n    const userData = {\n      email: values.email,\n      password: values.password,\n      usertype: usertype,\n    };\n    console.log(values);\n\n    this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <Form\n          onFinish={this.onFinish}\n          name=\"normal_login\"\n          className=\"login-register-form\"\n        >\n          <h2>Welcome to SingHealth Audit</h2>\n          <p>Enter your email and password to log in </p>\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your Email!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email || errors.emailnotfound,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password || errors.passwordincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item name=\"usertypebool\">\n            <Checkbox\n              onChange={this.onCheckboxChange}\n              value={this.state.usertypebool}\n              error={errors.usertypebool}\n              id=\"usertypebool\"\n            >\n              Singhealth Staff Member?\n            </Checkbox>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              id=\"login-button\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Log in\n            </Button>\n            New staff member? <Link to=\"/Register\">Register here!</Link>\n          </Form.Item>\n\n          <Form.Item\n            name=\"recaptcha\">\n            <ReCAPTCHA\n              ref={(r) => this.recaptcha = r}\n              size=\"invisible\"\n              sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n              onChange={this.onChange}\n            />\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["180"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\nconst institutions = institutionsData;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      institution: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  onFinish = (values) => {\n    getStaffKey((data) => {\n      // console.log(\"data is: \", data);\n      this.setState({ ...this.state, dbstaffkey: data });\n      // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n      if (this.state.staffkey === this.state.dbstaffkey) {\n        const newUser = {\n          name: values.name,\n          email: values.email,\n          password: values.password,\n          password2: values.password2,\n          institution: values.institution,\n          usertype: \"staff\",\n        };\n        this.props.registerUser(newUser, this.props.history);\n      } else {\n        alert(\"Staff Key is incorrect!\");\n      }\n    });\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Form\n        name=\"normal_login\"\n        className=\"login-register-form\"\n        onFinish={this.onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your Name!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Name\"\n            onChange={this.onChange}\n            value={this.state.name}\n            error={errors.name}\n            id=\"name\"\n            type=\"text\"\n            // className={classnames(\"\", {\n            // invalid: errors.name,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Password\"\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            // className={classnames(\"\", {\n            //   invalid: errors.password,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password2\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            { required: true, message: \"Passwords do not match!\" },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  new Error(\"The two passwords that you entered do not match!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Confirm Password\"\n            onChange={this.onChange}\n            value={this.state.password2}\n            error={errors.password2}\n            id=\"password2\"\n            type=\"password\"\n            // className={classnames(\"\", {\n            // invalid: errors.password2,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"staffkey\"\n          rules={[{ required: true, message: \"Please input your staff key!\" }]}\n        >\n          <Input\n            prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Staff Key\"\n            onChange={this.onChange}\n            value={this.state.staffkey}\n            error={errors.staffkey}\n            id=\"staffkey\"\n            type=\"staffkey\"\n            className={classnames(\"\", {\n              invalid: errors.key || errors.keyincorrect,\n            })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"institution\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select an institution!\",\n            },\n          ]}\n        >\n          <Select\n            className=\"dropdown\"\n            icon={MailOutlined}\n            placeholder=\"Institution\"\n            options={institutions}\n            onChange={this.onDropdownChange}\n            id=\"institution\"\n            type=\"institution\"\n            value={this.state.institution}\n            error={errors.institution}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-register-form-button\"\n          >\n            Register\n          </Button>\n          Or <Link to=\"/Login\">Login here</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts",[],["181","182"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js",["183"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["184","185","186","187","188","189"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Button } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\">\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\n            Logout\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"\">Hello {user.name}</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["190","191","192","193","194","195"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu>\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"viewaudit\">\n          <NavLink to=\"/viewaudit\">View Audit</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"editaudit\">\n          <NavLink to=\"/tenant/editaudit\">Edit Audit</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["196","197","198"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js",["199","200","201","202","203","204"],"import React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\n// TODO: this should be taken from db\nconst institutions = institutionsData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  // TODO send email to tenant with login details\n\n  onFinish = (values) => {\n    const newUser = {\n      name: values.name,\n      email: values.email,\n      address: values.address,\n      institution: values.institution,\n      auditor: values.auditor,\n    };\n    console.log(newUser);\n    this.props.registerTenant(newUser, this.props.history);\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { errors } = this.state;\n    const layout = {\n      labelCol: { span: 3 },\n    };\n    return (\n      <Form\n        {...layout}\n        name=\"normal_login\"\n        className=\"login-register-form\"\n        onFinish={this.onFinish}\n        initialValues={{\n          auditor: user.name,\n        }}\n      >\n        <h1>Create a Tenant Account</h1>\n\n        {/* No name, replace with id for annonymity */}\n\n        <Form.Item\n          label=\"Tenant Name\"\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input a valid Name!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Tenant Name\"\n            onChange={this.onChange}\n            value={this.state.name}\n            error={errors.name}\n            id=\"name\"\n            type=\"name\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Email\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Email\"\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Address\"\n          name=\"address\"\n          rules={[\n            {\n              required: true,\n              type: \"string\",\n              message: \"Please input a valid Address!\",\n            },\n          ]}\n        >\n          <Input\n            placeholder=\"Address\"\n            onChange={this.onChange}\n            value={this.state.address}\n            error={errors.address}\n            id=\"address\"\n            type=\"address\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Institution\"\n          name=\"institution\"\n          rules={[\n            {\n              required: true,\n              message: \"Please select an institution!\",\n            },\n          ]}\n        >\n          <Select\n            className=\"dropdown\"\n            icon={MailOutlined}\n            placeholder=\"Institution\"\n            options={institutions}\n            onChange={this.onDropdownChange}\n            id=\"institution\"\n            type=\"institution\"\n            value={this.state.institution}\n            error={errors.institution}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Auditor\"\n          name=\"auditor\"\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\n        >\n          <Input\n            placeholder=\"Auditor\"\n            onChange={this.onChange}\n            value={this.state.auditor}\n            error={errors.auditor}\n            id=\"auditor\"\n            type=\"auditor\"\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-register-form-button\"\n          >\n            Create Tenant\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerTenant })(\n  withRouter(CreateTenant)\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js",["205","206","207"],"import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_MESSAGE,\n  SET_CURRENT_USER,\n  USER_LOADING,\n} from \"./types\";\n\n// Get Tenants\nexport const getTenants = (onDataReceived) => (dispatch) => {\n  console.log(\"before axios\");\n  axios\n    .get(\"/api/tenants\")\n    .then((response) => {\n      // console.log(\"response is:\", response.data);\n      onDataReceived(response.data);\n    })\n    .catch(\n      (err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        })\n      // console.log(\"err\")\n    );\n};\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js",["208","209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":10},{"ruleId":"215","severity":1,"message":"219","line":15,"column":18,"nodeType":"217","messageId":"218","endLine":15,"endColumn":25},{"ruleId":"215","severity":1,"message":"220","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"221","line":4,"column":17,"nodeType":"217","messageId":"218","endLine":4,"endColumn":20},{"ruleId":"215","severity":1,"message":"222","line":4,"column":22,"nodeType":"217","messageId":"218","endLine":4,"endColumn":27},{"ruleId":"215","severity":1,"message":"223","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"224","line":6,"column":64,"nodeType":"217","messageId":"218","endLine":6,"endColumn":70},{"ruleId":"215","severity":1,"message":"225","line":8,"column":17,"nodeType":"217","messageId":"218","endLine":8,"endColumn":28},{"ruleId":"226","severity":1,"message":"227","line":19,"column":7,"nodeType":"228","endLine":24,"endColumn":8},{"ruleId":"226","severity":1,"message":"229","line":97,"column":15,"nodeType":"228","endLine":97,"endColumn":18},{"ruleId":"215","severity":1,"message":"230","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"231","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"215","severity":1,"message":"230","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"231","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"215","severity":1,"message":"232","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":13},{"ruleId":"215","severity":1,"message":"233","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":13},{"ruleId":"215","severity":1,"message":"225","line":8,"column":17,"nodeType":"217","messageId":"218","endLine":8,"endColumn":28},{"ruleId":"215","severity":1,"message":"234","line":8,"column":41,"nodeType":"217","messageId":"218","endLine":8,"endColumn":46},{"ruleId":"215","severity":1,"message":"235","line":12,"column":7,"nodeType":"217","messageId":"218","endLine":12,"endColumn":19},{"ruleId":"215","severity":1,"message":"236","line":13,"column":7,"nodeType":"217","messageId":"218","endLine":13,"endColumn":23},{"ruleId":"215","severity":1,"message":"237","line":8,"column":31,"nodeType":"217","messageId":"218","endLine":8,"endColumn":39},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"238","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":21},{"ruleId":"215","severity":1,"message":"239","line":2,"column":16,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"215","severity":1,"message":"240","line":2,"column":22,"nodeType":"217","messageId":"218","endLine":2,"endColumn":28},{"ruleId":"215","severity":1,"message":"241","line":6,"column":19,"nodeType":"217","messageId":"218","endLine":6,"endColumn":29},{"ruleId":"215","severity":1,"message":"242","line":8,"column":7,"nodeType":"217","messageId":"218","endLine":8,"endColumn":14},{"ruleId":"215","severity":1,"message":"243","line":9,"column":7,"nodeType":"217","messageId":"218","endLine":9,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":26,"column":11,"nodeType":"228","endLine":26,"endColumn":22},{"ruleId":"215","severity":1,"message":"239","line":2,"column":16,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"215","severity":1,"message":"244","line":2,"column":22,"nodeType":"217","messageId":"218","endLine":2,"endColumn":30},{"ruleId":"215","severity":1,"message":"240","line":2,"column":32,"nodeType":"217","messageId":"218","endLine":2,"endColumn":38},{"ruleId":"215","severity":1,"message":"245","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":16},{"ruleId":"215","severity":1,"message":"243","line":9,"column":7,"nodeType":"217","messageId":"218","endLine":9,"endColumn":20},{"ruleId":"215","severity":1,"message":"246","line":11,"column":7,"nodeType":"217","messageId":"218","endLine":11,"endColumn":22},{"ruleId":"215","severity":1,"message":"239","line":2,"column":16,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"215","severity":1,"message":"242","line":8,"column":7,"nodeType":"217","messageId":"218","endLine":8,"endColumn":14},{"ruleId":"215","severity":1,"message":"243","line":9,"column":7,"nodeType":"217","messageId":"218","endLine":9,"endColumn":20},{"ruleId":"215","severity":1,"message":"247","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"231","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"215","severity":1,"message":"248","line":6,"column":31,"nodeType":"217","messageId":"218","endLine":6,"endColumn":38},{"ruleId":"215","severity":1,"message":"249","line":6,"column":48,"nodeType":"217","messageId":"218","endLine":6,"endColumn":55},{"ruleId":"215","severity":1,"message":"250","line":7,"column":24,"nodeType":"217","messageId":"218","endLine":7,"endColumn":36},{"ruleId":"215","severity":1,"message":"251","line":7,"column":38,"nodeType":"217","messageId":"218","endLine":7,"endColumn":50},{"ruleId":"215","severity":1,"message":"252","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":14},{"ruleId":"215","severity":1,"message":"253","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"254","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":15},{"ruleId":"215","severity":1,"message":"231","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"229","line":29,"column":33,"nodeType":"228","endLine":29,"endColumn":36},{"ruleId":"226","severity":1,"message":"229","line":39,"column":33,"nodeType":"228","endLine":39,"endColumn":36},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'display' is defined but never used.","'TextArea' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'getAudits' is defined but never used.","'submit' is defined but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'recaptchaRef' is assigned a value but never used.","'grecaptchaObject' is assigned a value but never used.","'Checkbox' is defined but never used.","'uploadPhoto' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'GET_MESSAGE' is defined but never used.","'SET_CURRENT_USER' is defined but never used.","'USER_LOADING' is defined but never used.","no-global-assign","no-unsafe-negation"]