[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/RegisterTenant.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"30"},{"size":500,"mtime":1616146148083,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1616146148083,"results":"33","hashOfConfig":"32"},{"size":2792,"mtime":1617625254432,"results":"34","hashOfConfig":"32"},{"size":404,"mtime":1616146148083,"results":"35","hashOfConfig":"32"},{"size":333,"mtime":1616146148083,"results":"36","hashOfConfig":"32"},{"size":8643,"mtime":1617636175199,"results":"37","hashOfConfig":"32"},{"size":9713,"mtime":1617783688960,"results":"38","hashOfConfig":"32"},{"size":2809,"mtime":1617625254432,"results":"39","hashOfConfig":"32"},{"size":2679,"mtime":1617625254432,"results":"40","hashOfConfig":"32"},{"size":808,"mtime":1617625254432,"results":"41","hashOfConfig":"32"},{"size":885,"mtime":1617625254432,"results":"42","hashOfConfig":"32"},{"size":1807,"mtime":1617625254432,"results":"43","hashOfConfig":"32"},{"size":1724,"mtime":1617625254432,"results":"44","hashOfConfig":"32"},{"size":4496,"mtime":1617625254432,"results":"45","hashOfConfig":"32"},{"size":149,"mtime":1617625254432,"results":"46","hashOfConfig":"32"},{"size":5761,"mtime":1617784740587,"results":"47","hashOfConfig":"32"},{"size":6277,"mtime":1617625254432,"results":"48","hashOfConfig":"32"},{"size":256,"mtime":1617625254432,"results":"49","hashOfConfig":"32"},{"size":476,"mtime":1617636115818,"results":"50","hashOfConfig":"32"},{"size":1313,"mtime":1616146161416,"results":"51","hashOfConfig":"32"},{"size":4027,"mtime":1617626306221,"results":"52","hashOfConfig":"32"},{"size":136,"mtime":1616146148083,"results":"53","hashOfConfig":"32"},{"size":9564,"mtime":1617625254432,"results":"54","hashOfConfig":"32"},{"size":1065,"mtime":1617625254432,"results":"55","hashOfConfig":"32"},{"size":2213,"mtime":1617625254432,"results":"56","hashOfConfig":"32"},{"size":979,"mtime":1617625254432,"results":"57","hashOfConfig":"32"},{"size":464,"mtime":1616672920849,"results":"58","hashOfConfig":"32"},{"size":207,"mtime":1616146148083,"results":"59","hashOfConfig":"32"},{"size":306,"mtime":1616146148083,"results":"60","hashOfConfig":"32"},{"size":626,"mtime":1616146148083,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"94aaqn",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["135","136"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["137","138","139","140"],"import \"../App.css\";\nimport { Collapse, Divider, DatePicker, Form, List, Input, Checkbox, Button, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport PhotoPop from \"./photo/PhotoPop.js\";\nimport { submit } from \"../actions/auditActions.js\";\nimport { uploadPhoto } from \"../actions/photoActions\";\nimport { modalGlobalConfig } from \"antd/lib/modal/confirm\";\nconst fileUpload = require('fuctbase64');\nconst nonFb = importJSON.non_fb;\nconst { Panel } = Collapse;\n\n// TODO: Take score from json file => Update the score, replace the json file\n\nclass ChecklistNonFB extends Component {\n\n  // not exactly dynamic\n  state = {\n    type: \"Non-FB\",\n    checked: false,\n    catCounts: [0, 0, 0],\n    // counts[0]: for Professionalism & Staff Hygiene (20%),\n    //counts[1]: for Housekeeping & General Cleanliness (40%)\n    //counts[2]: for Workplace Safety & Health (40%)\n    total_score: 0,\n    image: null,\n    date: null,\n    description: \"\",\n    location: \"\",\n    visibleForm: false,\n    visibleConfirm: false,\n    visibleAudit: false,\n  };\n\n  submitAudit = () => {\n    console.log(this.state);\n    submit({\n      type: \"Non-FB\",\n      catCounts: this.state.catCounts,\n      total_score:\n        this.state.catCounts[0] +\n        this.state.catCounts[1] +\n        this.state.catCounts[2],\n      image: this.state.image,\n      date: this.state.date,\n      description: this.state.description,\n      location: this.state.location,\n    });\n    this.showAuditModal();\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onChangeDate = (date, dateString) => {\n    this.setState({ date: date });\n  };\n\n  showFormModal = () => {\n    this.setState({\n      visibleForm: true,\n    });\n  };\n\n  showAuditModal = () => {\n    this.setState({\n      visibleAudit: true,\n    });\n  };\n\n  showConfirmModal = () => {\n    this.setState({\n      visibleConfirm: true,\n    });\n  };\n\n  handleFormOk = (e) => {\n    console.log(e);\n    this.showConfirmModal();\n  };\n\n  handleAuditOk = (e) => {\n    console.log(e);\n    this.setState({\n      visibleAudit: false,\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visibleForm: false,\n    });\n  };\n\n  handleUploadOk = e => {\n    console.log(e);\n    this.setState({\n      visibleConfirm: false,\n    });\n  };\n\n  createCheckbox = (label, catIndex) => (\n    <Checkbox\n      label={label}\n      // handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n      onChange={(e) => this.handleCount(e, catIndex)}\n    />\n  );\n\n  fileSelectedHandler = event => {\n    // console.log(event.target.files[0]);\n    fileUpload(event)\n      .then((data) => {\n        // console.log(\"base64: \", data.base64);\n        this.setState({\n          image: data.base64\n        })\n      })\n  }\n\n  handleCount = (e, catIndex) => {\n    const { checked, type } = e.target;\n    switch (catIndex) {\n      case 0:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[0]++);\n        } else {\n          this.setState((state) => state.catCounts[0]--);\n        }\n        break;\n      case 1:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[1]++);\n        } else {\n          this.setState((state) => state.catCounts[1]--);\n        }\n        break;\n      case 2:\n        if (type === \"checkbox\" && checked === true) {\n          this.setState((state) => state.catCounts[2]++);\n        } else {\n          this.setState((state) => state.catCounts[2]--);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"panels\">\n        {nonFb.map((cat, catIndex) => {\n          // var catScore = cat.score;\n          return (\n            // Category\n            <Collapse defaultActiveKey={[\"1\"]}>\n              <Panel\n                header={<div catIndex={catIndex}>{cat.name}</div>}\n                key={catIndex + 1}\n                className=\"bg-orange\"\n              >\n                <div catIndex={catIndex}>\n                  {cat.subcategories.map((subCat, subCatIndex) => {\n                    return (\n                      // SubCategory\n                      <Collapse defaultActiveKey={[\"1\"]}>\n                        <Panel\n                          header={\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\n                          }\n                          key={subCatIndex + 1}\n                          className=\"bg-orange\"\n                        >\n                          <List\n                            dataSource={subCat.questions} // Questions\n                            renderItem={(item) => (\n                              <List.Item>\n                                <div className=\"create-audit-row\">{item}</div>\n                                <div>{this.createCheckbox(item, catIndex)}</div>\n                              </List.Item>\n                            )}\n                          />\n                        </Panel>\n                      </Collapse>\n                    );\n                  })}\n                </div>\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\n              </Panel>\n            </Collapse>\n          );\n        })}\n        {/* <Button\n          className=\"submit-button\"\n          type=\"primary\"\n          onClick={this.onFinish}\n        >\n          SUBMIT\n        </Button> */}\n        <Button type=\"primary\" onClick={this.showFormModal}>\n          Upload Photo\n        </Button>\n        <Modal\n          title=\"Upload Photo\"\n          visible={this.state.visibleForm}\n          onOk={this.handleFormOk}\n          onCancel={this.handleCancel}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: false }}\n        >\n          <Form\n            name=\"photo_upload\"\n            className=\"photo-upload\"\n            onFinish={this.onFinish}\n          >\n            <Form.Item>\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\n            </Form.Item>\n            <Form.Item\n              name=\"date\"\n              rules={[{ required: true, message: \"Date of Incident\" }]}\n            >\n              <DatePicker\n                placeholder=\"Date\"\n                onChange={this.onChangeDate}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"description\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Description\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Description\"\n                onChange={this.onChange}\n                value={this.state.description}\n                id=\"description\"\n                type=\"description\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"location\"\n              rules={[{ required: true, message: \"Location of Incident\" }]}\n            >\n              <Input\n                placeholder=\"Location\"\n                onChange={this.onChange}\n                value={this.state.location}\n                id=\"location\"\n                type=\"location\"\n              />\n            </Form.Item>\n          </Form>\n          {/* <Form>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"upload-photo-button\"\n              onClick={() => { this.upload(this.state); }}\n            >\n              Upload\n                    </Button>\n          </Form> */}\n          <Modal\n            title=\"Upload Confirm\"\n            destroyOnClose={true}\n            visible={this.state.visibleConfirm}\n            onOk={this.handleUploadOk}\n            okButtonProps={{ disabled: false }}\n            cancelButtonProps={{ disabled: true, visible: false, }}\n          >\n            <p>Photo Added!</p>\n          </Modal>\n        </Modal>\n        <Button\n          onClick={() => this.submitAudit()}\n          className=\"submit-button\"\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          SUBMIT\n        </Button>\n        {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\n          TEST\n        </Button> */}\n        <Modal\n          title=\"\"\n          visible={this.state.visibleAudit}\n          onOk={this.handleAuditOk}\n          okButtonProps={{ disabled: false }}\n          cancelButtonProps={{ disabled: true, visible: false }}\n        >\n          <p>Audit Uploaded!</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChecklistNonFB;\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["141","142","143","144"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["145","146","147","148"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\nimport { getAudits } from \"../data/AuditData.ts\";\n\nconst { Column, ColumnGroup } = Table;\n\nconst Audit = (props) => (\n  <tr>\n    <td>{props.audit.username}</td>\n    <td>{props.audit.image}</td>\n    <td>{props.audit.notes}</td>\n    <td>{props.audit.tags}</td>\n    <td>{props.audit.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteAudit(props.audit._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class AuditList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n\n    this.state = { audits: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/audits\")\n      .then((response) => {\n        this.setState({ audits: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteAudit(id) {\n    axios\n      .delete(\"http://localhost:5000/audits/\" + id)\n      .then((res) => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter((el) => el._id !== id),\n    });\n  }\n\n  auditList() {\n    return this.state.audits.map((currentaudit) => {\n      return (\n        <Audit\n          audit={currentaudit}\n          deleteAudit={this.deleteAudit}\n          key={currentaudit._id}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className=\"table\">\n        <Table\n          dataSource={data}\n          title={() => <div className=\"table-title\">Audits</div>}\n          scroll={{ x: 400 }}\n        >\n          <Column title=\"Username\" dataIndex=\"username\" key=\"username\" />\n          <Column\n            title=\"Image\"\n            dataIndex=\"image\"\n            key=\"image\"\n            render={(text, record) => (\n              <a>\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\n              </a>\n            )}\n          />\n          <Column title=\"Notes\" dataIndex=\"notes\" key=\"notes\" />\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\n          <Column\n            title=\"Tags\"\n            dataIndex=\"tags\"\n            key=\"tags\"\n            render={(tags) => (\n              <>\n                {tags.map((tag) => (\n                  <Tag color=\"blue\" key={tag}>\n                    {tag}\n                  </Tag>\n                ))}\n              </>\n            )}\n          />\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst data = getAudits(\"Pamela\");\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["149","150"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["151","152"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["153","154","155"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Col, Table } from \"antd\";\nimport { getTenants } from \"../actions/authActions\";\n\nconst { Column, ColumnGroup } = Table;\n\n// const hardData = [\n//   {\n//     _id: \"60631883a28310df640dcfe9\",\n//     userId: \"60631883a28310df640dcfe8\",\n//     address: \"addtenent7\",\n//     institution: \"CGH\",\n//     auditor: \"1\",\n//     __v: 0,\n//   },\n//   {\n//     _id: \"60631d491b5182a0d81d3942\",\n//     userId: \"60631d491b5182a0d81d3941\",\n//     address: \"tenant1\",\n//     institution: \"SGH\",\n//     auditor: \"staff1\",\n//     __v: 0,\n//   },\n// ];\nexport default class Directory extends Component {\n  state = {\n    tenantData: [],\n  };\n\n  // TODO: can't get data to assign to state before rendering\n  componentDidMount() {\n    getTenants((data) => {\n      this.setState({ tenantData: data });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"table\">\n        <Table\n          dataSource={this.state.tenantData}\n          scroll={{ x: 400 }}\n          title={() => <div className=\"table-title\">Tenants</div>}\n        >\n          <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n          <Column\n            title=\"Institution\"\n            dataIndex=\"institution\"\n            key=\"institution\"\n          />\n          <Column title=\"Auditor\" dataIndex=\"auditor\" key=\"auditor\" />\n          <Column title=\"User Id\" dataIndex=\"userId\" key=\"userId\" />\n        </Table>\n      </div>\n    );\n    //     <div className=\"panels\">\n    //       {/* <Table> */}\n    //       {this.state.tenants.map((tenant, tenIndex) => {\n    //         console.log(tenant);\n    //         return <div>{tenant}</div>;\n    //       })}\n    //       {/* </Table> */}\n    //     </div>\n    //   );\n    // }\n  }\n}\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["156"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport { Form, Input, Button, Checkbox, Radio } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n  }\n  // might be deprecated\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    var { usertype } = \"\";\n    if (this.state.usertypebool) {\n      usertype = \"staff\";\n    } else {\n      usertype = \"tenant\";\n    }\n    const userData = {\n      email: values.email,\n      password: values.password,\n      usertype: usertype,\n    };\n    console.log(values);\n\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <Form\n        onFinish={this.onFinish}\n        name=\"normal_login\"\n        className=\"login-register-form\"\n      >\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>Enter your email and password to log in </p>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your Email!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            className={classnames(\"\", {\n              invalid: errors.email || errors.emailnotfound,\n            })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Password\"\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            className={classnames(\"\", {\n              invalid: errors.password || errors.passwordincorrect,\n            })}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"usertypebool\">\n          <Checkbox\n            onChange={this.onCheckboxChange}\n            value={this.state.usertypebool}\n            error={errors.usertypebool}\n            id=\"usertypebool\"\n          >\n            Singhealth Staff Member?\n          </Checkbox>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            id=\"login-button\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-register-form-button\"\n          >\n            Log in\n          </Button>\n          New staff member? <Link to=\"/Register\">Register here!</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/RegisterTenant.js",["157","158","159","160","161"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["162"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onFinish = (values) => {\n    getStaffKey((data) => {\n      // console.log(\"data is: \", data);\n      this.setState({ ...this.state, dbstaffkey: data });\n      // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n      if (this.state.staffkey === this.state.dbstaffkey) {\n        const newUser = {\n          name: values.name,\n          email: values.email,\n          password: values.password,\n          password2: values.password2,\n          usertype: \"staff\",\n        };\n        // console.log(newUser);\n        alert(\"User created!\");\n        this.props.registerUser(newUser, this.props.history);\n      } else {\n        alert(\"Staff Key is incorrect!\");\n      }\n    });\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Form\n        name=\"normal_login\"\n        className=\"login-register-form\"\n        onFinish={this.onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your Name!\" }]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Name\"\n            onChange={this.onChange}\n            value={this.state.name}\n            error={errors.name}\n            id=\"name\"\n            type=\"text\"\n            // className={classnames(\"\", {\n            // invalid: errors.name,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input a valid Email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Email\"\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            id=\"email\"\n            type=\"email\"\n            // className={classnames(\"\", {\n            //   invalid: errors.email,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Password\"\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            id=\"password\"\n            type=\"password\"\n            // className={classnames(\"\", {\n            //   invalid: errors.password,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password2\"\n          dependencies={[\"password\"]}\n          hasFeedback\n          rules={[\n            { required: true, message: \"Passwords do not match!\" },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue(\"password\") === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject(\n                  new Error(\"The two passwords that you entered do not match!\")\n                );\n              },\n            }),\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Confirm Password\"\n            onChange={this.onChange}\n            value={this.state.password2}\n            error={errors.password2}\n            id=\"password2\"\n            type=\"password\"\n            // className={classnames(\"\", {\n            // invalid: errors.password2,\n            // })}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name=\"staffkey\"\n          rules={[{ required: true, message: \"Please input your staff key!\" }]}\n        >\n          <Input\n            prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Staff Key\"\n            onChange={this.onChange}\n            onCh\n            value={this.state.staffkey}\n            error={errors.staffkey}\n            id=\"staffkey\"\n            type=\"staffkey\"\n            className={classnames(\"\", {\n              invalid: errors.key || errors.keyincorrect,\n            })}\n          />\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-register-form-button\"\n          >\n            Register\n          </Button>\n          Or <Link to=\"/Login\">Login here</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/AuditData.ts",[],["163","164"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/photo/PhotoPop.js",["165"],"import React, { Component } from \"react\";\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\nimport { uploadPhoto } from \"../../actions/photoActions\";\nconst fileUpload = require('fuctbase64');\n\nexport default class PhotoPop extends Component {\n    state = {\n        image: null,\n        date: null,\n        description: \"\",\n        location: \"\",\n        photo: null,\n        visible: false,\n    }\n\n    fileSelectedHandler = event => {\n        // console.log(event.target.files[0]);\n        fileUpload(event)\n            .then((data) => {\n                // console.log(\"base64: \", data.base64);\n                this.setState({\n                    image: data.base64\n                })\n            })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onChangeDate = (date, dateString) => {\n        this.setState({ date: date });\n    };\n\n\n    upload = (values) => {\n        // console.log(values);\n        this.showModal2();\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    showModal2 = () => {\n        this.setState({\n            visible2: true,\n        });\n    };\n\n    handleUploadOk = e => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Form\n                    name=\"photo_upload\"\n                    className=\"photo-upload\"\n                    onFinish={this.onFinish}\n                >\n                    <Form.Item>\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"date\"\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\n                    >\n                        <DatePicker\n                            placeholder=\"Date\"\n                            onChange={this.onChangeDate}\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"description\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Description\",\n                            },\n                        ]}\n                    >\n                        <Input\n                            placeholder=\"Description\"\n                            onChange={this.onChange}\n                            value={this.state.description}\n                            id=\"description\"\n                            type=\"description\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"location\"\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\n                    >\n                        <Input\n                            placeholder=\"Location\"\n                            onChange={this.onChange}\n                            value={this.state.location}\n                            id=\"location\"\n                            type=\"location\"\n                        />\n                    </Form.Item>\n                </Form>\n                <Form>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"upload-photo-button\"\n                        onClick={() => { this.upload(this.state); }}\n                    >\n                        Upload\n                    </Button>\n                </Form>\n                <Modal\n                    title=\"\"\n                    visible={this.state.visible2}\n                    onOk={this.handleUploadOk}\n                    okButtonProps={{ disabled: false }}\n                    cancelButtonProps={{ disabled: true, visible: false, }}\n                >\n                    <p>Photo Uploaded!</p>\n                </Modal>\n            </div>\n        );\n    }\n}","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/data/questionsData.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["166","167","168","169","170","171"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Button } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\">\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\n            Logout\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"\">Hello {user.name}</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["172","173","174","175","176","177"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu>\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"editaudit\">\n          <NavLink to=\"/tenant/editaudit\">Edit Audit</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["178","179","180"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/photoActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":20,"nodeType":"187","messageId":"188","endLine":2,"endColumn":27},{"ruleId":"185","severity":1,"message":"189","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"190","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":21},{"ruleId":"185","severity":1,"message":"191","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":2,"column":20,"nodeType":"187","messageId":"188","endLine":2,"endColumn":27},{"ruleId":"185","severity":1,"message":"189","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"192","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":25},{"ruleId":"185","severity":1,"message":"193","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":12},{"ruleId":"185","severity":1,"message":"194","line":4,"column":22,"nodeType":"187","messageId":"188","endLine":4,"endColumn":27},{"ruleId":"185","severity":1,"message":"195","line":7,"column":17,"nodeType":"187","messageId":"188","endLine":7,"endColumn":28},{"ruleId":"196","severity":1,"message":"197","line":18,"column":7,"nodeType":"198","endLine":23,"endColumn":8},{"ruleId":"196","severity":1,"message":"199","line":84,"column":15,"nodeType":"198","endLine":84,"endColumn":18},{"ruleId":"185","severity":1,"message":"200","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"201","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"200","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"201","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"202","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":13},{"ruleId":"185","severity":1,"message":"203","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":13},{"ruleId":"185","severity":1,"message":"195","line":6,"column":17,"nodeType":"187","messageId":"188","endLine":6,"endColumn":28},{"ruleId":"185","severity":1,"message":"204","line":8,"column":41,"nodeType":"187","messageId":"188","endLine":8,"endColumn":46},{"ruleId":"185","severity":1,"message":"201","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"205","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":18},{"ruleId":"185","severity":1,"message":"206","line":7,"column":31,"nodeType":"187","messageId":"188","endLine":7,"endColumn":39},{"ruleId":"185","severity":1,"message":"207","line":8,"column":24,"nodeType":"187","messageId":"188","endLine":8,"endColumn":36},{"ruleId":"185","severity":1,"message":"208","line":8,"column":38,"nodeType":"187","messageId":"188","endLine":8,"endColumn":50},{"ruleId":"185","severity":1,"message":"206","line":8,"column":31,"nodeType":"187","messageId":"188","endLine":8,"endColumn":39},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"190","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":21},{"ruleId":"185","severity":1,"message":"209","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"210","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":28},{"ruleId":"185","severity":1,"message":"211","line":6,"column":19,"nodeType":"187","messageId":"188","endLine":6,"endColumn":29},{"ruleId":"185","severity":1,"message":"212","line":8,"column":7,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":9,"column":7,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":26,"column":11,"nodeType":"198","endLine":26,"endColumn":22},{"ruleId":"185","severity":1,"message":"209","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"214","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":30},{"ruleId":"185","severity":1,"message":"210","line":2,"column":32,"nodeType":"187","messageId":"188","endLine":2,"endColumn":38},{"ruleId":"185","severity":1,"message":"215","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":16},{"ruleId":"185","severity":1,"message":"213","line":9,"column":7,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},{"ruleId":"185","severity":1,"message":"216","line":11,"column":7,"nodeType":"187","messageId":"188","endLine":11,"endColumn":22},{"ruleId":"185","severity":1,"message":"209","line":2,"column":16,"nodeType":"187","messageId":"188","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"212","line":8,"column":7,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"185","severity":1,"message":"213","line":9,"column":7,"nodeType":"187","messageId":"188","endLine":9,"endColumn":20},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'PhotoPop' is defined but never used.","'uploadPhoto' is defined but never used.","'modalGlobalConfig' is defined but never used.","'display' is defined but never used.","'FB' is defined but never used.","'Space' is defined but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'Col' is defined but never used.","'Radio' is defined but never used.","'classnames' is defined but never used.","'Checkbox' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]