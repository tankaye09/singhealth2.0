[{"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js":"2","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js":"3","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"5","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"6","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js":"9","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"10","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js":"11","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js":"13","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js":"14","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"15","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"16","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js":"17","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"18","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts":"19","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts":"20","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"21","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js":"22","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js":"23","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js":"24","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js":"25","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js":"26","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js":"27","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js":"28","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js":"29","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js":"30","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js":"31","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js":"32","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js":"33","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js":"34","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js":"35","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js":"36","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js":"37","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js":"38"},{"size":500,"mtime":499162500000,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":3147,"mtime":1617882104166,"results":"42","hashOfConfig":"40"},{"size":1829,"mtime":1617849394394,"results":"43","hashOfConfig":"40"},{"size":2423,"mtime":1617878486490,"results":"44","hashOfConfig":"40"},{"size":1014,"mtime":1617248893153,"results":"45","hashOfConfig":"40"},{"size":5518,"mtime":1617903467238,"results":"46","hashOfConfig":"40"},{"size":8261,"mtime":1617903467241,"results":"47","hashOfConfig":"40"},{"size":416,"mtime":1617903467243,"results":"48","hashOfConfig":"40"},{"size":346,"mtime":1615042085091,"results":"49","hashOfConfig":"40"},{"size":2822,"mtime":1617799141892,"results":"50","hashOfConfig":"40"},{"size":1556,"mtime":1615042085085,"results":"51","hashOfConfig":"40"},{"size":335,"mtime":1617873215632,"results":"52","hashOfConfig":"40"},{"size":367,"mtime":1617869718833,"results":"53","hashOfConfig":"40"},{"size":383,"mtime":1617785633533,"results":"54","hashOfConfig":"40"},{"size":655,"mtime":1617780063882,"results":"55","hashOfConfig":"40"},{"size":10345,"mtime":1617876836801,"results":"56","hashOfConfig":"40"},{"size":1104,"mtime":1617249822114,"results":"57","hashOfConfig":"40"},{"size":1353,"mtime":1616680756599,"results":"58","hashOfConfig":"40"},{"size":1168,"mtime":1616680756601,"results":"59","hashOfConfig":"40"},{"size":9352,"mtime":1617881169763,"results":"60","hashOfConfig":"40"},{"size":466,"mtime":1617850103319,"results":"61","hashOfConfig":"40"},{"size":4160,"mtime":1617790766858,"results":"62","hashOfConfig":"40"},{"size":484,"mtime":1616683440095,"results":"63","hashOfConfig":"40"},{"size":9685,"mtime":1616683293777,"results":"64","hashOfConfig":"40"},{"size":839,"mtime":1617186663232,"results":"65","hashOfConfig":"40"},{"size":916,"mtime":1617186927393,"results":"66","hashOfConfig":"40"},{"size":156,"mtime":1617187006472,"results":"67","hashOfConfig":"40"},{"size":268,"mtime":1617191722548,"results":"68","hashOfConfig":"40"},{"size":6237,"mtime":1617873351766,"results":"69","hashOfConfig":"40"},{"size":2887,"mtime":1617876712431,"results":"70","hashOfConfig":"40"},{"size":439,"mtime":1617786448369,"results":"71","hashOfConfig":"40"},{"size":2087,"mtime":1617865068883,"results":"72","hashOfConfig":"40"},{"size":231,"mtime":1617786537162,"results":"73","hashOfConfig":"40"},{"size":6703,"mtime":1617903467236,"results":"74","hashOfConfig":"40"},{"size":687,"mtime":1617873059711,"results":"75","hashOfConfig":"40"},{"size":385,"mtime":1617873171029,"results":"76","hashOfConfig":"40"},{"size":4179,"mtime":1617876712432,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"n2tzlt",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"80"},"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\index.js",[],["168","169"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\App.js",["170"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["171","172","173","174","175","176","177"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["178","179","180"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\r\n          <Link to=\"/register\">Register</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["181"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["182"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],["183","184"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\Checklist.js",["185","186"],"import \"../App.css\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport { submit, display } from \"../actions/auditActions.js\";\r\nconst fileUpload = require(\"fuctbase64\");\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass Checklist extends Component {\r\n  // componentWillMount = () => {\r\n  //   this.selectedCheckboxes = new Set();\r\n  // };\r\n\r\n  // toggleCheckbox = (label) => {\r\n  //   if (this.selectedCheckboxes.has(label)) {\r\n  //     this.selectedCheckboxes.delete(label);\r\n  //   } else {\r\n  //     this.selectedCheckboxes.add(label);\r\n  //   }\r\n  // };\r\n\r\n  // handleFormSubmit = (formSubmitEvent) => {\r\n  //   formSubmitEvent.preventDefault();\r\n\r\n  //   for (const checkbox of this.selectedCheckboxes) {\r\n  //     console.log(checkbox, \"is selected.\");\r\n  //   }\r\n  // };\r\n\r\n  // onFinish = () => {\r\n  //   var newState = [];\r\n  //   for (var i = 0; i < this.state.catCounts.length; i++) {\r\n  //     newState.push(this.state.catCounts[i] / 2);\r\n  //   }\r\n  //   const submitData = {\r\n  //     catCounts: newState,\r\n  //   };\r\n\r\n  //   console.log(submitData);\r\n  // };\r\n\r\n  submitAudit = () => {\r\n    console.log(this.state);\r\n    submit({\r\n      type: \"FB\",\r\n      catCounts: this.state.catCounts,\r\n      total_score:\r\n        this.state.catCounts[0] +\r\n        this.state.catCounts[1] +\r\n        this.state.catCounts[2] +\r\n        this.state.catCounts[3] +\r\n        this.state.catCounts[4],\r\n      image: this.state.image,\r\n      date: this.state.date,\r\n      description: this.state.description,\r\n      location: this.state.location,\r\n    });\r\n    this.showAuditModal();\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onChangeDate = (date, dateString) => {\r\n    this.setState({ date: date });\r\n  };\r\n\r\n  fileSelectedHandler = (event) => {\r\n    // console.log(event.target.files[0]);\r\n    fileUpload(event).then((data) => {\r\n      // console.log(\"base64: \", data.base64);\r\n      this.setState({\r\n        image: data.base64,\r\n      });\r\n    });\r\n  };\r\n\r\n  showAuditModal = () => {\r\n    this.setState({\r\n      visibleAudit: true,\r\n    });\r\n  };\r\n\r\n  showFormModal = () => {\r\n    this.setState({\r\n      visibleForm: true,\r\n    });\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({\r\n      visibleConfirm: true,\r\n    });\r\n  };\r\n\r\n  handleAuditOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleAudit: false,\r\n    });\r\n  };\r\n\r\n  handleFormOk = (e) => {\r\n    console.log(e);\r\n    this.showConfirmModal();\r\n  };\r\n\r\n  handleUploadOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleConfirm: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleForm: false,\r\n    });\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n  handlegcCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.gc_count++);\r\n    } else {\r\n      this.setState((state) => state.gc_count--);\r\n    }\r\n  };\r\n  //for food hygiene cat\r\n  createfoodCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handlefoodCheckCount(e)}\r\n    />\r\n  );\r\n  handlefoodCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.food_count++);\r\n    } else {\r\n      this.setState((state) => state.food_count--);\r\n    }\r\n  };\r\n\r\n  // not exactly dynamic\r\n  state = {\r\n    checked: false,\r\n    catCounts: [0, 0, 0, 0, 0], // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\r\n    image: null,\r\n    date: null,\r\n    description: \"\",\r\n    location: \"\",\r\n    visibleForm: false,\r\n    visibleConfirm: false,\r\n    visibleAudit: false,\r\n  };\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n      case 3:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[3]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[3]--);\r\n        }\r\n        break;\r\n      case 4:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[4]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[4]--);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <h1>FB CheckList</h1>\r\n\r\n        {Fb.map((cat, catIndex) => {\r\n          // var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"checklist-item\">\r\n                                  <div className=\"create-audit-row\">{item}</div>\r\n                                  <div className=\"checklist-checkbox\">\r\n                                    {this.createCheckbox(item, catIndex)}\r\n                                  </div>\r\n                                </div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n        <Button type=\"primary\" onClick={this.showFormModal}>\r\n          Upload Photo\r\n        </Button>\r\n        <Modal\r\n          title=\"Upload Photo\"\r\n          visible={this.state.visibleForm}\r\n          onOk={this.handleFormOk}\r\n          onCancel={this.handleCancel}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: false }}\r\n        >\r\n          <Form\r\n            name=\"photo_upload\"\r\n            className=\"photo-upload\"\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"date\"\r\n              rules={[{ required: true, message: \"Date of Incident\" }]}\r\n            >\r\n              <DatePicker placeholder=\"Date\" onChange={this.onChangeDate} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Description\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Description\"\r\n                onChange={this.onChange}\r\n                value={this.state.description}\r\n                id=\"description\"\r\n                type=\"description\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"location\"\r\n              rules={[{ required: true, message: \"Location of Incident\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Location\"\r\n                onChange={this.onChange}\r\n                value={this.state.location}\r\n                id=\"location\"\r\n                type=\"location\"\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <Modal\r\n            title=\"Upload Confirm\"\r\n            destroyOnClose={true}\r\n            visible={this.state.visibleConfirm}\r\n            onOk={this.handleUploadOk}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: true, visible: false }}\r\n          >\r\n            <p>Photo Added!</p>\r\n          </Modal>\r\n        </Modal>\r\n        <Button\r\n          className=\"submit-button\"\r\n          type=\"primary\"\r\n          onClick={() => this.submitAudit()}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"\"\r\n          visible={this.state.visibleAudit}\r\n          onOk={this.handleAuditOk}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: true, visible: false }}\r\n        >\r\n          <p>Audit Uploaded!</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Checklist;\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["187","188","189","190","191","192"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"vertical\">\r\n        <Menu.Item key=\"mail\">\r\n          <NavLink onClick={this.onLogoutClick} to=\"/login\">\r\n            Logout\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Hello {user.name}</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],["193","194"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["195","196"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["197","198"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\auditActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\photo\\PhotoPop.js",["199"],"import React, { Component } from \"react\";\r\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\r\nimport { uploadPhoto } from \"../../actions/photoActions\";\r\nconst fileUpload = require('fuctbase64');\r\n\r\nexport default class PhotoPop extends Component {\r\n    state = {\r\n        image: null,\r\n        date: null,\r\n        description: \"\",\r\n        location: \"\",\r\n        photo: null,\r\n        visible: false,\r\n    }\r\n\r\n    fileSelectedHandler = event => {\r\n        // console.log(event.target.files[0]);\r\n        fileUpload(event)\r\n            .then((data) => {\r\n                // console.log(\"base64: \", data.base64);\r\n                this.setState({\r\n                    image: data.base64\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        this.setState({ date: date });\r\n    };\r\n\r\n\r\n    upload = (values) => {\r\n        // console.log(values);\r\n        this.showModal2();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    showModal2 = () => {\r\n        this.setState({\r\n            visible2: true,\r\n        });\r\n    };\r\n\r\n    handleUploadOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"photo_upload\"\r\n                    className=\"photo-upload\"\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item>\r\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"date\"\r\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\r\n                    >\r\n                        <DatePicker\r\n                            placeholder=\"Date\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Description\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Description\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.description}\r\n                            id=\"description\"\r\n                            type=\"description\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"location\"\r\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Location\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.location}\r\n                            id=\"location\"\r\n                            type=\"location\"\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"upload-photo-button\"\r\n                        onClick={() => { this.upload(this.state); }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"\"\r\n                    visible={this.state.visible2}\r\n                    onOk={this.handleUploadOk}\r\n                    okButtonProps={{ disabled: false }}\r\n                    cancelButtonProps={{ disabled: true, visible: false, }}\r\n                >\r\n                    <p>Photo Uploaded!</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}",["200","201"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\photoActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\data\\questionsData.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\StaffRoute.js",["202","203"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nStaffRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(StaffRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\private-route\\TenantRoute.js",["204","205"],"import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nTenantRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(TenantRoute);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\TenantHome.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\tenant\\EditAudit.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\TenantList.js",["206","207"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTenants, setSelectedTenant } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormProvider } from \"antd/lib/form/context\";\r\n\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      tenantInfo: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  onCreateClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    if (record.type === \"F&B\") {\r\n      this.props.history.push(\"/checklistFB\");\r\n    } else this.props.history.push(\"/checklistNonFB\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n  onEditClick = () => ({\r\n    //pass props to checklist\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n  });\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      {\r\n        title: \"Auditor\",\r\n        dataIndex: \"auditor\",\r\n        key: \"auditor\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"auditor\"),\r\n      },\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"id\"),\r\n      },\r\n      {\r\n        title: \"FB/NonFB\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Audit Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onCreateClick(record)}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onEditClick(record)}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.tenantData}\r\n          scroll={{ x: 400, y: 300 }}\r\n          title={() => <div className=\"table-title\">Tenants</div>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\r\n  Directory\r\n);\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\AuditList.js",["208","209","210","211","212","213","214","215"],"import React, { Component, TextArea } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { getAudits } from \"../data/AuditData.ts\";\r\nimport { display } from \"../actions/auditActions.js\"; import { submit } from \"../actions/auditActions.js\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"http://localhost:5000/api/audits\")\r\n    //   .then((response) => {\r\n    //     this.setState({ audits: response.data });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n    display((data) => {\r\n      this.setState({ audits: data });\r\n    });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    // console.log(this.state.audits);\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={this.state.audits}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n          scroll={{ x: 400 }}\r\n        >\r\n          <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\r\n          <Column title=\"Tenant\" dataIndex=\"tenant\" key=\"tenant\" />\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Total Score\"\r\n            dataIndex=\"total_score\"\r\n            key=\"total_score\"\r\n          />\r\n          <Column\r\n            title=\"View Audit\"\r\n            dataIndex=\"view_audit\"\r\n            key=\"view_audit\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\r\n              </a>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const data = getAudits(\"Pamela\");\r\n","C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\messageReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\MessageDisplay.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\errorActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\auth\\CreateTenant.js",["216","217","218","219","220","221"],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\actions\\tenantActions.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\reducers\\tenantReducer.js",[],"C:\\Users\\tanka\\Desktop\\ESC\\Project\\SingHealthApp\\singhealth2.0\\client\\src\\components\\ViewAudit.js",["222","223","224"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\nexport default class ViewAudit extends Component {\r\n    state = {\r\n        input: \"85\",\r\n        tenant: \"tenant1\",\r\n        auditor: \"auditor\",\r\n        auditorComments: [\"Bla\", \"blabla\"],\r\n        tenantComments: [\"Response\", \"response\"],\r\n        image: \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\",\r\n        decodedImage: \"\",\r\n        newComment: \"\",\r\n    };\r\n\r\n\r\n\r\n    displayComments() {\r\n        var Comm = [];\r\n        for (var i = 0; i < Math.max(this.state.auditorComments.length, this.state.tenantComments.length); i++) {\r\n            if (this.state.auditorComments[i] != null) {\r\n                Comm.push(<div>\r\n                    <Comment\r\n                        author={<a>{this.state.auditor}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{this.state.auditorComments[i]}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n            if (this.state.tenantComments[i] != null) {\r\n                Comm.push(<div>\r\n                    <Comment\r\n                        author={<a>{this.state.tenant}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{this.state.tenantComments[i]}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {Comm}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange = value => {\r\n        console.log(value.Text);\r\n        this.setState({\r\n            newComment: value\r\n        })\r\n        console.log(this.state.newComment);\r\n    };\r\n\r\n    newComment = (values) => {\r\n        // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n        this.setState({\r\n            newComment: values.nativeEvent.explicitOriginalTarget.value\r\n        })\r\n        // console.log(this.state.newComment)\r\n    }\r\n\r\n    submitComment = () => {\r\n        var tempArray = this.state.auditorComments;\r\n        console.log(tempArray);\r\n        tempArray.push(this.state.newComment);\r\n        console.log(tempArray);\r\n        this.setState({\r\n            auditorComments: tempArray,\r\n        })\r\n        console.log(this.state.auditorComments);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <Progress className=\"score\"\r\n                    type=\"circle\"\r\n                    percent={this.state.input} width={300} />\r\n                <div>\r\n                    <Text className=\"name\">\r\n                        Tenant: {this.state.tenant}\r\n                    </Text>\r\n                    <div />\r\n                    <Text className=\"name\">\r\n                        Auditor: {this.state.auditor}\r\n                    </Text>\r\n                    <div />\r\n                    <p className=\"name2\">ImageList:</p>\r\n                    <Image\r\n                        width={200}\r\n                        src={`data:image/jpeg;base64,${this.state.image}`}\r\n                    />\r\n                    <div />\r\n                    {this.displayComments()}\r\n                    <div />\r\n                    <Form className=\"addComment\" onChange={this.newComment} initialValues={{\r\n                        remember: false,\r\n                    }}>\r\n                        <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n                            <TextArea className=\"addCommentText\" placeholder=\"Add Comment\" rows={4} allowClear={true} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                                Submit Comment\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}",{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":17},{"ruleId":"229","severity":1,"message":"233","line":2,"column":16,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"229","severity":1,"message":"234","line":2,"column":22,"nodeType":"231","messageId":"232","endLine":2,"endColumn":30},{"ruleId":"229","severity":1,"message":"235","line":2,"column":32,"nodeType":"231","messageId":"232","endLine":2,"endColumn":38},{"ruleId":"229","severity":1,"message":"236","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":16},{"ruleId":"229","severity":1,"message":"237","line":8,"column":7,"nodeType":"231","messageId":"232","endLine":8,"endColumn":14},{"ruleId":"229","severity":1,"message":"238","line":9,"column":7,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"229","severity":1,"message":"239","line":11,"column":7,"nodeType":"231","messageId":"232","endLine":11,"endColumn":22},{"ruleId":"229","severity":1,"message":"233","line":2,"column":16,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"229","severity":1,"message":"237","line":8,"column":7,"nodeType":"231","messageId":"232","endLine":8,"endColumn":14},{"ruleId":"229","severity":1,"message":"238","line":9,"column":7,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"229","severity":1,"message":"240","line":9,"column":41,"nodeType":"231","messageId":"232","endLine":9,"endColumn":46},{"ruleId":"229","severity":1,"message":"241","line":9,"column":31,"nodeType":"231","messageId":"232","endLine":9,"endColumn":39},{"ruleId":"225","replacedBy":"242"},{"ruleId":"227","replacedBy":"243"},{"ruleId":"229","severity":1,"message":"244","line":4,"column":3,"nodeType":"231","messageId":"232","endLine":4,"endColumn":10},{"ruleId":"229","severity":1,"message":"245","line":15,"column":18,"nodeType":"231","messageId":"232","endLine":15,"endColumn":25},{"ruleId":"229","severity":1,"message":"233","line":2,"column":16,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"229","severity":1,"message":"235","line":2,"column":22,"nodeType":"231","messageId":"232","endLine":2,"endColumn":28},{"ruleId":"229","severity":1,"message":"246","line":6,"column":19,"nodeType":"231","messageId":"232","endLine":6,"endColumn":29},{"ruleId":"229","severity":1,"message":"237","line":8,"column":7,"nodeType":"231","messageId":"232","endLine":8,"endColumn":14},{"ruleId":"229","severity":1,"message":"238","line":9,"column":7,"nodeType":"231","messageId":"232","endLine":9,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":26,"column":11,"nodeType":"249","endLine":26,"endColumn":22},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"225","replacedBy":"250"},{"ruleId":"227","replacedBy":"251"},{"ruleId":"229","severity":1,"message":"244","line":4,"column":3,"nodeType":"231","messageId":"232","endLine":4,"endColumn":10},{"ruleId":"229","severity":1,"message":"252","line":18,"column":8,"nodeType":"231","messageId":"232","endLine":18,"endColumn":13},{"ruleId":"229","severity":1,"message":"253","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":21},{"ruleId":"225","replacedBy":"254"},{"ruleId":"227","replacedBy":"255"},{"ruleId":"229","severity":1,"message":"256","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"257","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"256","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":26},{"ruleId":"229","severity":1,"message":"257","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"258","line":2,"column":8,"nodeType":"231","messageId":"232","endLine":2,"endColumn":13},{"ruleId":"229","severity":1,"message":"259","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":22},{"ruleId":"229","severity":1,"message":"260","line":1,"column":28,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"261","line":4,"column":17,"nodeType":"231","messageId":"232","endLine":4,"endColumn":20},{"ruleId":"229","severity":1,"message":"262","line":4,"column":22,"nodeType":"231","messageId":"232","endLine":4,"endColumn":27},{"ruleId":"229","severity":1,"message":"263","line":5,"column":10,"nodeType":"231","messageId":"232","endLine":5,"endColumn":19},{"ruleId":"229","severity":1,"message":"264","line":6,"column":64,"nodeType":"231","messageId":"232","endLine":6,"endColumn":70},{"ruleId":"229","severity":1,"message":"265","line":8,"column":17,"nodeType":"231","messageId":"232","endLine":8,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":19,"column":7,"nodeType":"249","endLine":24,"endColumn":8},{"ruleId":"247","severity":1,"message":"266","line":97,"column":15,"nodeType":"249","endLine":97,"endColumn":18},{"ruleId":"229","severity":1,"message":"267","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"229","severity":1,"message":"257","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":14},{"ruleId":"229","severity":1,"message":"268","line":6,"column":31,"nodeType":"231","messageId":"232","endLine":6,"endColumn":38},{"ruleId":"229","severity":1,"message":"269","line":6,"column":48,"nodeType":"231","messageId":"232","endLine":6,"endColumn":55},{"ruleId":"229","severity":1,"message":"270","line":7,"column":24,"nodeType":"231","messageId":"232","endLine":7,"endColumn":36},{"ruleId":"229","severity":1,"message":"271","line":7,"column":38,"nodeType":"231","messageId":"232","endLine":7,"endColumn":50},{"ruleId":"229","severity":1,"message":"257","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"266","line":29,"column":33,"nodeType":"249","endLine":29,"endColumn":36},{"ruleId":"247","severity":1,"message":"266","line":39,"column":33,"nodeType":"249","endLine":39,"endColumn":36},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'Recaptcha' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'CreateAuditMenu' is assigned a value but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.",["272"],["273"],"'Divider' is defined but never used.","'display' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["272"],["273"],"'store' is defined but never used.","'uploadPhoto' is defined but never used.",["272"],["273"],"'Component' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'FormProvider' is defined but never used.","'TextArea' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'getAudits' is defined but never used.","'submit' is defined but never used.","'ColumnGroup' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]