[{"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js":"1","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js":"2","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js":"3","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js":"4","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js":"5","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js":"6","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js":"7","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js":"8","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js":"9","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js":"10","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js":"11","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js":"12","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js":"13","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js":"14","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js":"15","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js":"16","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js":"17","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js":"18","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js":"19","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js":"20","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js":"21","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js":"22","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js":"23","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js":"24","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js":"25","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js":"26","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js":"27","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js":"28","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js":"29","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js":"30","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js":"31","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js":"32","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js":"33","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js":"34","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js":"35"},{"size":500,"mtime":1616146148083,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1616146148083,"results":"38","hashOfConfig":"37"},{"size":3582,"mtime":1618978810224,"results":"39","hashOfConfig":"37"},{"size":333,"mtime":1616146148083,"results":"40","hashOfConfig":"37"},{"size":404,"mtime":1618978810240,"results":"41","hashOfConfig":"37"},{"size":2005,"mtime":1617883876287,"results":"42","hashOfConfig":"37"},{"size":808,"mtime":1617625254432,"results":"43","hashOfConfig":"37"},{"size":885,"mtime":1617625254432,"results":"44","hashOfConfig":"37"},{"size":5799,"mtime":1618978810224,"results":"45","hashOfConfig":"37"},{"size":8295,"mtime":1618926475863,"results":"46","hashOfConfig":"37"},{"size":10353,"mtime":1618978810240,"results":"47","hashOfConfig":"37"},{"size":15380,"mtime":1618978810240,"results":"48","hashOfConfig":"37"},{"size":14412,"mtime":1618978810240,"results":"49","hashOfConfig":"37"},{"size":12323,"mtime":1618982750118,"results":"50","hashOfConfig":"37"},{"size":11228,"mtime":1618978810240,"results":"51","hashOfConfig":"37"},{"size":1929,"mtime":1618919393740,"results":"52","hashOfConfig":"37"},{"size":7498,"mtime":1618919393740,"results":"53","hashOfConfig":"37"},{"size":5958,"mtime":1618919393740,"results":"54","hashOfConfig":"37"},{"size":7560,"mtime":1618926461703,"results":"55","hashOfConfig":"37"},{"size":8366,"mtime":1618919393740,"results":"56","hashOfConfig":"37"},{"size":3741,"mtime":1618978810224,"results":"57","hashOfConfig":"37"},{"size":218,"mtime":1617883876183,"results":"58","hashOfConfig":"37"},{"size":328,"mtime":1617895778723,"results":"59","hashOfConfig":"37"},{"size":979,"mtime":1617625254432,"results":"60","hashOfConfig":"37"},{"size":1288,"mtime":1618978810240,"results":"61","hashOfConfig":"37"},{"size":1311,"mtime":1618978810240,"results":"62","hashOfConfig":"37"},{"size":2100,"mtime":1618919393740,"results":"63","hashOfConfig":"37"},{"size":356,"mtime":1617895778995,"results":"64","hashOfConfig":"37"},{"size":421,"mtime":1617883876619,"results":"65","hashOfConfig":"37"},{"size":370,"mtime":1617883876619,"results":"66","hashOfConfig":"37"},{"size":626,"mtime":1616146148083,"results":"67","hashOfConfig":"37"},{"size":384,"mtime":1617896617126,"results":"68","hashOfConfig":"37"},{"size":256,"mtime":1617625254432,"results":"69","hashOfConfig":"70"},{"size":2934,"mtime":1618919393740,"results":"71","hashOfConfig":"37"},{"size":9014,"mtime":1618978810240,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"160mso9",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"608doq",{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/index.js",[],["155","156"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reportWebVitals.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/App.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/utils/setAuthToken.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/store.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/MessageDisplay.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/StaffRoute.js",["157","158"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StaffRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"staff\" ? ( // check for staff usertype\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nStaffRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(StaffRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/private-route/TenantRoute.js",["159","160"],"import React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n          <Component {...props} />\n        ) : (\n          <div>\n            <h1>Sorry, you are not authorised to view this page</h1>\n          </div>\n        )\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(TenantRoute);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/authActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/TenantList.js",["161","162","163"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Input, Button, Space, Table, Modal, Layout } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport { connect } from \"react-redux\";\nimport {\n  getTenants,\n  setSelectedTenant,\n  delTenant,\n} from \"../actions/tenantActions\";\nimport { deleteAudit } from \"../actions/auditActions\";\nimport PropTypes from \"prop-types\";\nimport { FormProvider } from \"antd/lib/form/context\";\nimport { deleteTenant } from \"../actions/authActions\";\n\nclass Directory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tenantData: [],\n      searchText: \"\",\n      searchedColumn: \"\",\n      tenantInfo: {},\n      visible: false,\n      userId: null,\n      rerender: \"\",\n    };\n\n    // this.delTenant = this.delTenant.bind(this);\n    this.deleteAudit = deleteAudit.bind(this);\n    // this.deleteTenant = this.deleteTenant.bind(this);\n    // this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTenantFunction();\n  }\n\n  getTenantFunction() {\n    console.log(\"data\");\n    this.props.getTenants((data) => {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].type === \"Non-FB\") {\n          data[i].total_score = (data[i].total_score / 34) * 100;\n        } else {\n          data[i].total_score = (data[i].total_score / 96) * 100;\n        }\n      }\n      this.setState({ tenantData: data });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : \"#a35709\" }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  onCreateClick = (record) => {\n    //pass to redux\n    this.props.setSelectedTenant({ record });\n    //if FB, go to FB | if non-FB go to non-FB\n    if (record.type === \"F&B\") {\n      this.props.history.push(\"/checklistFB\");\n    } else this.props.history.push(\"/checklistNonFB\");\n    // this.props.tenantInfo = record;\n    console.log({ record });\n  };\n\n  // confirmDelete = () => {\n  //   // this.setState({\n  //   //   visible: true,\n  //   // });\n  //   this.onDeleteClick();\n  // }\n\n  onDeleteClick = async () => {\n    this.hideModal();\n    var tenantList = this.state.tenantData;\n    // function sleep(ms) {\n    //   return new Promise((resolve) => setTimeout(resolve, ms));\n    // }\n    for (var i = 0; i < tenantList.length; i++) {\n      if (tenantList[i].userId == this.state.userId) {\n        console.log(this.state.userId);\n        delTenant({ _id: tenantList[i]._id });\n        deleteTenant({ _id: this.state.userId });\n        this.deleteAudit({ tenantID: tenantList[i]._id }).then(() => {\n          // this.setState(this.state); // this should rerender the component but it does not\n          this.getTenantFunction(); // this gets the new data from database and sets the state of tenantData to the updated one\n        });\n        console.log(\"sent for deletion\");\n        break;\n      }\n    }\n    // console.log(\"sleeping\");\n    // await sleep(1000);\n    // console.log(\"slept\");\n    // this.forceUpdate();\n  };\n\n  showModal = (record) => {\n    this.setState({\n      visible: true,\n      userId: record.userId,\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: \"Addr.\",\n        dataIndex: \"address\",\n        key: \"address\",\n        fixed: \"left\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Inst.\",\n        dataIndex: \"institution\",\n        key: \"institution\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"institution\"),\n      },\n      // {\n      //   title: \"Auditor\",\n      //   dataIndex: \"auditor\",\n      //   key: \"auditor\",\n      //   width: \"150\",\n      //   ...this.getColumnSearchProps(\"auditor\"),\n      // },\n      {\n        title: \"ID\",\n        dataIndex: \"userId\",\n        key: \"userId\",\n        width: \"150\",\n        ...this.getColumnSearchProps(\"id\"),\n      },\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        key: \"type\",\n        ...this.getColumnSearchProps(\"type\"),\n      },\n      {\n        title: \"Action\",\n        dataIndex: \"\",\n        key: \"x\",\n        fixed: \"right\",\n        width: \"20%\",\n        render: (record) => (\n          <div>\n            <Button\n              className=\"action-buttons-normalwidth\"\n              size=\"small\"\n              onClick={() => this.onCreateClick(record)}\n            >\n              Create\n              <br />\n              Audit\n            </Button>\n            <Button\n              className=\"action-buttons-normalwidth\"\n              size=\"small\"\n              onClick={() => this.showModal(record)}\n            >\n              Delete\n              <br />\n              Tenant\n            </Button>\n\n            <Modal\n              title=\"Confirm Delete\"\n              visible={this.state.visible}\n              onOk={this.onDeleteClick.bind(this)}\n              onCancel={this.hideModal}\n              okText=\"Confirm\"\n              cancelText=\"Cancel\"\n            >\n              <p>Are you sure you want to delete this Tenant?</p>\n            </Modal>\n          </div>\n        ),\n      },\n    ];\n    return (\n      <Layout>\n        <div className=\"table\">\n          <h3>Tenants</h3>\n          <Table\n            columns={columns}\n            dataSource={this.state.tenantData}\n            scroll={{ x: 400, y: \"68vh\" }}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nDirectory.propTypes = {\n  getTenants: PropTypes.func.isRequired,\n  setSelectedTenant: PropTypes.func.isRequired,\n  tenantData: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  tenantData: state.tenantData,\n});\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\n  Directory\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/AuditList.js",["164","165","166","167","168","169"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/Checklist.js",["170","171"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ChecklistNonFB.js",["172","173"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAudit.js",["174","175","176","177","178","179","180","181","182","183","184"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/ViewAuditTenant.js",["185","186","187","188","189"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/Navbar.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/CreateTenant.js",["190","191","192","193","194","195","196","197"],"import React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant, sendEmail } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, Layout } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\nimport tenantData from \"../../data/tenantTypes.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TODO: this should be taken from db\nconst institutions = institutionsData;\nconst tenantTypes = tenantData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  // TODO send email to tenant with login details\n  onFinish = (values) => {\n    const newUser = {\n      name: values.name,\n      type: values.type,\n      email: values.email,\n      address: values.address,\n      institution: values.institution,\n      auditor: values.auditor,\n    };\n    console.log(\"newUser: \", newUser);\n    this.props.registerTenant(newUser, this.props.history);\n    // this.props.sendEmail(newUser);\n    window.scrollTo(0, 0); // Scroll to top\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { errors } = this.state;\n    const layout = {\n      labelCol: { span: 3 },\n    };\n    return (\n      <Layout>\n        <h3\n          style={{\n            background: \"#f3ab1b\",\n            \"border-radius\": \"5px\",\n            margin: \"5vw\",\n          }}\n        >\n          Create a Tenant Account\n        </h3>\n        <Content>\n          <Form\n            {...layout}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n            onFinish={this.onFinish}\n            initialValues={{\n              auditor: user.name,\n            }}\n          >\n            {/* No name, replace with id for annonymity */}\n\n            <Form.Item\n              label=\"Tenant Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Name!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Tenant Name\"\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"name\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Type\"\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select F&B or non-F&B!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                placeholder=\"F&B or Non-F&B\"\n                options={tenantTypes}\n                onChange={this.onDropdownChange}\n                id=\"type\"\n                type=\"type\"\n                value={this.state.type}\n                error={errors.type}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  type: \"email\",\n                  message: \"Please input a valid Email!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Address\"\n              name=\"address\"\n              rules={[\n                {\n                  required: true,\n                  type: \"string\",\n                  message: \"Please input a valid Address!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Address\"\n                onChange={this.onChange}\n                value={this.state.address}\n                error={errors.address}\n                id=\"address\"\n                type=\"address\"\n                // className={classnames(\"\", {\n                //   invalid: errors.email,\n                // })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Institution\"\n              name=\"institution\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select an institution!\",\n                },\n              ]}\n            >\n              <Select\n                showSearch\n                className=\"dropdown\"\n                icon={MailOutlined}\n                placeholder=\"Institution\"\n                options={institutions}\n                onChange={this.onDropdownChange}\n                id=\"institution\"\n                type=\"institution\"\n                value={this.state.institution}\n                error={errors.institution}\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Auditor\"\n              name=\"auditor\"\n              rules={[\n                { required: true, message: \"Please input name of Auditor!\" },\n              ]}\n            >\n              <Input\n                placeholder=\"Auditor\"\n                onChange={this.onChange}\n                value={this.state.auditor}\n                error={errors.auditor}\n                id=\"auditor\"\n                type=\"auditor\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Create Tenant\n              </Button>\n            </Form.Item>\n          </Form>\n        </Content>\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerTenant, sendEmail })(\n  withRouter(CreateTenant)\n);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Login.js",["198","199","200"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Recaptcha from \"react-recaptcha\";\n\nimport { Form, Input, Button, Checkbox, Layout } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n  // might be deprecated\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onCheckboxChange = (e) => {\n    this.setState({ usertypebool: !this.state.usertypebool });\n  };\n\n  onFinish = (values) => {\n    // console.log(values);\n    // Process checkbox boolean to usertype string\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      var { usertype } = \"\";\n      if (this.state.usertypebool) {\n        usertype = \"staff\";\n      } else {\n        usertype = \"tenant\";\n      }\n      const userData = {\n        email: values.email,\n        password: values.password,\n        usertype: usertype,\n      };\n      console.log(values);\n\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    }\n  };\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>Enter your email and password to log in </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                type=\"email\"\n                className={classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                className={classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect,\n                })}\n              />\n            </Form.Item>\n\n            <Form.Item name=\"usertypebool\">\n              <Checkbox\n                onChange={this.onCheckboxChange}\n                value={this.state.usertypebool}\n                error={errors.usertypebool}\n                id=\"usertypebool\"\n              >\n                Singhealth Staff Member?\n              </Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"login-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Log in\n              </Button>\n              <p></p>\n              <p>\n                Forgot password?\n                <Link to=\"/resetPassword\"> Click here </Link>to reset it\n              </p>\n              New staff member? <Link to=\"/Register\">Register here!</Link>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/TenantHome.js",["201","202","203","204","205"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Table, Input, Space, Button, Layout } from \"antd\";\nimport { display } from \"../../actions/auditActions.js\";\nimport { setSelectedTenant, getTenant } from \"../../actions/tenantActions\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store.js\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nconst { Column, ColumnGroup } = Table;\n\n// const Audit = (props) => (\n//   <tr>\n//     <td>{props.audit.username}</td>\n//     <td>{props.audit.image}</td>\n//     <td>{props.audit.notes}</td>\n//     <td>{props.audit.tags}</td>\n//     <td>{props.audit.date.substring(0, 10)}</td>\n//     <td>\n//       <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n//       <a\n//         href=\"#\"\n//         onClick={() => {\n//           props.deleteAudit(props.audit._id);\n//         }}\n//       >\n//         delete\n//       </a>\n//     </td>\n//   </tr>\n// );\n\nclass TenantHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.state = {\n      audits: [],\n      actualAudits: [],\n      tenantId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted: \", store.getState().auth.user.id);\n    getTenant((data) => {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].userId === store.getState().auth.user.id) {\n          this.setState(\n            { tenantId: data[i]._id },\n            console.log(data[i]._id),\n            this.props.display((displayData) => {\n              // console.log(\"displayData is: \", displayData);\n              var tempList = [];\n              for (var i = 0; i < displayData.length; i++) {\n                // console.log(displayData[i].tenantID);\n                if (displayData[i].tenantID === this.state.tenantId) {\n                  tempList.push(displayData[i]);\n                }\n              }\n              // console.log(tempList);\n              this.setState({ actualAudits: tempList });\n            })\n          );\n        }\n      }\n    });\n\n    // this.auditList();\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : \"#a35709\" }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n          .toString()\n          .toLowerCase()\n          .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  deleteAudit(id) {\n    axios\n      .delete(\"http://localhost:5000/audits/\" + id)\n      .then((res) => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter((el) => el._id !== id),\n    });\n  }\n\n  onViewClick = (record) => {\n    //pass to redux\n    this.props.setSelectedTenant({ record });\n    //if FB, go to FB | if non-FB go to non-FB\n    this.props.history.push(\"/viewaudittenant\");\n    // this.props.tenantInfo = record;\n    console.log({ record });\n  };\n\n  // auditList() {\n  //   for (var i = 0; i < this.state.audits.length; i++) {\n  //     console.log(this.state.audits[i]);\n  //     if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\n  //       this.state.actualAudits.push(this.state.audits[i]);\n  //     }\n  //   }\n  //   return this.state.actualAudits.map((currentaudit) => {\n  //     return (\n  //       <Audit\n  //         audit={currentaudit}\n  //         deleteAudit={this.deleteAudit}\n  //         key={currentaudit._id}\n  //       />\n  //     );\n  //   });\n  // }\n\n  render() {\n    const columns = [\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        width: \"40%\",\n        sorter: (a, b) => {\n          if (a.date > b.date) return 1;\n          else return -1;\n        },\n        defaultSortOrder: \"descend\",\n        ...this.getColumnSearchProps(\"date\"),\n        render: (text) =>\n          moment(text, \"YYYY-MM-DDTHH:mm:ss.SSS\").format(\"DD/MM/YYYY\"),\n      },\n      {\n        title: \"Score\",\n        dataIndex: \"total_score\",\n        key: \"total_score\",\n        width: \"25%\",\n        sorter: (a, b) => {\n          if (a.score > b.score) return 1;\n          else return -1;\n        },\n      },\n      {\n        title: \"Action\",\n        dataIndex: \"\",\n        key: \"x\",\n        width: \"35%\",\n        render: (record) => (\n          <div>\n            <Button\n              className=\"action-buttons\"\n              size=\"small\"\n              onClick={() => this.onViewClick(record)}\n            >\n              View\n              <br />\n              Audit\n            </Button>\n          </div>\n        ),\n      },\n    ];\n    return (\n      <Layout className=\"table\">\n        <h3>Your Audits</h3>\n        <Table\n          columns={columns}\n          dataSource={this.state.actualAudits}\n          rowClassName={(record) => (record.total_score < 95 ? \"red\" : \"green\")}\n          scroll={{ y: \"72vh\" }}\n        />\n      </Layout>\n    );\n  }\n}\n\nTenantHome.propTypes = {\n  setSelectedTenant: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  userID: state.auth.user.id,\n});\nexport default connect(mapStateToProps, {\n  setSelectedTenant,\n  getTenant,\n  display,\n})(TenantHome);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/Register.js",["206","207","208","209"],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { getStaffKey } from \"../../actions/authActions\";\nimport { Form, Input, Button, Layout, Select } from \"antd\";\nimport {\n  MailOutlined,\n  UserOutlined,\n  LockOutlined,\n  SketchOutlined,\n} from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nconst institutions = institutionsData;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      institution: \"\",\n      staffkey: \"\",\n      dbstaffkey: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onDropdownChange = (e, { value }) => this.setState({ value });\n\n  onFinish = (values) => {\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      window.recaptcha = null;\n      getStaffKey((data) => {\n        // console.log(\"data is: \", data);\n        this.setState({ ...this.state, dbstaffkey: data });\n        // console.log(\"dbstaffkey is: \", this.state.dbstaffkey);\n        if (this.state.staffkey === this.state.dbstaffkey) {\n          const newUser = {\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            password2: values.password2,\n            institution: values.institution,\n            usertype: \"staff\",\n          };\n          this.props.registerUser(newUser, this.props.history);\n        } else {\n          alert(\"Staff Key is incorrect!\");\n        }\n      });\n    }\n  };\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Layout>\n        <h2>Staff Registration Form</h2>\n        <Form\n          name=\"normal_login\"\n          className=\"login-register-form\"\n          title=\"Register\"\n          onFinish={this.onFinish}\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[{ required: true, message: \"Please input your Name!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Name\"\n              onChange={this.onChange}\n              value={this.state.name}\n              error={errors.name}\n              id=\"name\"\n              type=\"text\"\n              // className={classnames(\"\", {\n              // invalid: errors.name,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please input a valid Email!\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              // className={classnames(\"\", {\n              //   invalid: errors.email,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              //   invalid: errors.password,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password2\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              { required: true, message: \"Passwords do not match!\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\n                    new Error(\n                      \"The two passwords that you entered do not match!\"\n                    )\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Confirm Password\"\n              onChange={this.onChange}\n              value={this.state.password2}\n              error={errors.password2}\n              id=\"password2\"\n              type=\"password\"\n              // className={classnames(\"\", {\n              // invalid: errors.password2,\n              // })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"staffkey\"\n            rules={[\n              { required: true, message: \"Please input your staff key!\" },\n            ]}\n          >\n            <Input\n              prefix={<SketchOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Staff Key\"\n              onChange={this.onChange}\n              value={this.state.staffkey}\n              error={errors.staffkey}\n              id=\"staffkey\"\n              type=\"staffkey\"\n              className={classnames(\"\", {\n                invalid: errors.key || errors.keyincorrect,\n              })}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"institution\"\n            rules={[\n              {\n                required: true,\n                message: \"Please select an institution!\",\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              className=\"dropdown\"\n              icon={MailOutlined}\n              placeholder=\"Institution\"\n              options={institutions}\n              onChange={this.onDropdownChange}\n              id=\"institution\"\n              type=\"institution\"\n              value={this.state.institution}\n              error={errors.institution}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-register-form-button\"\n            >\n              Register\n            </Button>\n            Or <Link to=\"/Login\">Login here</Link>\n          </Form.Item>\n        </Form>\n        <Recaptcha\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n          render=\"explicit\"\n          onloadCallback={console.log(\"onloadCallback\")}\n          verifyCallback={this.verifyCallback}\n        />\n      </Layout>\n    );\n  }\n}\n// Props stands for properties and is being used for passing data from one component to another\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n// Get state from Redux and map it to props\nconst mapStateToProps = (state) => ({\n  auth: state.auth, // allows us to call this.props.auth\n  errors: state.errors, // allows us to call this.props.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/auditActions.js",["210"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/errorActions.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/types.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenu.js",["211","212","213"],"import React, { Component } from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nclass RightMenu extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"mail\" id=\"rightmenu1\">\n          <Link to=\"/login\">Login</Link>\n        </Menu.Item>\n        <Menu.Item key=\"app\" id=\"rightmenu2\">\n          <Link to=\"/register\">Register</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nRightMenu.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/RightMenuLoggedIn.js",["214","215","216","217","218"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/actions/tenantActions.js",["219"],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/layout/LeftMenu.js",["220","221","222","223","224","225","226"],"import React, { Component } from \"react\";\nimport { Menu, Icon, Dropdown, Button } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst CreateAuditMenu = (\n  <Menu>\n    <Menu.Item key=\"fbchecklist\">\n      <NavLink to=\"/checklist\">FB Audit List</NavLink>\n    </Menu.Item>\n\n    <Menu.Item key=\"nonfbchecklist\">\n      <NavLink to=\"/ChecklistNonFB\">Non-FB Audit List</NavLink>\n    </Menu.Item>\n  </Menu>\n);\n\nclass StaffLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"audits\">\n          <NavLink to=\"/auditlist\">Audits</NavLink>\n        </Menu.Item>\n\n        {/* <SubMenu key=\"sub1\" title={<span>Create Audit</span>}>\n          <Menu.Item key=\"fbchecklist\">\n            <NavLink to=\"/checklistFB\">FB Audit List</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"nonfbchecklist\">\n            <NavLink to=\"/checklistNonFB\">Non-FB Audit List</NavLink>\n          </Menu.Item>\n        </SubMenu> */}\n\n        <Menu.Item key=\"createtenant\">\n          <NavLink to=\"/createtenant\">Create Tenant</NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"directory\">\n          <NavLink to=\"/directory\">Directory</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass TenantLeftMenu extends Component {\n  render() {\n    return (\n      <Menu mode=\"vertical\">\n        <Menu.Item key=\"tenanthome\">\n          <NavLink to=\"/tenant\">Tenant Home</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nclass LeftMenu extends Component {\n  render() {\n    if (this.props.auth.user.usertype === \"staff\") {\n      return <StaffLeftMenu />;\n    } else if (this.props.auth.user.usertype === \"tenant\") {\n      return <TenantLeftMenu />;\n    } else return <div></div>;\n  }\n}\n\nLeftMenu.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(LeftMenu);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/index.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/messageReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/errorReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/authReducer.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/reducers/tenantReducer.js",["227"],"/* eslint-disable import/no-anonymous-default-export */\nimport { SET_SELECTED_TENANT } from \"../actions/types\";\n\nconst initialState = {};\n\n// anonymous function\nexport default function (state = initialState, action) {\n  console.log(\"in reducer\");\n  switch (action.type) {\n    case SET_SELECTED_TENANT:\n      return { ...state }, action.payload;\n    default:\n      return state;\n  }\n}\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/tenant/EditAudit.js",[],"/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/auth/ResetPassword.js",["228","229","230","231","232","233","234"],"import React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport store from \"../../store\";\n\nimport Recaptcha from \"react-recaptcha\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport { GET_MESSAGE } from \"../../actions/types\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\nconst recaptchaOn = false;\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true,\n      });\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({ isVerified: true });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onFinish = (values) => {\n    console.log(values);\n    if (!this.state.isVerified) {\n      alert(\"Please verify you are human\");\n    } else {\n      const userData = {\n        email: values.email,\n      };\n      this.props.resetPassword(userData);\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h2>Welcome to SingHealth Audit</h2>\n        <p>\n          A new password will be sent to your email address if your email\n          address is valid\n        </p>\n        <Content>\n          <Form\n            onFinish={this.onFinish}\n            name=\"normal_login\"\n            className=\"login-register-form\"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\n            >\n              <Input\n                placeholder=\"Email\"\n                onChange={this.onChange}\n                value={this.state.email}\n                id=\"email\"\n                type=\"email\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                id=\"reset-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-register-form-button\"\n              >\n                Reset Password\n              </Button>\n            </Form.Item>\n          </Form>\n          <Recaptcha\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render=\"explicit\"\n            onloadCallback={console.log(\"onloadCallback\")}\n            verifyCallback={this.verifyCallback}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({});\nexport default connect(mapStateToProps, { resetPassword })(ResetPassword);\n","/home/lanvoine/Documents/ESC/singhealth2.0/client/src/components/account/AccountInfo.js",["235","236","237","238","239"],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":8,"nodeType":"246","messageId":"247","endLine":2,"endColumn":13},{"ruleId":"244","severity":1,"message":"250","line":15,"column":10,"nodeType":"246","messageId":"247","endLine":15,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":177,"column":32,"nodeType":"253","messageId":"254","endLine":177,"endColumn":34},{"ruleId":"244","severity":1,"message":"255","line":1,"column":28,"nodeType":"246","messageId":"247","endLine":1,"endColumn":36},{"ruleId":"244","severity":1,"message":"256","line":4,"column":55,"nodeType":"246","messageId":"247","endLine":4,"endColumn":58},{"ruleId":"244","severity":1,"message":"257","line":4,"column":60,"nodeType":"246","messageId":"247","endLine":4,"endColumn":63},{"ruleId":"244","severity":1,"message":"258","line":15,"column":9,"nodeType":"246","messageId":"247","endLine":15,"endColumn":15},{"ruleId":"244","severity":1,"message":"259","line":15,"column":17,"nodeType":"246","messageId":"247","endLine":15,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":26,"column":7,"nodeType":"262","endLine":31,"endColumn":8},{"ruleId":"244","severity":1,"message":"263","line":4,"column":3,"nodeType":"246","messageId":"247","endLine":4,"endColumn":10},{"ruleId":"244","severity":1,"message":"264","line":17,"column":18,"nodeType":"246","messageId":"247","endLine":17,"endColumn":25},{"ruleId":"244","severity":1,"message":"263","line":4,"column":3,"nodeType":"246","messageId":"247","endLine":4,"endColumn":10},{"ruleId":"244","severity":1,"message":"265","line":20,"column":10,"nodeType":"246","messageId":"247","endLine":20,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"266","line":25,"column":9,"nodeType":"246","messageId":"247","endLine":25,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":99,"column":11,"nodeType":"246","messageId":"269","endLine":99,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":141,"column":44,"nodeType":"253","messageId":"254","endLine":141,"endColumn":46},{"ruleId":"251","severity":1,"message":"270","line":162,"column":14,"nodeType":"253","messageId":"254","endLine":162,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":166,"column":30,"nodeType":"253","messageId":"254","endLine":166,"endColumn":32},{"ruleId":"260","severity":1,"message":"271","line":170,"column":27,"nodeType":"262","endLine":170,"endColumn":30},{"ruleId":"260","severity":1,"message":"271","line":179,"column":27,"nodeType":"262","endLine":179,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":187,"column":30,"nodeType":"253","messageId":"254","endLine":187,"endColumn":32},{"ruleId":"260","severity":1,"message":"271","line":191,"column":27,"nodeType":"262","endLine":191,"endColumn":30},{"ruleId":"260","severity":1,"message":"271","line":204,"column":27,"nodeType":"262","endLine":204,"endColumn":30},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"266","line":24,"column":9,"nodeType":"246","messageId":"247","endLine":24,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":97,"column":11,"nodeType":"246","messageId":"269","endLine":97,"endColumn":20},{"ruleId":"260","severity":1,"message":"271","line":158,"column":23,"nodeType":"262","endLine":158,"endColumn":26},{"ruleId":"260","severity":1,"message":"271","line":170,"column":23,"nodeType":"262","endLine":170,"endColumn":26},{"ruleId":"244","severity":1,"message":"272","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"273","line":6,"column":31,"nodeType":"246","messageId":"247","endLine":6,"endColumn":38},{"ruleId":"244","severity":1,"message":"274","line":7,"column":24,"nodeType":"246","messageId":"247","endLine":7,"endColumn":36},{"ruleId":"244","severity":1,"message":"275","line":7,"column":38,"nodeType":"246","messageId":"247","endLine":7,"endColumn":50},{"ruleId":"244","severity":1,"message":"276","line":11,"column":9,"nodeType":"246","messageId":"247","endLine":11,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":11,"column":17,"nodeType":"246","messageId":"247","endLine":11,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":11,"column":25,"nodeType":"246","messageId":"247","endLine":11,"endColumn":30},{"ruleId":"244","severity":1,"message":"276","line":12,"column":9,"nodeType":"246","messageId":"247","endLine":12,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":12,"column":17,"nodeType":"246","messageId":"247","endLine":12,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":12,"column":25,"nodeType":"246","messageId":"247","endLine":12,"endColumn":30},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"279","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":17},{"ruleId":"244","severity":1,"message":"280","line":4,"column":19,"nodeType":"246","messageId":"247","endLine":4,"endColumn":29},{"ruleId":"244","severity":1,"message":"258","line":14,"column":9,"nodeType":"246","messageId":"247","endLine":14,"endColumn":15},{"ruleId":"244","severity":1,"message":"259","line":14,"column":17,"nodeType":"246","messageId":"247","endLine":14,"endColumn":28},{"ruleId":"244","severity":1,"message":"276","line":18,"column":9,"nodeType":"246","messageId":"247","endLine":18,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":18,"column":17,"nodeType":"246","messageId":"247","endLine":18,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":18,"column":25,"nodeType":"246","messageId":"247","endLine":18,"endColumn":30},{"ruleId":"244","severity":1,"message":"281","line":18,"column":32,"nodeType":"246","messageId":"247","endLine":18,"endColumn":39},{"ruleId":"244","severity":1,"message":"282","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":33},{"ruleId":"244","severity":1,"message":"283","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":20},{"ruleId":"244","severity":1,"message":"284","line":8,"column":7,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"285","line":9,"column":7,"nodeType":"246","messageId":"247","endLine":9,"endColumn":20},{"ruleId":"244","severity":1,"message":"283","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":20},{"ruleId":"244","severity":1,"message":"286","line":2,"column":22,"nodeType":"246","messageId":"247","endLine":2,"endColumn":28},{"ruleId":"244","severity":1,"message":"287","line":6,"column":19,"nodeType":"246","messageId":"247","endLine":6,"endColumn":29},{"ruleId":"244","severity":1,"message":"284","line":9,"column":7,"nodeType":"246","messageId":"247","endLine":9,"endColumn":14},{"ruleId":"244","severity":1,"message":"285","line":10,"column":7,"nodeType":"246","messageId":"247","endLine":10,"endColumn":20},{"ruleId":"244","severity":1,"message":"265","line":2,"column":43,"nodeType":"246","messageId":"247","endLine":2,"endColumn":54},{"ruleId":"244","severity":1,"message":"283","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":20},{"ruleId":"244","severity":1,"message":"288","line":2,"column":22,"nodeType":"246","messageId":"247","endLine":2,"endColumn":30},{"ruleId":"244","severity":1,"message":"286","line":2,"column":32,"nodeType":"246","messageId":"247","endLine":2,"endColumn":38},{"ruleId":"244","severity":1,"message":"289","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":16},{"ruleId":"244","severity":1,"message":"284","line":8,"column":7,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"285","line":9,"column":7,"nodeType":"246","messageId":"247","endLine":9,"endColumn":20},{"ruleId":"244","severity":1,"message":"290","line":11,"column":7,"nodeType":"246","messageId":"247","endLine":11,"endColumn":22},{"ruleId":"291","severity":1,"message":"292","line":11,"column":26,"nodeType":"293","messageId":"294","endLine":11,"endColumn":27},{"ruleId":"244","severity":1,"message":"248","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":14},{"ruleId":"244","severity":1,"message":"287","line":4,"column":16,"nodeType":"246","messageId":"247","endLine":4,"endColumn":26},{"ruleId":"244","severity":1,"message":"295","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":13},{"ruleId":"244","severity":1,"message":"265","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":21},{"ruleId":"244","severity":1,"message":"276","line":12,"column":9,"nodeType":"246","messageId":"247","endLine":12,"endColumn":15},{"ruleId":"244","severity":1,"message":"277","line":12,"column":17,"nodeType":"246","messageId":"247","endLine":12,"endColumn":23},{"ruleId":"244","severity":1,"message":"278","line":12,"column":25,"nodeType":"246","messageId":"247","endLine":12,"endColumn":30},{"ruleId":"244","severity":1,"message":"296","line":11,"column":9,"nodeType":"246","messageId":"247","endLine":11,"endColumn":14},{"ruleId":"244","severity":1,"message":"297","line":13,"column":7,"nodeType":"246","messageId":"247","endLine":13,"endColumn":20},{"ruleId":"244","severity":1,"message":"298","line":18,"column":7,"nodeType":"246","messageId":"247","endLine":18,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":80,"column":28,"nodeType":"253","messageId":"254","endLine":80,"endColumn":30},{"ruleId":"244","severity":1,"message":"299","line":100,"column":13,"nodeType":"246","messageId":"247","endLine":100,"endColumn":19},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is defined but never used.","'FormProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextArea' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","'display' is defined but never used.","'GET_MESSAGE' is defined but never used.","'Text' is assigned a value but never used.","no-redeclare","'tempArray' is already defined.","redeclared","Expected '!==' and instead saw '!='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Content' is assigned a value but never used.","'getAllByPlaceholderText' is defined but never used.","'Icon' is defined but never used.","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'Dropdown' is defined but never used.","'MenuItem' is defined but never used.","'CreateAuditMenu' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'store' is defined but never used.","'Title' is assigned a value but never used.","'gridStyleLeft' is assigned a value but never used.","'gridStyleRight' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]