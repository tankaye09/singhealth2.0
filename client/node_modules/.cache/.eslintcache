[{"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\store.js":"4","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Directory.js":"6","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\authActions.js":"7","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js":"8","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Audit-list.js":"9","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Login.js":"10","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js":"11","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Checklist.js":"12","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Register.js":"13","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js":"14","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\StoreData.ts":"15","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\AuditData.ts":"16","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\types.js":"17","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js":"18","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js":"19","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js":"20","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\index.js":"21","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\errorReducer.js":"22","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\authReducer.js":"23","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\questionsData.js":"24","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js":"25"},{"size":517,"mtime":1616231467184,"results":"26","hashOfConfig":"27"},{"size":2410,"mtime":1616681258873,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1616231467186,"results":"29","hashOfConfig":"27"},{"size":418,"mtime":1616231467188,"results":"30","hashOfConfig":"27"},{"size":346,"mtime":1616231467189,"results":"31","hashOfConfig":"27"},{"size":2198,"mtime":1616231492709,"results":"32","hashOfConfig":"27"},{"size":1784,"mtime":1616338390988,"results":"33","hashOfConfig":"27"},{"size":1889,"mtime":1616231492713,"results":"34","hashOfConfig":"27"},{"size":2759,"mtime":1616231492706,"results":"35","hashOfConfig":"27"},{"size":3481,"mtime":1616338390990,"results":"36","hashOfConfig":"27"},{"size":1556,"mtime":1616231467180,"results":"37","hashOfConfig":"27"},{"size":12103,"mtime":1616672618013,"results":"38","hashOfConfig":"27"},{"size":5320,"mtime":1616231467179,"results":"39","hashOfConfig":"27"},{"size":615,"mtime":1616231467183,"results":"40","hashOfConfig":"27"},{"size":1168,"mtime":1616231492719,"results":"41","hashOfConfig":"27"},{"size":1353,"mtime":1616231492718,"results":"42","hashOfConfig":"27"},{"size":139,"mtime":1616231467177,"results":"43","hashOfConfig":"27"},{"size":1268,"mtime":1616681279475,"results":"44","hashOfConfig":"27"},{"size":960,"mtime":1616338390991,"results":"45","hashOfConfig":"27"},{"size":1096,"mtime":1616231492715,"results":"46","hashOfConfig":"27"},{"size":214,"mtime":1616231467186,"results":"47","hashOfConfig":"27"},{"size":317,"mtime":1616231467186,"results":"48","hashOfConfig":"27"},{"size":655,"mtime":1616231467185,"results":"49","hashOfConfig":"27"},{"size":9685,"mtime":1616672563251,"results":"50","hashOfConfig":"27"},{"size":4469,"mtime":1616672190981,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"17v4gd9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\index.js",[],["111","112"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\store.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Directory.js",["113","114","115"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\nimport { getData } from \"../data/StoreData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nexport default class Directory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //code runs before the page loads\r\n    axios.get(\"http://localhost:5000/users/\").then((response) => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          users: response.data.map((user) => user.username),\r\n          username: response.data[0].username, //set username as the first username in the database\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"table\">\r\n        <Table\r\n          // columns={columns}\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">CGH</div>}\r\n          size=\"middle\"\r\n          pagination={{ position: \"bottomLeft\" }}\r\n        >\r\n          <Column\r\n            title=\"Store Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(record.image, \"_blank\")}>\r\n                  {text}\r\n                </td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Location\" dataIndex=\"location\" key=\"location\" />\r\n          <Column title=\"Terms\" dataIndex=\"terms\" key=\"terms\" />\r\n          <Column title=\"Expiry\" dataIndex=\"expiry\" key=\"expiry\" />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Store Name',\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         render: (text, record) => <a>\r\n//             <td onClick={() => window.open(text, \"_blank\")} /> {text} </a>,\r\n//     },\r\n//     {\r\n//         title: 'Location',\r\n//         dataIndex: 'location',\r\n//         key: 'location',\r\n//     },\r\n//     {\r\n//         title: 'Terms',\r\n//         dataIndex: 'terms',\r\n//         key: 'terms',\r\n//     },\r\n//     {\r\n//         title: 'Expiry',\r\n//         dataIndex: 'expiry',\r\n//         key: 'expiry',\r\n//     },\r\n// ];\r\n\r\nconst data = getData(\"\");\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\authActions.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Audit-list.js",["116","117","118","119"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { getAudits } from \"../data/AuditData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default class AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/audits\")\r\n      .then((response) => {\r\n        this.setState({ audits: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n        >\r\n          <Column title=\"Username\" dataIndex=\"username\" key=\"username\" />\r\n          <Column\r\n            title=\"Image\"\r\n            dataIndex=\"image\"\r\n            key=\"image\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(text, \"_blank\")}>View Image</td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Notes\" dataIndex=\"notes\" key=\"notes\" />\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Tags\"\r\n            dataIndex=\"tags\"\r\n            key=\"tags\"\r\n            render={(tags) => (\r\n              <>\r\n                {tags.map((tag) => (\r\n                  <Tag color=\"blue\" key={tag}>\r\n                    {tag}\r\n                  </Tag>\r\n                ))}\r\n              </>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst data = getAudits(\"Pamela\");\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Login.js",["120"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/auditlist\");\r\n    }\r\n  }\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/auditlist\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Form\r\n        onFinish={this.onFinish}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.email || errors.emailnotfound,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={classnames(\"\", {\r\n              invalid: errors.password || errors.passwordincorrect,\r\n            })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n          Or if you are a new staff member,{\" \"}\r\n          <Link to=\"/Register\">register here!</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\Checklist.js",["121"],"import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { FB } from '../data/questionsData'\r\nconst { Panel } = Collapse;\r\n\r\n\r\nvar prof_cat_size = FB.Professionalism.length + FB.Staff_Hygiene.length;\r\nvar housekeeping_cat_size = FB.General_Environment_Cleanliness.length + FB.Hand_Hygiene_Facilities.length;\r\nvar food_cat_size = FB.Storage_Food_Refrigerator_Warmer.length + FB.Storage_Preparation_Food.length\r\nvar health_cat_size = FB.Food.length + FB.Beverage.length;\r\nvar safety_cat_size = FB.General_Safety.length + FB.Electrical_Safety.length + FB.Fire_Emergency_Safety.length;\r\n\r\n\r\n\r\nclass Checklist extends Component {\r\n  componentWillMount = () => {\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  toggleCheckbox = label => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = formSubmitEvent => {\r\n    formSubmitEvent.preventDefault();\r\n\r\n    for (const checkbox of this.selectedCheckboxes) {\r\n      console.log(checkbox, 'is selected.');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  state = {\r\n    checked: false,\r\n    profcount: 0,\r\n    gc_count: 0,\r\n    food_count: 0,\r\n    health_count: 0,\r\n    safety_count: 0,\r\n  }\r\n\r\n  //for professionalism and staff hygiene cat\r\n  createprofCheckbox = label => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={e => this.handleprofCheckCount(e)}\r\n    />\r\n  )\r\n  handleprofCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState(state => state.profcount++)\r\n    } else {\r\n      this.setState(state => state.profcount--)\r\n    }\r\n  }\r\n  //for housekeeping and general cleanliness cat\r\n  creategcCheckbox = label => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={e => this.handlegcCheckCount(e)}\r\n    />\r\n  )\r\n  handlegcCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState(state => state.gc_count++)\r\n    } else {\r\n      this.setState(state => state.gc_count--)\r\n    }\r\n  }\r\n  //for food hygiene cat\r\n  createfoodCheckbox = label => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={e => this.handlefoodCheckCount(e)}\r\n    />\r\n  )\r\n  handlefoodCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState(state => state.food_count++)\r\n    } else {\r\n      this.setState(state => state.food_count--)\r\n    }\r\n  }\r\n\r\n  //for healthier choice cat \r\n  createhealthCheckbox = label => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={e => this.handlehealthCheckCount(e)}\r\n    />\r\n  )\r\n  handlehealthCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState(state => state.health_count++)\r\n    } else {\r\n      this.setState(state => state.health_count--)\r\n    }\r\n  }\r\n\r\n  //for workplace safety cat\r\n  createsafetyCheckbox = label => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={e => this.handlesafetyCheckCount(e)}\r\n    />\r\n  )\r\n  handlesafetyCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState(state => state.safety_count++)\r\n    } else {\r\n      this.setState(state => state.safety_count--)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"start\">F&B Checklist</h1>\r\n\r\n        <Divider />\r\n\r\n        <div>\r\n          <Collapse accordion defaultActiveKey=\"1\" >\r\n\r\n            <Panel header=\"Professionalism & Staff Hygiene (10%)\" key=\"1\" className=\"bg-orange text-white\">\r\n\r\n              <Collapse accordion defaultActiveKey=\"1\" >\r\n                <Panel header=\"Professionalism\" key=\"1\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Professionalism} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        {this.createprofCheckbox()}\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Staff Hygiene\" key=\"2\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Staff_Hygiene} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createprofCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n              </Collapse>\r\n              <div class=\"pt-10 font-bold text-right\">Score: {Math.round(10 / 2 / (prof_cat_size) * (this.state.profcount))}/10</div>\r\n              \r\n            </Panel>\r\n\r\n            <Panel header=\"Housekeeping & General Cleanliness (20%)\" key=\"2\" className=\"bg-orange text-white\">\r\n              <Collapse accordion defaultActiveKey=\"1\" >\r\n                <Panel header=\"General Environment Cleanness\" key=\"1\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.General_Environment_Cleanliness} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.creategcCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Hand Hygiene Facilities\" key=\"2\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Hand_Hygiene_Facilities} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.creategcCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n              </Collapse>\r\n              <div class=\"pt-10 font-bold text-right\">Score: {Math.round(20 / 2 / (housekeeping_cat_size) * (this.state.gc_count))}/20</div>\r\n            </Panel>\r\n\r\n\r\n\r\n            <Panel header=\"Food Hygiene (35%)\" key=\"3\" className=\"bg-orange text-white\">\r\n              <Collapse accordion defaultActiveKey=\"1\">\r\n                <Panel header=\"Storage & Preparation of Food\" key=\"1\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Storage_Preparation_Food} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createfoodCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Storage of Food in Refrigerator/ Warmer\" key=\"2\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Storage_Food_Refrigerator_Warmer} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createfoodCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n              </Collapse>\r\n              <div class=\"pt-10 font-bold text-right\">Score: {Math.round(35 / 2 / (food_cat_size) * (this.state.food_count))}/35</div>\r\n            </Panel>\r\n\r\n\r\n\r\n\r\n\r\n            <Panel header=\"Healthier Choice in line with HPB’s Healthy Eating’s Initiative (15%)\" key=\"4\" className=\"bg-orange text-white\">\r\n              <Collapse accordion defaultActiveKey=\"1\" >\r\n                <Panel header=\"Food\" key=\"1\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Food} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        {this.createhealthCheckbox()}\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Beverage\" key=\"2\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Beverage} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createhealthCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n              </Collapse>\r\n              <div class=\"pt-10 font-bold text-right\">Score: {Math.round(15 / 2 / (health_cat_size) * (this.state.health_count))}/15</div>\r\n            </Panel>\r\n\r\n\r\n\r\n\r\n\r\n            <Panel header=\"Workplace Safety & Health (20%)\" key=\"5\" className=\"bg-orange text-white\">\r\n              <Collapse accordion defaultActiveKey=\"1\" >\r\n                <Panel header=\"General Safety\" key=\"1\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.General_Safety} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        {this.createsafetyCheckbox()}\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Fire & Emergency Safety\" key=\"2\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Fire_Emergency_Safety} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createsafetyCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n                <Panel header=\"Electrical Safety\" key=\"3\" className=\"bg-orange text-white\">\r\n                  <List\r\n                    dataSource={FB.Electrical_Safety} // Questions\r\n                    renderItem={(item) => (\r\n                      <List.Item>\r\n                        <div className=\"create-audit-row\">{item}</div>\r\n                        <div>{this.createsafetyCheckbox()}</div>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </Panel>\r\n              </Collapse>\r\n              <div class=\"pt-10 font-bold text-right\">Score: {Math.round(20 / 2 / (safety_cat_size) * (this.state.safety_count))}/20</div>\r\n            </Panel>\r\n          </Collapse>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"pt-10 font-bold text-centre\">Total Score:{Math.round(20 / 2 / (safety_cat_size) * (this.state.safety_count)\r\n        +15 / 2 / (health_cat_size) * (this.state.health_count)\r\n        +35 / 2 / (food_cat_size) * (this.state.food_count)\r\n        +20 / 2 / (housekeeping_cat_size) * (this.state.gc_count)\r\n        +10 / 2 / (prof_cat_size) * (this.state.profcount))} </div>\r\n        <Button className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          SUBMIT\r\n    </Button>\r\n      </>\r\n    )\r\n\r\n\r\n  }\r\n}\r\nexport default Checklist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\auth\\Register.js",["122","123"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      password2: values.password2,\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[{ required: true, message: \"Please input your Name!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            error={errors.name}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            // className={classnames(\"\", {\r\n            // invalid: errors.name,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n            error={errors.password}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.password,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password2\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            { required: true, message: \"Passwords do not match!\" },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"The two passwords that you entered do not match!\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={this.onChange}\r\n            value={this.state.password2}\r\n            error={errors.password2}\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            // className={classnames(\"\", {\r\n            // invalid: errors.password2,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n          Or <Link to=\"/Login\">Login here</Link>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\private-route\\PrivateRoute.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\StoreData.ts",[],["124","125"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\AuditData.ts",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\actions\\types.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\LeftMenu.js",["126","127","128","129","130","131"],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenu.js",["132","133","134","135","136","137"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"\">Login</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Register</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\layout\\RightMenuLoggedIn.js",["138","139","140","141","142","143","144"],"import React, { Component } from \"react\";\r\nimport { Menu, Icon, Button } from \"antd\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nclass RightMenu extends Component {\r\n  onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"mail\">\r\n          <Button onClick={this.onLogoutClick} type=\"text\">\r\n            Logout\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"\">Name of user</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nRightMenu.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(RightMenu);\r\n","C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\index.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\errorReducer.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\data\\questionsData.js",[],"C:\\Users\\ASUS\\Desktop\\singhealth2.0\\client\\src\\components\\ChecklistNonFB.js",["145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":17,"nodeType":"153","messageId":"154","endLine":6,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":9,"column":3,"nodeType":"157","messageId":"158","endLine":11,"endColumn":4},{"ruleId":"159","severity":1,"message":"160","line":40,"column":15,"nodeType":"161","endLine":40,"endColumn":18},{"ruleId":"151","severity":1,"message":"162","line":4,"column":22,"nodeType":"153","messageId":"154","endLine":4,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":7,"column":17,"nodeType":"153","messageId":"154","endLine":7,"endColumn":28},{"ruleId":"159","severity":1,"message":"163","line":18,"column":7,"nodeType":"161","endLine":23,"endColumn":8},{"ruleId":"159","severity":1,"message":"160","line":83,"column":15,"nodeType":"161","endLine":83,"endColumn":18},{"ruleId":"151","severity":1,"message":"164","line":8,"column":31,"nodeType":"153","messageId":"154","endLine":8,"endColumn":39},{"ruleId":"151","severity":1,"message":"165","line":2,"column":35,"nodeType":"153","messageId":"154","endLine":2,"endColumn":40},{"ruleId":"151","severity":1,"message":"166","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":18},{"ruleId":"151","severity":1,"message":"164","line":7,"column":31,"nodeType":"153","messageId":"154","endLine":7,"endColumn":39},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"167","line":2,"column":16,"nodeType":"153","messageId":"154","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"168","line":2,"column":22,"nodeType":"153","messageId":"154","endLine":2,"endColumn":30},{"ruleId":"151","severity":1,"message":"169","line":2,"column":32,"nodeType":"153","messageId":"154","endLine":2,"endColumn":38},{"ruleId":"151","severity":1,"message":"170","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"171","line":7,"column":7,"nodeType":"153","messageId":"154","endLine":7,"endColumn":20},{"ruleId":"151","severity":1,"message":"172","line":9,"column":7,"nodeType":"153","messageId":"154","endLine":9,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":2,"column":16,"nodeType":"153","messageId":"154","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"173","line":7,"column":7,"nodeType":"153","messageId":"154","endLine":7,"endColumn":14},{"ruleId":"151","severity":1,"message":"171","line":8,"column":7,"nodeType":"153","messageId":"154","endLine":8,"endColumn":20},{"ruleId":"151","severity":1,"message":"174","line":15,"column":13,"nodeType":"153","messageId":"154","endLine":15,"endColumn":17},{"ruleId":"159","severity":1,"message":"163","line":20,"column":11,"nodeType":"161","endLine":20,"endColumn":22},{"ruleId":"159","severity":1,"message":"163","line":23,"column":11,"nodeType":"161","endLine":23,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":2,"column":16,"nodeType":"153","messageId":"154","endLine":2,"endColumn":20},{"ruleId":"151","severity":1,"message":"175","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"176","line":6,"column":16,"nodeType":"153","messageId":"154","endLine":6,"endColumn":26},{"ruleId":"151","severity":1,"message":"173","line":8,"column":7,"nodeType":"153","messageId":"154","endLine":8,"endColumn":14},{"ruleId":"151","severity":1,"message":"171","line":9,"column":7,"nodeType":"153","messageId":"154","endLine":9,"endColumn":20},{"ruleId":"151","severity":1,"message":"174","line":16,"column":13,"nodeType":"153","messageId":"154","endLine":16,"endColumn":17},{"ruleId":"159","severity":1,"message":"163","line":26,"column":11,"nodeType":"161","endLine":26,"endColumn":22},{"ruleId":"151","severity":1,"message":"177","line":2,"column":20,"nodeType":"153","messageId":"154","endLine":2,"endColumn":27},{"ruleId":"151","severity":1,"message":"165","line":2,"column":35,"nodeType":"153","messageId":"154","endLine":2,"endColumn":40},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'ColumnGroup' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Space' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Checkbox' is defined but never used.","'Input' is defined but never used.","'classnames' is defined but never used.","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'MenuItem' is defined but never used.","'MenuItemGroup' is assigned a value but never used.","'CreateAuditMenu' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]