{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout;\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to SingHealth Audit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A new password will be sent to your email address if your email address is valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: this.onFinish,\n        name: \"normal_login\",\n        className: \"login-register-form\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please input your Email!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            onChange: this.onChange,\n            value: this.state.email,\n            id: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"login-button\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            className: \"login-register-form-button\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n        sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n        render: \"explicit\",\n        onloadCallback: console.log(\"onloadCallback\"),\n        verifyCallback: this.verifyCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nResetPassword.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ResetPassword);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/ResetPassword.js"],"names":["React","Component","Layout","Form","Input","Button","connect","Link","withRouter","Recaptcha","Header","Footer","Sider","Content","ResetPassword","constructor","state","email","render","onFinish","required","message","onChange","console","log","verifyCallback","propTypes","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,IAAqCX,MAA3C;;AAEA,MAAMY,aAAN,SAA4Bb,SAA5B,CAAsC;AACpCc,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKC,QADjB;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAAA,gCAKE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAE,CAAC;AAAEC,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAFT;AAAA,iCAIE,QAAC,KAAD;AACE,YAAA,WAAW,EAAC,OADd;AAEE,YAAA,QAAQ,EAAE,KAAKC,QAFjB;AAGE,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAHpB;AAIE,YAAA,EAAE,EAAC,OAJL;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBALF,eAkBE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,cADL;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,QAAQ,EAAC,QAHX;AAIE,YAAA,SAAS,EAAC,4BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAmCE,QAAC,SAAD;AACE,QAAA,OAAO,EAAC,0CADV;AAEE,QAAA,MAAM,EAAC,UAFT;AAGE,QAAA,cAAc,EAAEM,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAHlB;AAIE,QAAA,cAAc,EAAE,KAAKC;AAJvB;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4CD;;AApDmC;;AAuDtCX,aAAa,CAACY,SAAd,GAA0B,EAA1B;;AACA,MAAMC,eAAe,GAAIX,KAAD,KAAY,EAAZ,CAAxB;;AACA,eAAeV,OAAO,CAACqB,eAAD,EAAkB,EAAlB,CAAP,CAA6Bb,aAA7B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Layout, Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Welcome to SingHealth Audit</h2>\r\n        <p>\r\n          A new password will be sent to your email address if your email\r\n          address is valid\r\n        </p>\r\n        <Form\r\n          onFinish={this.onFinish}\r\n          name=\"normal_login\"\r\n          className=\"login-register-form\"\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n          >\r\n            <Input\r\n              placeholder=\"Email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              id=\"login-button\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-register-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Recaptcha\r\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n          render=\"explicit\"\r\n          onloadCallback={console.log(\"onloadCallback\")}\r\n          verifyCallback={this.verifyCallback}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {})(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}