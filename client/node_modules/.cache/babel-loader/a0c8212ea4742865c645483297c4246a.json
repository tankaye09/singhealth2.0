{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ChecklistNonFB.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, DatePicker, Form, List, Input, Checkbox, Button, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { submit } from \"../actions/auditActions.js\";\nimport store from \"../store\";\nimport dateformat from \"dateformat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fileUpload = require(\"fuctbase64\");\n\nconst nonFb = importJSON.non_fb;\nconst {\n  Panel\n} = Collapse;\nconst {\n  TextArea\n} = Input;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst mapDispatchToProps = {\n  submit\n}; // TODO: Take score from json file => Update the score, replace the json file\n\nclass ChecklistNonFB extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tenantInfo: {},\n      type: \"Non-FB\",\n      checked: false,\n      catCounts: [0, 0, 0],\n      // counts[0]: for Professionalism & Staff Hygiene (20%),\n      //counts[1]: for Housekeeping & General Cleanliness (40%)\n      //counts[2]: for Workplace Safety & Health (40%)\n      total_score: 0,\n      image: null,\n      tempImageBase64: [],\n      tempImageCaption: null,\n      date: null,\n      comment: null,\n      location: \"\",\n      visibleForm: false,\n      visibleConfirm: false,\n      visibleAudit: false\n    };\n\n    this.submitAudit = () => {\n      console.log(this.state);\n      console.log(typeof this.state.date);\n      console.log(typeof this.props.tenantInfo.record._id);\n      this.props.submit({\n        type: \"Non-FB\",\n        catCounts: this.state.catCounts,\n        total_score: this.state.catCounts[0] + this.state.catCounts[1] + this.state.catCounts[2],\n        image: this.state.image,\n        date: this.state.date,\n        comment: this.state.comment,\n        location: this.state.location,\n        tenantID: this.props.tenantInfo.record._id\n      });\n      this.showAuditModal();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onChangeComment = comment => {\n      this.setState({\n        comment: [{\n          content: comment.nativeEvent.explicitOriginalTarget.value,\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n        }]\n      });\n    };\n\n    this.onChangeCaption = caption => {\n      console.log(this.state);\n      this.setState({\n        tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value\n      });\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      this.setState({\n        date: dateformat(date._d.toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n      });\n    };\n\n    this.showFormModal = () => {\n      this.setState({\n        visibleForm: true\n      });\n    };\n\n    this.showAuditModal = () => {\n      this.setState({\n        visibleAudit: true\n      });\n    };\n\n    this.showConfirmModal = () => {\n      this.setState({\n        visibleConfirm: true\n      });\n    };\n\n    this.handleFormOk = e => {\n      console.log(e);\n      this.showConfirmModal();\n    };\n\n    this.handleAuditOk = e => {\n      console.log(e);\n      this.setState({\n        visibleAudit: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visibleForm: false\n      });\n    };\n\n    this.handleUploadOk = e => {\n      console.log(e);\n      console.log(this.state);\n      this.setState({\n        image: [{\n          base64: this.state.tempImageBase64[0].base64,\n          date: this.state.tempImageBase64[0].date,\n          caption: this.state.tempImageCaption\n        }],\n        visibleConfirm: false\n      });\n    };\n\n    this.createCheckbox = (label, catIndex) => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label // handleCheckboxChange={this.toggleCheckbox}\n      ,\n      onChange: e => this.handleCount(e, catIndex)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this);\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files[0]);\n      fileUpload(event).then(data => {\n        console.log(\"base64: \", data.base64);\n        this.setState({\n          // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\n          tempImageBase64: [{\n            base64: data.base64,\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n          }]\n        });\n      });\n    };\n\n    this.handleCount = (e, catIndex) => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      switch (catIndex) {\n        case 0:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[0]++);\n          } else {\n            this.setState(state => state.catCounts[0]--);\n          }\n\n          break;\n\n        case 1:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[1]++);\n          } else {\n            this.setState(state => state.catCounts[1]--);\n          }\n\n          break;\n\n        case 2:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[2]++);\n          } else {\n            this.setState(state => state.catCounts[2]--);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Non-F&B Audit for Tenant at Address:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: this.props.tenantInfo.record._id !== null ? this.props.tenantInfo.record._id : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form // {...layout}\n      , {\n        name: \"Non-FB Checklist\",\n        className: \"login-register-form\",\n        onFinish: this.onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"date\",\n          rules: [{\n            required: true,\n            message: \"Date of Incident\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"auditDate\",\n            placeholder: \"Date\",\n            onChange: this.onChangeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Comment\",\n          rules: [{\n            required: true,\n            message: \"Description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Notes or Comments\",\n            onChange: this.onChange,\n            value: this.state.comment,\n            id: \"comment\",\n            type: \"comment\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        className: \"submit-button\",\n        onClick: this.showFormModal,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panels\",\n        children: [nonFb.map((cat, catIndex) => {\n          // var catScore = cat.score;\n          return (\n            /*#__PURE__*/\n            // Category\n            _jsxDEV(Collapse, {\n              defaultActiveKey: [\"1\"],\n              children: /*#__PURE__*/_jsxDEV(Panel, {\n                header: /*#__PURE__*/_jsxDEV(\"div\", {\n                  catIndex: catIndex,\n                  children: cat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 27\n                }, this),\n                className: \"bg-orange\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  catIndex: catIndex,\n                  children: cat.subcategories.map((subCat, subCatIndex) => {\n                    return (\n                      /*#__PURE__*/\n                      // SubCategory\n                      _jsxDEV(Collapse, {\n                        defaultActiveKey: [\"1\"],\n                        children: /*#__PURE__*/_jsxDEV(Panel, {\n                          header: /*#__PURE__*/_jsxDEV(\"div\", {\n                            subCatIndex: subCatIndex,\n                            children: subCat.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 287,\n                            columnNumber: 31\n                          }, this),\n                          className: \"bg-orange\",\n                          children: /*#__PURE__*/_jsxDEV(List, {\n                            dataSource: subCat.questions // Questions\n                            ,\n                            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"checklist-item\",\n                                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"create-audit-row\",\n                                  children: item\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 297,\n                                  columnNumber: 37\n                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"checklist-checkbox\",\n                                  children: this.createCheckbox(item, catIndex)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 300,\n                                  columnNumber: 37\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 296,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 295,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 292,\n                            columnNumber: 29\n                          }, this)\n                        }, subCatIndex + 1, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this)\n                    );\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, catIndex + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          );\n        }), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Total Score:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total_score\",\n            children: (this.state.catCounts[0] + this.state.catCounts[1] + this.state.catCounts[2]) / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Upload Photo\",\n          visible: this.state.visibleForm,\n          onOk: this.handleFormOk,\n          onCancel: this.handleCancel,\n          okButtonProps: {\n            disabled: false\n          },\n          cancelButtonProps: {\n            disabled: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            name: \"photo_upload\",\n            className: \"photo-upload\",\n            onFinish: this.onFinish,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"file\",\n                onChange: this.fileSelectedHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"caption\",\n              rules: [{\n                required: true,\n                message: \"Description\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Caption\",\n                onChange: this.onChangeCaption,\n                value: this.state.caption,\n                id: \"caption\",\n                type: \"caption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Upload Confirm\",\n            destroyOnClose: true,\n            visible: this.state.visibleConfirm,\n            onOk: this.handleUploadOk,\n            okButtonProps: {\n              disabled: false\n            },\n            cancelButtonProps: {\n              disabled: true,\n              visible: false\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Photo Added!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.submitAudit(),\n          className: \"submit-button\",\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nChecklistNonFB.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChecklistNonFB);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ChecklistNonFB.js"],"names":["Collapse","Divider","DatePicker","Form","List","Input","Checkbox","Button","Modal","React","Component","PropTypes","connect","importJSON","submit","store","dateformat","fileUpload","require","nonFb","non_fb","Panel","TextArea","layout","labelCol","span","wrapperCol","mapDispatchToProps","ChecklistNonFB","state","tenantInfo","type","checked","catCounts","total_score","image","tempImageBase64","tempImageCaption","date","comment","location","visibleForm","visibleConfirm","visibleAudit","submitAudit","console","log","props","record","_id","tenantID","showAuditModal","onChange","e","setState","target","id","value","onChangeComment","content","nativeEvent","explicitOriginalTarget","Date","toString","onChangeCaption","caption","onChangeDate","dateString","_d","showFormModal","showConfirmModal","handleFormOk","handleAuditOk","handleCancel","handleUploadOk","base64","createCheckbox","label","catIndex","handleCount","fileSelectedHandler","event","files","then","data","render","onFinish","required","message","map","cat","name","subcategories","subCat","subCatIndex","questions","item","disabled","visible","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  DatePicker,\r\n  Form,\r\n  List,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport { submit } from \"../actions/auditActions.js\";\r\nimport store from \"../store\";\r\nimport dateformat from \"dateformat\";\r\nconst fileUpload = require(\"fuctbase64\");\r\nconst nonFb = importJSON.non_fb;\r\nconst { Panel } = Collapse;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  submit,\r\n};\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass ChecklistNonFB extends Component {\r\n  // not exactly dynamic\r\n  state = {\r\n    tenantInfo: {},\r\n    type: \"Non-FB\",\r\n    checked: false,\r\n    catCounts: [0, 0, 0],\r\n    // counts[0]: for Professionalism & Staff Hygiene (20%),\r\n    //counts[1]: for Housekeeping & General Cleanliness (40%)\r\n    //counts[2]: for Workplace Safety & Health (40%)\r\n    total_score: 0,\r\n    image: null,\r\n    tempImageBase64: [],\r\n    tempImageCaption: null,\r\n    date: null,\r\n    comment: null,\r\n    location: \"\",\r\n    visibleForm: false,\r\n    visibleConfirm: false,\r\n    visibleAudit: false,\r\n  };\r\n\r\n  submitAudit = () => {\r\n    console.log(this.state);\r\n    console.log(typeof this.state.date);\r\n    console.log(typeof this.props.tenantInfo.record._id);\r\n    this.props.submit({\r\n      type: \"Non-FB\",\r\n      catCounts: this.state.catCounts,\r\n      total_score:\r\n        this.state.catCounts[0] +\r\n        this.state.catCounts[1] +\r\n        this.state.catCounts[2],\r\n      image: this.state.image,\r\n      date: this.state.date,\r\n      comment: this.state.comment,\r\n      location: this.state.location,\r\n      tenantID: this.props.tenantInfo.record._id,\r\n    });\r\n    this.showAuditModal();\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onChangeComment = (comment) => {\r\n    this.setState({\r\n      comment: [\r\n        {\r\n          content: comment.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  onChangeCaption = (caption) => {\r\n    console.log(this.state);\r\n    this.setState({\r\n      tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value,\r\n    });\r\n  };\r\n\r\n  onChangeDate = (date, dateString) => {\r\n    this.setState({\r\n      date: dateformat(date._d.toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n    });\r\n  };\r\n\r\n  showFormModal = () => {\r\n    this.setState({\r\n      visibleForm: true,\r\n    });\r\n  };\r\n\r\n  showAuditModal = () => {\r\n    this.setState({\r\n      visibleAudit: true,\r\n    });\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({\r\n      visibleConfirm: true,\r\n    });\r\n  };\r\n\r\n  handleFormOk = (e) => {\r\n    console.log(e);\r\n    this.showConfirmModal();\r\n  };\r\n\r\n  handleAuditOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleAudit: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleForm: false,\r\n    });\r\n  };\r\n\r\n  handleUploadOk = (e) => {\r\n    console.log(e);\r\n    console.log(this.state);\r\n    this.setState({\r\n      image: [\r\n        {\r\n          base64: this.state.tempImageBase64[0].base64,\r\n          date: this.state.tempImageBase64[0].date,\r\n          caption: this.state.tempImageCaption,\r\n        },\r\n      ],\r\n      visibleConfirm: false,\r\n    });\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n\r\n  fileSelectedHandler = (event) => {\r\n    console.log(event.target.files[0]);\r\n    fileUpload(event).then((data) => {\r\n      console.log(\"base64: \", data.base64);\r\n      this.setState({\r\n        // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\r\n        tempImageBase64: [\r\n          {\r\n            base64: data.base64,\r\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          },\r\n        ],\r\n      });\r\n    });\r\n  };\r\n\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <h3>\r\n          Non-F&B Audit for Tenant at Address:{\" \"}\r\n          <b>\r\n            {this.props.tenantInfo.record._id !== null\r\n              ? this.props.tenantInfo.record._id\r\n              : \"\"}\r\n          </b>\r\n        </h3>\r\n\r\n        <Form\r\n          // {...layout}\r\n          name=\"Non-FB Checklist\"\r\n          className=\"login-register-form\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"date\"\r\n            rules={[{ required: true, message: \"Date of Incident\" }]}\r\n          >\r\n            <DatePicker\r\n              className=\"auditDate\"\r\n              placeholder=\"Date\"\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"Comment\"\r\n            rules={[{ required: true, message: \"Description\" }]}\r\n          >\r\n            <TextArea\r\n              placeholder=\"Notes or Comments\"\r\n              onChange={this.onChange}\r\n              value={this.state.comment}\r\n              id=\"comment\"\r\n              type=\"comment\"\r\n              rows={4}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Button\r\n          type=\"text\"\r\n          className=\"submit-button\"\r\n          onClick={this.showFormModal}\r\n        >\r\n          Upload Photo\r\n        </Button>\r\n\r\n        <div className=\"panels\">\r\n          {nonFb.map((cat, catIndex) => {\r\n            // var catScore = cat.score;\r\n            return (\r\n              // Category\r\n              <Collapse defaultActiveKey={[\"1\"]}>\r\n                <Panel\r\n                  header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                  key={catIndex + 1}\r\n                  className=\"bg-orange\"\r\n                >\r\n                  <div catIndex={catIndex}>\r\n                    {cat.subcategories.map((subCat, subCatIndex) => {\r\n                      return (\r\n                        // SubCategory\r\n                        <Collapse defaultActiveKey={[\"1\"]}>\r\n                          <Panel\r\n                            header={\r\n                              <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                            }\r\n                            key={subCatIndex + 1}\r\n                            className=\"bg-orange\"\r\n                          >\r\n                            <List\r\n                              dataSource={subCat.questions} // Questions\r\n                              renderItem={(item) => (\r\n                                <List.Item>\r\n                                  <div className=\"checklist-item\">\r\n                                    <div className=\"create-audit-row\">\r\n                                      {item}\r\n                                    </div>\r\n                                    <div className=\"checklist-checkbox\">\r\n                                      {this.createCheckbox(item, catIndex)}\r\n                                    </div>\r\n                                  </div>\r\n                                </List.Item>\r\n                              )}\r\n                            />\r\n                          </Panel>\r\n                        </Collapse>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n                </Panel>\r\n              </Collapse>\r\n            );\r\n          })}\r\n          <b>\r\n            Total Score:{\" \"}\r\n            <span className=\"total_score\">\r\n              {(this.state.catCounts[0] +\r\n                this.state.catCounts[1] +\r\n                this.state.catCounts[2]) /\r\n                2}\r\n            </span>\r\n          </b>\r\n\r\n          <Modal\r\n            title=\"Upload Photo\"\r\n            visible={this.state.visibleForm}\r\n            onOk={this.handleFormOk}\r\n            onCancel={this.handleCancel}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: false }}\r\n          >\r\n            <Form\r\n              name=\"photo_upload\"\r\n              className=\"photo-upload\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item>\r\n                <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n              </Form.Item>\r\n              {/* <Form.Item\r\n              name=\"date\"\r\n              rules={[{ required: true, message: \"Date of Incident\" }]}\r\n            >\r\n              <DatePicker\r\n                placeholder=\"Date\"\r\n                onChange={this.onChangeDate}\r\n              />\r\n            </Form.Item> */}\r\n\r\n              <Form.Item\r\n                name=\"caption\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Description\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Caption\"\r\n                  onChange={this.onChangeCaption}\r\n                  value={this.state.caption}\r\n                  id=\"caption\"\r\n                  type=\"caption\"\r\n                />\r\n              </Form.Item>\r\n\r\n              {/* <Form.Item\r\n              name=\"location\"\r\n              rules={[{ required: true, message: \"Location of Incident\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Location\"\r\n                onChange={this.onChange}\r\n                value={this.state.location}\r\n                id=\"location\"\r\n                type=\"location\"\r\n              />\r\n            </Form.Item> */}\r\n            </Form>\r\n            {/* <Form>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"upload-photo-button\"\r\n              onClick={() => { this.upload(this.state); }}\r\n            >\r\n              Upload\r\n                    </Button>\r\n          </Form> */}\r\n            <Modal\r\n              title=\"Upload Confirm\"\r\n              destroyOnClose={true}\r\n              visible={this.state.visibleConfirm}\r\n              onOk={this.handleUploadOk}\r\n              okButtonProps={{ disabled: false }}\r\n              cancelButtonProps={{ disabled: true, visible: false }}\r\n            >\r\n              <p>Photo Added!</p>\r\n            </Modal>\r\n          </Modal>\r\n          <Button\r\n            onClick={() => this.submitAudit()}\r\n            className=\"submit-button\"\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n          {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          TEST\r\n        </Button> */}\r\n          {/* <Modal\r\n            title=\"\"\r\n            visible={this.state.visibleAudit}\r\n            onOk={this.handleAuditOk}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: true, visible: false }}\r\n          >\r\n            <p>Audit Uploaded!</p>\r\n          </Modal> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nChecklistNonFB.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChecklistNonFB);\r\n"]},"metadata":{},"sourceType":"module"}