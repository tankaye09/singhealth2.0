{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ErrorDisplay.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorDisplay extends Component {\n  constructor() {\n    super();\n\n    this.handleClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      errors: {},\n      visible: true\n    };\n  } // might be deprecated\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(errors).length !== 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: Object.values(errors),\n        type: \"warning\",\n        className: \"error-message\",\n        closable: true,\n        afterClose: handleClose,\n        banner: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) // Error shown when redux state errors is not empty\n      : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nErrorDisplay.propTypes = {\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(ErrorDisplay);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ErrorDisplay.js"],"names":["React","Component","PropTypes","connect","Alert","ErrorDisplay","constructor","handleClose","setState","visible","state","errors","componentWillReceiveProps","nextProps","render","Object","keys","length","values","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,QAAsB,MAAtB;;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,WAjBc,GAiBA,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KArBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXF,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID,GAPkC,CASnC;;;AACAG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACF,MAAd,EAAsB;AACpB,WAAKH,QAAL,CAAc;AACZG,QAAAA,MAAM,EAAEE,SAAS,CAACF;AADN,OAAd;AAGD;AACF;;AAQDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACE;AAAA,gBACGK,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,gBACC,QAAC,KAAD;AACE,QAAA,OAAO,EAAEF,MAAM,CAACG,MAAP,CAAcP,MAAd,CADX;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,UAAU,EAAEJ,WALd;AAME,QAAA,MAAM;AANR;AAAA;AAAA;AAAA;AAAA,cADD,CAQI;AARJ,QAUC;AAXJ;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AA1CkC;;AA4CrCF,YAAY,CAACc,SAAb,GAAyB;AACvBR,EAAAA,MAAM,EAAET,SAAS,CAACkB,MAAV,CAAiBC;AADF,CAAzB;;AAGA,MAAMC,eAAe,GAAIZ,KAAD,KAAY;AAClCC,EAAAA,MAAM,EAAED,KAAK,CAACC;AADoB,CAAZ,CAAxB;;AAGA,eAAeR,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Alert } from \"antd\";\r\n\r\nclass ErrorDisplay extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      visible: true,\r\n    };\r\n  }\r\n\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        {Object.keys(errors).length !== 0 ? (\r\n          <Alert\r\n            message={Object.values(errors)}\r\n            type=\"warning\"\r\n            className=\"error-message\"\r\n            closable\r\n            afterClose={handleClose}\r\n            banner\r\n          /> // Error shown when redux state errors is not empty\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nErrorDisplay.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps)(ErrorDisplay);\r\n"]},"metadata":{},"sourceType":"module"}