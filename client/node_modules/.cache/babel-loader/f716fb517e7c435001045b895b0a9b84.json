{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox, Button, Modal, Form, DatePicker } from \"antd\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { submit, display } from \"../actions/auditActions.js\";\nimport dateformat from \"dateformat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fileUpload = require(\"fuctbase64\");\n\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n}; // TODO: Take score from json file => Update the score, replace the json file\n\nclass Checklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitAudit = () => {\n      console.log(this.state);\n      submit({\n        type: \"FB\",\n        catCounts: this.state.catCounts,\n        total_score: this.state.catCounts[0] + this.state.catCounts[1] + this.state.catCounts[2] + this.state.catCounts[3] + this.state.catCounts[4],\n        image: this.state.image,\n        date: this.state.date,\n        comment: this.state.comment,\n        location: this.state.location,\n        tenantID: this.props.tenantInfo.record._id\n      });\n      this.showAuditModal();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onChangeComment = comment => {\n      this.setState({\n        comment: [{\n          content: comment.nativeEvent.explicitOriginalTarget.value,\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n        }]\n      });\n    };\n\n    this.onChangeCaption = caption => {\n      console.log(this.state);\n      this.setState({\n        tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value\n      });\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      this.setState({\n        date: dateformat(date._d.toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n      });\n    };\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files[0]);\n      fileUpload(event).then(data => {\n        console.log(\"base64: \", data.base64);\n        this.setState({\n          // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\n          tempImageBase64: [{\n            base64: data.base64,\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n          }]\n        });\n      });\n    };\n\n    this.showAuditModal = () => {\n      this.setState({\n        visibleAudit: true\n      });\n    };\n\n    this.showFormModal = () => {\n      this.setState({\n        visibleForm: true\n      });\n    };\n\n    this.showConfirmModal = () => {\n      this.setState({\n        visibleConfirm: true\n      });\n    };\n\n    this.handleAuditOk = e => {\n      console.log(e);\n      this.setState({\n        visibleAudit: false\n      });\n    };\n\n    this.handleFormOk = e => {\n      console.log(e);\n      this.showConfirmModal();\n    };\n\n    this.handleUploadOk = e => {\n      console.log(e);\n      console.log(this.state);\n      this.setState({\n        image: [{\n          base64: this.state.tempImageBase64[0].base64,\n          date: this.state.tempImageBase64[0].date,\n          caption: this.state.tempImageCaption\n        }],\n        visibleConfirm: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visibleForm: false\n      });\n    };\n\n    this.createCheckbox = (label, catIndex) => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label // handleCheckboxChange={this.toggleCheckbox}\n      ,\n      onChange: e => this.handleCount(e, catIndex)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }, this);\n\n    this.handlegcCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.gc_count++);\n      } else {\n        this.setState(state => state.gc_count--);\n      }\n    };\n\n    this.createfoodCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label,\n      handleCheckboxChange: this.toggleCheckbox,\n      onChange: e => this.handlefoodCheckCount(e)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }, this);\n\n    this.handlefoodCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.food_count++);\n      } else {\n        this.setState(state => state.food_count--);\n      }\n    };\n\n    this.state = {\n      checked: false,\n      catCounts: [0, 0, 0, 0, 0],\n      // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\n      image: null,\n      tempImageBase64: [],\n      tempImageCaption: null,\n      date: null,\n      comment: null,\n      location: \"\",\n      visibleForm: false,\n      visibleConfirm: false,\n      visibleAudit: false,\n      tenantInfo: {},\n      type: \"FB\"\n    };\n\n    this.handleCount = (e, catIndex) => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      switch (catIndex) {\n        case 0:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[0]++);\n          } else {\n            this.setState(state => state.catCounts[0]--);\n          }\n\n          break;\n\n        case 1:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[1]++);\n          } else {\n            this.setState(state => state.catCounts[1]--);\n          }\n\n          break;\n\n        case 2:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[2]++);\n          } else {\n            this.setState(state => state.catCounts[2]--);\n          }\n\n          break;\n\n        case 3:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[3]++);\n          } else {\n            this.setState(state => state.catCounts[3]--);\n          }\n\n          break;\n\n        case 4:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[4]++);\n          } else {\n            this.setState(state => state.catCounts[4]--);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"F&B Audit for Tenant at Address:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: this.props.tenantInfo !== null ? this.props.tenantInfo.record._id !== null ? this.props.tenantInfo.record._id : \"\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), Fb.map((cat, catIndex) => {\n        // var catScore = cat.score;\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 25\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 29\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"checklist-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"create-audit-row\",\n                                children: item\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 318,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"checklist-checkbox\",\n                                children: this.createCheckbox(item, catIndex)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 319,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 317,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 316,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 27\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.showFormModal,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Upload Photo\",\n        visible: this.state.visibleForm,\n        onOk: this.handleFormOk,\n        onCancel: this.handleCancel,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: false\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"date\",\n          label: \"Date\",\n          rules: [{\n            required: true,\n            message: \"Date of Incident\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"auditDate\",\n            placeholder: \"Date\",\n            onChange: this.onChangeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Comment\",\n          label: \"Comment\",\n          rules: [{\n            required: false,\n            message: \"Description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: \"commentBox\" //placeholder=\"Comment\"\n            ,\n            onChange: this.onChangeComment,\n            value: this.state.comment,\n            id: \"comment\",\n            type: \"comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Total Score: \",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total_score\",\n            children: (this.state.catCounts[0] + this.state.catCounts[1] + this.state.catCounts[2] + this.state.catCounts[3] + this.state.catCounts[4]) / 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panels\",\n        children: [Fb.map((cat, catIndex) => {\n          // var catScore = cat.score;\n          return (\n            /*#__PURE__*/\n            // Category\n            _jsxDEV(Collapse, {\n              defaultActiveKey: [\"1\"],\n              children: /*#__PURE__*/_jsxDEV(Panel, {\n                header: /*#__PURE__*/_jsxDEV(\"div\", {\n                  catIndex: catIndex,\n                  children: cat.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 27\n                }, this),\n                className: \"bg-orange\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  catIndex: catIndex,\n                  children: cat.subcategories.map((subCat, subCatIndex) => {\n                    return (\n                      /*#__PURE__*/\n                      // SubCategory\n                      _jsxDEV(Collapse, {\n                        defaultActiveKey: [\"1\"],\n                        children: /*#__PURE__*/_jsxDEV(Panel, {\n                          header: /*#__PURE__*/_jsxDEV(\"div\", {\n                            subCatIndex: subCatIndex,\n                            children: subCat.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 407,\n                            columnNumber: 31\n                          }, this),\n                          className: \"bg-orange\",\n                          children: /*#__PURE__*/_jsxDEV(List, {\n                            dataSource: subCat.questions // Questions\n                            ,\n                            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"create-audit-row\",\n                                children: item\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 416,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                children: this.createCheckbox(item, catIndex)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 417,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 415,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 412,\n                            columnNumber: 29\n                          }, this)\n                        }, subCatIndex + 1, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 25\n                      }, this)\n                    );\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this)]\n              }, catIndex + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          );\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.showFormModal,\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Upload Photo\",\n          visible: this.state.visibleForm,\n          onOk: this.handleFormOk,\n          onCancel: this.handleCancel,\n          okButtonProps: {\n            disabled: false\n          },\n          cancelButtonProps: {\n            disabled: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            name: \"photo_upload\",\n            className: \"photo-upload\",\n            onFinish: this.onFinish,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"file\",\n                onChange: this.fileSelectedHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"caption\",\n              rules: [{\n                required: true,\n                message: \"Description\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Caption\",\n                onChange: this.onChangeCaption,\n                value: this.state.caption,\n                id: \"caption\",\n                type: \"capyion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Upload Confirm\",\n            destroyOnClose: true,\n            visible: this.state.visibleConfirm,\n            onOk: this.handleUploadOk,\n            okButtonProps: {\n              disabled: false\n            },\n            cancelButtonProps: {\n              disabled: true,\n              visible: false\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Photo Added!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submit-button\",\n          type: \"primary\",\n          onClick: () => this.submitAudit(),\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"\",\n          visible: this.state.visibleAudit,\n          onOk: this.handleAuditOk,\n          okButtonProps: {\n            disabled: false\n          },\n          cancelButtonProps: {\n            disabled: true,\n            visible: false\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Audit Uploaded!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nChecklist.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps)(Checklist);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","Button","Modal","Form","DatePicker","React","Component","PropTypes","connect","importJSON","submit","display","dateformat","fileUpload","require","Fb","fb","Panel","layout","labelCol","span","wrapperCol","Checklist","submitAudit","console","log","state","type","catCounts","total_score","image","date","comment","location","tenantID","props","tenantInfo","record","_id","showAuditModal","onChange","e","setState","target","id","value","onChangeComment","content","nativeEvent","explicitOriginalTarget","Date","toString","onChangeCaption","caption","tempImageCaption","onChangeDate","dateString","_d","fileSelectedHandler","event","files","then","data","base64","tempImageBase64","visibleAudit","showFormModal","visibleForm","showConfirmModal","visibleConfirm","handleAuditOk","handleFormOk","handleUploadOk","handleCancel","createCheckbox","label","catIndex","handleCount","handlegcCheckCount","checked","gc_count","createfoodCheckbox","toggleCheckbox","handlefoodCheckCount","food_count","render","map","cat","name","subcategories","subCat","subCatIndex","questions","item","disabled","required","message","onFinish","visible","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport { submit, display } from \"../actions/auditActions.js\";\r\nimport dateformat from \"dateformat\";\r\nconst fileUpload = require(\"fuctbase64\");\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass Checklist extends Component {\r\n  // componentWillMount = () => {\r\n  //   this.selectedCheckboxes = new Set();\r\n  // };\r\n\r\n  // toggleCheckbox = (label) => {\r\n  //   if (this.selectedCheckboxes.has(label)) {\r\n  //     this.selectedCheckboxes.delete(label);\r\n  //   } else {\r\n  //     this.selectedCheckboxes.add(label);\r\n  //   }\r\n  // };\r\n\r\n  // handleFormSubmit = (formSubmitEvent) => {\r\n  //   formSubmitEvent.preventDefault();\r\n\r\n  //   for (const checkbox of this.selectedCheckboxes) {\r\n  //     console.log(checkbox, \"is selected.\");\r\n  //   }\r\n  // };\r\n\r\n  // onFinish = () => {\r\n  //   var newState = [];\r\n  //   for (var i = 0; i < this.state.catCounts.length; i++) {\r\n  //     newState.push(this.state.catCounts[i] / 2);\r\n  //   }\r\n  //   const submitData = {\r\n  //     catCounts: newState,\r\n  //   };\r\n\r\n  //   console.log(submitData);\r\n  // };\r\n\r\n  submitAudit = () => {\r\n    console.log(this.state);\r\n    submit({\r\n      type: \"FB\",\r\n      catCounts: this.state.catCounts,\r\n      total_score:\r\n        this.state.catCounts[0] +\r\n        this.state.catCounts[1] +\r\n        this.state.catCounts[2] +\r\n        this.state.catCounts[3] +\r\n        this.state.catCounts[4],\r\n      image: this.state.image,\r\n      date: this.state.date,\r\n      comment: this.state.comment,\r\n      location: this.state.location,\r\n      tenantID: this.props.tenantInfo.record._id,\r\n    });\r\n    this.showAuditModal();\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onChangeComment = (comment) => {\r\n    this.setState({\r\n      comment: [\r\n        {\r\n          content: comment.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  onChangeCaption = (caption) => {\r\n    console.log(this.state);\r\n    this.setState({\r\n      tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value,\r\n    });\r\n  };\r\n\r\n  onChangeDate = (date, dateString) => {\r\n    this.setState({\r\n      date: dateformat(date._d.toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n    });\r\n  };\r\n\r\n  fileSelectedHandler = (event) => {\r\n    console.log(event.target.files[0]);\r\n    fileUpload(event).then((data) => {\r\n      console.log(\"base64: \", data.base64);\r\n      this.setState({\r\n        // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\r\n        tempImageBase64: [\r\n          {\r\n            base64: data.base64,\r\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          },\r\n        ],\r\n      });\r\n    });\r\n  };\r\n\r\n  showAuditModal = () => {\r\n    this.setState({\r\n      visibleAudit: true,\r\n    });\r\n  };\r\n\r\n  showFormModal = () => {\r\n    this.setState({\r\n      visibleForm: true,\r\n    });\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({\r\n      visibleConfirm: true,\r\n    });\r\n  };\r\n\r\n  handleAuditOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleAudit: false,\r\n    });\r\n  };\r\n\r\n  handleFormOk = (e) => {\r\n    console.log(e);\r\n    this.showConfirmModal();\r\n  };\r\n\r\n  handleUploadOk = (e) => {\r\n    console.log(e);\r\n    console.log(this.state);\r\n    this.setState({\r\n      image: [\r\n        {\r\n          base64: this.state.tempImageBase64[0].base64,\r\n          date: this.state.tempImageBase64[0].date,\r\n          caption: this.state.tempImageCaption,\r\n        },\r\n      ],\r\n      visibleConfirm: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleForm: false,\r\n    });\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n  handlegcCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.gc_count++);\r\n    } else {\r\n      this.setState((state) => state.gc_count--);\r\n    }\r\n  };\r\n  //for food hygiene cat\r\n  createfoodCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handlefoodCheckCount(e)}\r\n    />\r\n  );\r\n  handlefoodCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.food_count++);\r\n    } else {\r\n      this.setState((state) => state.food_count--);\r\n    }\r\n  };\r\n\r\n  // not exactly dynamic\r\n  state = {\r\n    checked: false,\r\n    catCounts: [0, 0, 0, 0, 0], // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\r\n    image: null,\r\n    tempImageBase64: [],\r\n    tempImageCaption: null,\r\n    date: null,\r\n    comment: null,\r\n    location: \"\",\r\n    visibleForm: false,\r\n    visibleConfirm: false,\r\n    visibleAudit: false,\r\n    tenantInfo: {},\r\n    type: \"FB\",\r\n  };\r\n\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n      case 3:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[3]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[3]--);\r\n        }\r\n        break;\r\n      case 4:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[4]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[4]--);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <h3>\r\n          F&B Audit for Tenant at Address:{\" \"}\r\n          <b>\r\n            {this.props.tenantInfo !== null\r\n              ? this.props.tenantInfo.record._id !== null\r\n                ? this.props.tenantInfo.record._id\r\n                : \"\"\r\n              : \"\"}\r\n          </b>\r\n        </h3>\r\n\r\n        {Fb.map((cat, catIndex) => {\r\n          // var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"checklist-item\">\r\n                                  <div className=\"create-audit-row\">{item}</div>\r\n                                  <div className=\"checklist-checkbox\">\r\n                                    {this.createCheckbox(item, catIndex)}\r\n                                  </div>\r\n                                </div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n        <Button type=\"primary\" onClick={this.showFormModal}>\r\n          Upload Photo\r\n        </Button>\r\n        <Modal\r\n          title=\"Upload Photo\"\r\n          visible={this.state.visibleForm}\r\n          onOk={this.handleFormOk}\r\n          onCancel={this.handleCancel}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: false }}\r\n        >\r\n          <Form.Item\r\n            name=\"date\"\r\n            label=\"Date\"\r\n            rules={[{ required: true, message: \"Date of Incident\" }]}\r\n          >\r\n            <DatePicker\r\n              className=\"auditDate\"\r\n              placeholder=\"Date\"\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"Comment\"\r\n            label=\"Comment\"\r\n            rules={[\r\n              {\r\n                required: false,\r\n                message: \"Description\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              className=\"commentBox\"\r\n              //placeholder=\"Comment\"\r\n              onChange={this.onChangeComment}\r\n              value={this.state.comment}\r\n              id=\"comment\"\r\n              type=\"comment\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"Total Score: \">\r\n            <span className=\"total_score\">\r\n              {(this.state.catCounts[0] +\r\n                this.state.catCounts[1] +\r\n                this.state.catCounts[2] +\r\n                this.state.catCounts[3] +\r\n                this.state.catCounts[4]) /\r\n                2}\r\n            </span>\r\n          </Form.Item>\r\n        </Modal>\r\n        <div className=\"panels\">\r\n          {Fb.map((cat, catIndex) => {\r\n            // var catScore = cat.score;\r\n            return (\r\n              // Category\r\n              <Collapse defaultActiveKey={[\"1\"]}>\r\n                <Panel\r\n                  header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                  key={catIndex + 1}\r\n                  className=\"bg-orange\"\r\n                >\r\n                  <div catIndex={catIndex}>\r\n                    {cat.subcategories.map((subCat, subCatIndex) => {\r\n                      return (\r\n                        // SubCategory\r\n                        <Collapse defaultActiveKey={[\"1\"]}>\r\n                          <Panel\r\n                            header={\r\n                              <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                            }\r\n                            key={subCatIndex + 1}\r\n                            className=\"bg-orange\"\r\n                          >\r\n                            <List\r\n                              dataSource={subCat.questions} // Questions\r\n                              renderItem={(item) => (\r\n                                <List.Item>\r\n                                  <div className=\"create-audit-row\">{item}</div>\r\n                                  <div>\r\n                                    {this.createCheckbox(item, catIndex)}\r\n                                  </div>\r\n                                </List.Item>\r\n                              )}\r\n                            />\r\n                          </Panel>\r\n                        </Collapse>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n                </Panel>\r\n              </Collapse>\r\n            );\r\n          })}\r\n          <Button type=\"primary\" onClick={this.showFormModal}>\r\n            Upload Photo\r\n          </Button>\r\n          <Modal\r\n            title=\"Upload Photo\"\r\n            visible={this.state.visibleForm}\r\n            onOk={this.handleFormOk}\r\n            onCancel={this.handleCancel}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: false }}\r\n          >\r\n            <Form\r\n              name=\"photo_upload\"\r\n              className=\"photo-upload\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item>\r\n                <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n              </Form.Item>\r\n              {/* <Form.Item\r\n              name=\"date\"\r\n              rules={[{ required: true, message: \"Date of Incident\" }]}\r\n            >\r\n              <DatePicker\r\n                placeholder=\"Date\"\r\n                onChange={this.onChangeDate}\r\n              />\r\n            </Form.Item> */}\r\n\r\n              <Form.Item\r\n                name=\"caption\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Description\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Caption\"\r\n                  onChange={this.onChangeCaption}\r\n                  value={this.state.caption}\r\n                  id=\"caption\"\r\n                  type=\"capyion\"\r\n                />\r\n              </Form.Item>\r\n\r\n              {/* <Form.Item\r\n              name=\"location\"\r\n              rules={[{ required: true, message: \"Location of Incident\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Location\"\r\n                onChange={this.onChange}\r\n                value={this.state.location}\r\n                id=\"location\"\r\n                type=\"location\"\r\n              />\r\n            </Form.Item> */}\r\n            </Form>\r\n\r\n            <Modal\r\n              title=\"Upload Confirm\"\r\n              destroyOnClose={true}\r\n              visible={this.state.visibleConfirm}\r\n              onOk={this.handleUploadOk}\r\n              okButtonProps={{ disabled: false }}\r\n              cancelButtonProps={{ disabled: true, visible: false }}\r\n            >\r\n              <p>Photo Added!</p>\r\n            </Modal>\r\n          </Modal>\r\n          <Button\r\n            className=\"submit-button\"\r\n            type=\"primary\"\r\n            onClick={() => this.submitAudit()}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n\r\n          <Modal\r\n            title=\"\"\r\n            visible={this.state.visibleAudit}\r\n            onOk={this.handleAuditOk}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: true, visible: false }}\r\n          >\r\n            <p>Audit Uploaded!</p>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChecklist.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(Checklist);\r\n"]},"metadata":{},"sourceType":"module"}