{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox, Button, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport PhotoPop from \"./photo/PhotoPop.js\";\nimport { submit, display } from \"../actions/auditActions.js\";\nimport { FB } from \"./questionsData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse; // TODO: Take score from json file => Update the score, replace the json file\n\nclass Checklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = () => {\n      var newState = [];\n\n      for (var i = 0; i < this.state.catCounts.length; i++) {\n        newState.push(this.state.catCounts[i] / 2);\n      }\n\n      const submitData = {\n        catCounts: newState\n      };\n      console.log(submitData);\n    };\n\n    this.createCheckbox = (label, catIndex) => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label // handleCheckboxChange={this.toggleCheckbox}\n      ,\n      onChange: e => this.handleCount(e, catIndex)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n\n    this.handlegcCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.gc_count++);\n      } else {\n        this.setState(state => state.gc_count--);\n      }\n    };\n\n    this.createfoodCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label,\n      handleCheckboxChange: this.toggleCheckbox,\n      onChange: e => this.handlefoodCheckCount(e)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this);\n\n    this.handlefoodCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.food_count++);\n      } else {\n        this.setState(state => state.food_count--);\n      }\n    };\n\n    this.state = {\n      checked: false,\n      catCounts: [0, 0, 0, 0, 0] // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\n\n    };\n\n    this.handleCount = (e, catIndex) => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      switch (catIndex) {\n        case 0:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[0]++);\n          } else {\n            this.setState(state => state.catCounts[0]--);\n          }\n\n          break;\n\n        case 1:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[1]++);\n          } else {\n            this.setState(state => state.catCounts[1]--);\n          }\n\n          break;\n\n        case 2:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[2]++);\n          } else {\n            this.setState(state => state.catCounts[2]--);\n          }\n\n          break;\n\n        case 3:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[3]++);\n          } else {\n            this.setState(state => state.catCounts[3]--);\n          }\n\n          break;\n\n        case 4:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[4]++);\n          } else {\n            this.setState(state => state.catCounts[4]--);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.items);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [Fb.map((cat, catIndex) => {\n        // var catScore = cat.score;\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 29\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"create-audit-row\",\n                              children: item\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 158,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: this.createCheckbox(item, catIndex)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 159,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 157,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 27\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-button\",\n        type: \"primary\",\n        onClick: this.onFinish,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\",\n        visible: this.state.visible2,\n        onOk: this.handleOk2,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: true,\n          visible: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Audit Uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Checklist;","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","Button","Modal","React","Component","importJSON","PhotoPop","submit","display","FB","Fb","fb","Panel","Checklist","onFinish","newState","i","state","catCounts","length","push","submitData","console","log","createCheckbox","label","catIndex","e","handleCount","handlegcCheckCount","checked","type","target","setState","gc_count","createfoodCheckbox","toggleCheckbox","handlefoodCheckCount","food_count","render","items","map","cat","name","subcategories","subCat","subCatIndex","questions","item","visible2","handleOk2","disabled","visible"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox, Button, Modal } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport PhotoPop from \"./photo/PhotoPop.js\";\r\nimport { submit, display } from \"../actions/auditActions.js\";\r\nimport { FB } from \"./questionsData\";\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass Checklist extends Component {\r\n  // componentWillMount = () => {\r\n  //   this.selectedCheckboxes = new Set();\r\n  // };\r\n\r\n  // toggleCheckbox = (label) => {\r\n  //   if (this.selectedCheckboxes.has(label)) {\r\n  //     this.selectedCheckboxes.delete(label);\r\n  //   } else {\r\n  //     this.selectedCheckboxes.add(label);\r\n  //   }\r\n  // };\r\n\r\n  // handleFormSubmit = (formSubmitEvent) => {\r\n  //   formSubmitEvent.preventDefault();\r\n\r\n  //   for (const checkbox of this.selectedCheckboxes) {\r\n  //     console.log(checkbox, \"is selected.\");\r\n  //   }\r\n  // };\r\n\r\n  onFinish = () => {\r\n    var newState = [];\r\n    for (var i = 0; i < this.state.catCounts.length; i++) {\r\n      newState.push(this.state.catCounts[i] / 2);\r\n    }\r\n    const submitData = {\r\n      catCounts: newState,\r\n    };\r\n\r\n    console.log(submitData);\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n  handlegcCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.gc_count++);\r\n    } else {\r\n      this.setState((state) => state.gc_count--);\r\n    }\r\n  };\r\n  //for food hygiene cat\r\n  createfoodCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handlefoodCheckCount(e)}\r\n    />\r\n  );\r\n  handlefoodCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.food_count++);\r\n    } else {\r\n      this.setState((state) => state.food_count--);\r\n    }\r\n  };\r\n\r\n  // not exactly dynamic\r\n  state = {\r\n    checked: false,\r\n    catCounts: [0, 0, 0, 0, 0], // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\r\n  };\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n      case 3:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[3]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[3]--);\r\n        }\r\n        break;\r\n      case 4:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[4]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[4]--);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.items);\r\n    return (\r\n      <div className=\"panels\">\r\n        {Fb.map((cat, catIndex) => {\r\n          // var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"create-audit-row\">{item}</div>\r\n                                <div>{this.createCheckbox(item, catIndex)}</div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n        <Button\r\n          className=\"submit-button\"\r\n          type=\"primary\"\r\n          onClick={this.onFinish}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n        {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          TEST\r\n        </Button> */}\r\n        <Modal\r\n          title=\"\"\r\n          visible={this.state.visible2}\r\n          onOk={this.handleOk2}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: true, visible: false }}\r\n        >\r\n          <p>Audit Uploaded!</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}