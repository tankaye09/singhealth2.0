{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\TenantList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Input, Button, Space, Table, Modal } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { getTenants, setSelectedTenant, delTenant } from \"../actions/tenantActions\";\nimport { deleteAudit } from \"../actions/auditActions\";\nimport PropTypes from \"prop-types\";\nimport { FormProvider } from \"antd/lib/form/context\";\nimport { deleteTenant } from \"../actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Directory extends Component {\n  constructor() {\n    super();\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: \"block\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? \"#1890ff\" : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: \"#ffc069\",\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: \"\"\n      });\n    };\n\n    this.onCreateClick = record => {\n      //pass to redux\n      this.props.setSelectedTenant({\n        record\n      }); //if FB, go to FB | if non-FB go to non-FB\n\n      if (record.type === \"F&B\") {\n        this.props.history.push(\"/checklistFB\");\n      } else this.props.history.push(\"/checklistNonFB\"); // this.props.tenantInfo = record;\n\n\n      console.log({\n        record\n      });\n    };\n\n    this.onDeleteClick = () => {\n      this.setState({ ...this.state,\n        visible: false\n      });\n      var tenantList = this.state.tenantData;\n\n      for (var i = 0; i < tenantList.length; i++) {\n        if (tenantList[i].userId == this.state.userId) {\n          console.log(this.state.userId);\n          delTenant({\n            _id: tenantList[i]._id\n          });\n          deleteAudit({\n            tenantID: tenantList[i]._id\n          });\n          deleteTenant({\n            _id: this.state.userId\n          });\n          console.log(\"sent for deletion\");\n        }\n      } // this.setState({\n      //   visible2: false,\n      // });\n\n    };\n\n    this.showModal = record => {\n      this.setState({\n        visible: true,\n        userId: record.userId\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      tenantData: [],\n      searchText: \"\",\n      searchedColumn: \"\",\n      tenantInfo: {},\n      visible: false,\n      userId: null,\n      rerender: \"\"\n    }; // this.delTenant = this.delTenant.bind(this);\n    // this.deleteAudit = this.deleteAudit.bind(this);\n    // this.deleteTenant = this.deleteTenant.bind(this);\n\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"data\");\n    this.props.getTenants(data => {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].type === \"Non-FB\") {\n          data[i].total_score = data[i].total_score / 34 * 100;\n        } else {\n          data[i].total_score = data[i].total_score / 96 * 100;\n        }\n      }\n\n      this.setState({\n        tenantData: data\n      });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: \"Addr.\",\n      dataIndex: \"address\",\n      key: \"address\",\n      fixed: \"left\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"address\")\n    }, {\n      title: \"Inst.\",\n      dataIndex: \"institution\",\n      key: \"institution\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"institution\")\n    }, // {\n    //   title: \"Auditor\",\n    //   dataIndex: \"auditor\",\n    //   key: \"auditor\",\n    //   width: \"150\",\n    //   ...this.getColumnSearchProps(\"auditor\"),\n    // },\n    {\n      title: \"ID\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"id\")\n    }, {\n      title: \"FB/NonFB\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"type\")\n    }, {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"x\",\n      fixed: \"right\",\n      width: \"20%\",\n      render: record => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"action-buttons\",\n          type: \"primary\",\n          size: \"small\",\n          onClick: () => this.onCreateClick(record),\n          children: [\"Create \", \"\\n\", \" Audit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"action-buttons\",\n          type: \"primary\",\n          size: \"small\",\n          onClick: () => this.showModal(record),\n          children: \"Delete Tenant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Modal\",\n          visible: this.state.visible,\n          onOk: this.onDeleteClick().then(() => this.setState({\n            rerender: \"sth\"\n          })),\n          onCancel: this.hideModal,\n          okText: \"Confirm\",\n          cancelText: \"Cancel\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this Tenant?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.state.tenantData,\n        scroll: {\n          x: 400,\n          y: 300\n        },\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"Tenants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDirectory.propTypes = {\n  getTenants: PropTypes.func.isRequired,\n  setSelectedTenant: PropTypes.func.isRequired,\n  tenantData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantData: state.tenantData\n});\n\nexport default connect(mapStateToProps, {\n  getTenants,\n  setSelectedTenant\n})(Directory);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/TenantList.js"],"names":["React","Component","axios","Input","Button","Space","Table","Modal","Highlighter","SearchOutlined","connect","getTenants","setSelectedTenant","delTenant","deleteAudit","PropTypes","FormProvider","deleteTenant","Directory","constructor","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","searchText","searchedColumn","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","onCreateClick","props","type","history","push","console","log","onDeleteClick","tenantList","tenantData","i","length","userId","_id","tenantID","showModal","hideModal","tenantInfo","rerender","bind","componentDidMount","data","total_score","columns","title","key","fixed","then","x","y","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table, Modal } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getTenants,\r\n  setSelectedTenant,\r\n  delTenant,\r\n} from \"../actions/tenantActions\";\r\nimport { deleteAudit } from \"../actions/auditActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormProvider } from \"antd/lib/form/context\";\r\nimport { deleteTenant } from \"../actions/authActions\";\r\n\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      tenantInfo: {},\r\n      visible: false,\r\n      userId: null,\r\n      rerender: \"\",\r\n    };\r\n\r\n    // this.delTenant = this.delTenant.bind(this);\r\n    // this.deleteAudit = this.deleteAudit.bind(this);\r\n    // this.deleteTenant = this.deleteTenant.bind(this);\r\n    this.onDeleteClick = this.onDeleteClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i].type === \"Non-FB\") {\r\n          data[i].total_score = (data[i].total_score / 34) * 100;\r\n        } else {\r\n          data[i].total_score = (data[i].total_score / 96) * 100;\r\n        }\r\n      }\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  onCreateClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    if (record.type === \"F&B\") {\r\n      this.props.history.push(\"/checklistFB\");\r\n    } else this.props.history.push(\"/checklistNonFB\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  // confirmDelete = () => {\r\n  //   // this.setState({\r\n  //   //   visible: true,\r\n  //   // });\r\n  //   this.onDeleteClick();\r\n  // }\r\n\r\n  onDeleteClick = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      visible: false,\r\n    });\r\n    var tenantList = this.state.tenantData;\r\n    for (var i = 0; i < tenantList.length; i++) {\r\n      if (tenantList[i].userId == this.state.userId) {\r\n        console.log(this.state.userId);\r\n        delTenant({ _id: tenantList[i]._id });\r\n        deleteAudit({ tenantID: tenantList[i]._id });\r\n        deleteTenant({ _id: this.state.userId });\r\n        console.log(\"sent for deletion\");\r\n      }\r\n    }\r\n    // this.setState({\r\n    //   visible2: false,\r\n    // });\r\n  };\r\n\r\n  showModal = (record) => {\r\n    this.setState({\r\n      visible: true,\r\n      userId: record.userId,\r\n    });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Addr.\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      // {\r\n      //   title: \"Auditor\",\r\n      //   dataIndex: \"auditor\",\r\n      //   key: \"auditor\",\r\n      //   width: \"150\",\r\n      //   ...this.getColumnSearchProps(\"auditor\"),\r\n      // },\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"id\"),\r\n      },\r\n      {\r\n        title: \"FB/NonFB\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.onCreateClick(record)}\r\n            >\r\n              Create {\"\\n\"} Audit\r\n            </Button>\r\n\r\n            <p></p>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => this.showModal(record)}\r\n            >\r\n              Delete Tenant\r\n            </Button>\r\n\r\n            <Modal\r\n              title=\"Modal\"\r\n              visible={this.state.visible}\r\n              onOk={this.onDeleteClick().then(() =>\r\n                this.setState({ rerender: \"sth\" })\r\n              )}\r\n              onCancel={this.hideModal}\r\n              okText=\"Confirm\"\r\n              cancelText=\"Cancel\"\r\n            >\r\n              <p>Are you sure you want to delete this Tenant?</p>\r\n            </Modal>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.tenantData}\r\n          scroll={{ x: 400, y: 300 }}\r\n          title={() => <div className=\"table-title\">Tenants</div>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants, setSelectedTenant })(\r\n  Directory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}