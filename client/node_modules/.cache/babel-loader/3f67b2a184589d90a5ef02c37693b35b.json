{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(importJSON);\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse;\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst subcategories = Fb.map((cat, catIndex) => cat.subcategories.map((subCat, subCatIndex) => subCat.name));\n\nfunction Checklist() {\n  componentWillMount = () => {\n    this.selectedCheckboxes = new Set();\n  };\n\n  toggleCheckbox = label => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    for (const checkbox of this.selectedCheckboxes) {\n      console.log(checkbox, \"is selected.\");\n    }\n  };\n\n  createprofCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n    label: label,\n    handleCheckboxChange: this.toggleCheckbox,\n    onChange: e => this.handleprofCheckCount(e)\n  }, label, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  state = {\n    checked: false,\n    profcount: 0\n  };\n\n  handleprofCheckCount = e => {\n    const {\n      checked,\n      type\n    } = e.target;\n\n    if (type === \"checkbox\" && checked === true) {\n      this.setState(state => state.profcount++, this.logCount);\n    } else {\n      this.setState(state => state.profcount--, this.logCount);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panels\",\n    children: Fb.map((cat, catIndex) => {\n      return /*#__PURE__*/_jsxDEV(Collapse, {\n        defaultActiveKey: [\"1\"],\n        children: /*#__PURE__*/_jsxDEV(Panel, {\n          header: /*#__PURE__*/_jsxDEV(\"div\", {\n            catIndex: catIndex,\n            children: cat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this),\n          className: \"bg-orange text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            catIndex: catIndex,\n            children: cat.subcategories.map((subCat, subCatIndex) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                subCatIndex: subCatIndex,\n                children: subCat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dataSource: [\"Shop is open and ready to service patients/visitors according to operating hours.\", \"Staff Attendance: adequate staff for peak and non-peak hours.\", \"At least one clearly assigned person in-charge on site.\"],\n            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-audit-row\",\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: this.createprofCheckbox()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, catIndex + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Checklist;\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","React","Component","importJSON","console","log","Fb","fb","Panel","text","subcategories","map","cat","catIndex","subCat","subCatIndex","name","Checklist","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","createprofCheckbox","e","handleprofCheckCount","state","checked","profcount","type","target","setState","logCount","item"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nconsole.log(importJSON);\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\nconst subcategories = Fb.map((cat, catIndex) =>\r\n  cat.subcategories.map((subCat, subCatIndex) => subCat.name)\r\n);\r\n\r\nfunction Checklist() {\r\n  componentWillMount = () => {\r\n    this.selectedCheckboxes = new Set();\r\n  };\r\n\r\n  toggleCheckbox = (label) => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = (formSubmitEvent) => {\r\n    formSubmitEvent.preventDefault();\r\n\r\n    for (const checkbox of this.selectedCheckboxes) {\r\n      console.log(checkbox, \"is selected.\");\r\n    }\r\n  };\r\n\r\n  createprofCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleprofCheckCount(e)}\r\n    />\r\n  );\r\n\r\n  state = {\r\n    checked: false,\r\n    profcount: 0,\r\n  };\r\n  handleprofCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.profcount++, this.logCount);\r\n    } else {\r\n      this.setState((state) => state.profcount--, this.logCount);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"panels\">\r\n      {Fb.map((cat, catIndex) => {\r\n        return (\r\n          <Collapse defaultActiveKey={[\"1\"]}>\r\n            <Panel\r\n              header={<div catIndex={catIndex}>{cat.name}</div>}\r\n              key={catIndex + 1}\r\n              className=\"bg-orange text-white\"\r\n            >\r\n              <div catIndex={catIndex}>\r\n                {cat.subcategories.map((subCat, subCatIndex) => {\r\n                  return <div subCatIndex={subCatIndex}>{subCat.name}</div>;\r\n                })}\r\n              </div>\r\n              <List\r\n                dataSource={[\r\n                  \"Shop is open and ready to service patients/visitors according to operating hours.\",\r\n                  \"Staff Attendance: adequate staff for peak and non-peak hours.\",\r\n                  \"At least one clearly assigned person in-charge on site.\",\r\n                ]}\r\n                renderItem={(item) => (\r\n                  <List.Item>\r\n                    <div className=\"create-audit-row\">{item}</div>\r\n                    <div>{this.createprofCheckbox()}</div>\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </Panel>\r\n          </Collapse>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}