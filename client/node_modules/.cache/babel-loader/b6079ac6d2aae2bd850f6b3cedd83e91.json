{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport StaffRoute from \"./components/private-route/StaffRoute\";\nimport TenantRoute from \"./components/private-route/TenantRoute\";\nimport Navbar from \"./components/layout/Navbar\"; // Login Flow\n\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\"; //Staff Flow\n\nimport AuditList from \"./components/AuditList\";\nimport Directory from \"./components/TenantList\";\nimport Checklist from \"./components/Checklist\";\nimport ChecklistNonFB from \"./components/ChecklistNonFB\";\nimport CreateTenant from \"./components/auth/RegisterTenant\"; //Tenant Flow\n\nimport TenantHome from \"./components/tenant/TenantHome\";\nimport TenantEditAudit from \"./components/tenant/EditAudit\"; // Check for token to keep user logged in\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  } // might be deprecated\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(errors).length !== 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          message: Object.values(errors),\n          type: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) // Error shown when redux state errors is not empty\n        : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(StaffRoute, {\n              exact: true,\n              path: \"/auditlist\",\n              component: AuditList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StaffRoute, {\n              exact: true,\n              path: \"/checklistFB\",\n              component: Checklist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StaffRoute, {\n              exact: true,\n              path: \"/checklistNonFB\",\n              component: ChecklistNonFB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StaffRoute, {\n              exact: true,\n              path: \"/directory\",\n              component: Directory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StaffRoute, {\n              exact: true,\n              path: \"/createtenant\",\n              component: CreateTenant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TenantRoute, {\n              exact: true,\n              path: \"/tenant\",\n              component: TenantHome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TenantRoute, {\n              exact: true,\n              path: \"/tenant/editAudit\",\n              component: TenantEditAudit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Provider","store","StaffRoute","TenantRoute","Navbar","Login","Register","AuditList","Directory","Checklist","ChecklistNonFB","CreateTenant","TenantHome","TenantEditAudit","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","constructor","state","errors","componentWillReceiveProps","nextProps","setState","render","Object","keys","length","values","propTypes","PropTypes","object","isRequired","mapStateToProps","connect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport StaffRoute from \"./components/private-route/StaffRoute\";\r\nimport TenantRoute from \"./components/private-route/TenantRoute\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\n// Login Flow\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\n//Staff Flow\r\nimport AuditList from \"./components/AuditList\";\r\nimport Directory from \"./components/TenantList\";\r\nimport Checklist from \"./components/Checklist\";\r\nimport ChecklistNonFB from \"./components/ChecklistNonFB\";\r\nimport CreateTenant from \"./components/auth/RegisterTenant\";\r\n//Tenant Flow\r\nimport TenantHome from \"./components/tenant/TenantHome\";\r\nimport TenantEditAudit from \"./components/tenant/EditAudit\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n    // might be deprecated\r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.errors) {\r\n        this.setState({\r\n          errors: nextProps.errors,\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Provider store={store}>\r\n        <div>\r\n          {Object.keys(errors).length !== 0 ? (\r\n            <Alert message={Object.values(errors)} type=\"error\" /> // Error shown when redux state errors is not empty\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <StaffRoute exact path=\"/auditlist\" component={AuditList} />\r\n              <StaffRoute exact path=\"/checklistFB\" component={Checklist} />\r\n              <StaffRoute\r\n                exact\r\n                path=\"/checklistNonFB\"\r\n                component={ChecklistNonFB}\r\n              />\r\n              <StaffRoute exact path=\"/directory\" component={Directory} />\r\n              <StaffRoute exact path=\"/createtenant\" component={CreateTenant} />\r\n\r\n              <TenantRoute exact path=\"/tenant\" component={TenantHome} />\r\n              <TenantRoute\r\n                exact\r\n                path=\"/tenant/editAudit\"\r\n                component={TenantEditAudit}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nApp.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}