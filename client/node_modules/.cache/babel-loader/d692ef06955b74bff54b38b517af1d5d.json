{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\tenant\\\\TenantHome.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Table, Tag, Space, Button } from \"antd\";\nimport { display } from \"../../actions/auditActions.js\";\nimport { auditInfo, getTenant } from \"../../actions/tenantActions\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table; // const Audit = (props) => (\n//   <tr>\n//     <td>{props.audit.username}</td>\n//     <td>{props.audit.image}</td>\n//     <td>{props.audit.notes}</td>\n//     <td>{props.audit.tags}</td>\n//     <td>{props.audit.date.substring(0, 10)}</td>\n//     <td>\n//       <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n//       <a\n//         href=\"#\"\n//         onClick={() => {\n//           props.deleteAudit(props.audit._id);\n//         }}\n//       >\n//         delete\n//       </a>\n//     </td>\n//   </tr>\n// );\n\nclass TenantHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onViewClick = record => {\n      //pass to redux\n      this.props.auditInfo({\n        record\n      }); //if FB, go to FB | if non-FB go to non-FB\n\n      this.props.history.push(\"/viewaudittenant\"); // this.props.tenantInfo = record;\n\n      console.log({\n        record\n      });\n    };\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.state = {\n      audits: [],\n      actualAudits: [],\n      tenantId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted: \", store.getState().auth.user.id);\n    getTenant(data => {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].userId === store.getState().auth.user.id) {\n          this.setState({\n            tenantId: data[i]._id\n          }, console.log(data[i]._id), this.props.display(displayData => {\n            // console.log(\"displayData is: \", displayData);\n            var tempList = [];\n\n            for (var i = 0; i < displayData.length; i++) {\n              // console.log(displayData[i].tenantID);\n              if (displayData[i].tenantID === this.state.tenantId) {\n                tempList.push(displayData[i]);\n              }\n            } // console.log(tempList);\n\n\n            this.setState({\n              actualAudits: tempList\n            });\n          }));\n        }\n      }\n    }); // this.auditList();\n  }\n\n  deleteAudit(id) {\n    axios.delete(\"http://localhost:5000/audits/\" + id).then(res => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter(el => el._id !== id)\n    });\n  }\n\n  // auditList() {\n  //   for (var i = 0; i < this.state.audits.length; i++) {\n  //     console.log(this.state.audits[i]);\n  //     if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\n  //       this.state.actualAudits.push(this.state.audits[i]);\n  //     }\n  //   }\n  //   return this.state.actualAudits.map((currentaudit) => {\n  //     return (\n  //       <Audit\n  //         audit={currentaudit}\n  //         deleteAudit={this.deleteAudit}\n  //         key={currentaudit._id}\n  //       />\n  //     );\n  //   });\n  // }\n  render() {\n    const columns = [{\n      title: \"Date\",\n      dataIndex: \"date\",\n      key: \"date\",\n      fixed: \"left\",\n      width: \"150\",\n      sorter: (a, b) => new Date(a.date) - new Date(b.date),\n      sortDirections: [\"descend\"],\n      ...this.getColumnSearchProps(\"date\")\n    }, {\n      title: \"Score\",\n      dataIndex: \"total_score\",\n      key: \"total_score\",\n      fixed: \"left\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"total_score\")\n    }, {\n      title: \"Score\",\n      dataIndex: \"total_score\",\n      key: \"total_score\",\n      fixed: \"left\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"total_score\")\n    }, {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"x\",\n      fixed: \"right\",\n      width: \"20%\",\n      render: record => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"action-buttons\",\n          type: \"primary\",\n          size: \"small\" // onClick={() => this.onViewClick(record)}\n          ,\n          children: \"View Audit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.state.actualAudits,\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"Your Audits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }, this),\n        scroll: {\n          x: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTenantHome.propTypes = {\n  auditInfo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userID: state.auth.user.id\n});\n\nexport default connect(mapStateToProps, {\n  auditInfo,\n  getTenant,\n  display\n})(TenantHome);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/tenant/TenantHome.js"],"names":["React","Component","Link","axios","NavLink","useHistory","Table","Tag","Space","Button","display","auditInfo","getTenant","connect","store","PropTypes","Column","ColumnGroup","TenantHome","constructor","props","onViewClick","record","history","push","console","log","deleteAudit","bind","state","audits","actualAudits","tenantId","componentDidMount","getState","auth","user","id","data","i","length","userId","setState","_id","displayData","tempList","tenantID","delete","then","res","filter","el","render","columns","title","dataIndex","key","fixed","width","sorter","a","b","Date","date","sortDirections","getColumnSearchProps","x","propTypes","func","isRequired","mapStateToProps","userID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport { display } from \"../../actions/auditActions.js\";\r\nimport { auditInfo, getTenant } from \"../../actions/tenantActions\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store.js\";\r\nimport PropTypes from \"prop-types\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n// const Audit = (props) => (\r\n//   <tr>\r\n//     <td>{props.audit.username}</td>\r\n//     <td>{props.audit.image}</td>\r\n//     <td>{props.audit.notes}</td>\r\n//     <td>{props.audit.tags}</td>\r\n//     <td>{props.audit.date.substring(0, 10)}</td>\r\n//     <td>\r\n//       <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n//       <a\r\n//         href=\"#\"\r\n//         onClick={() => {\r\n//           props.deleteAudit(props.audit._id);\r\n//         }}\r\n//       >\r\n//         delete\r\n//       </a>\r\n//     </td>\r\n//   </tr>\r\n// );\r\n\r\nclass TenantHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n    this.state = {\r\n      audits: [],\r\n      actualAudits: [],\r\n      tenantId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Mounted: \", store.getState().auth.user.id);\r\n    getTenant((data) => {\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i].userId === store.getState().auth.user.id) {\r\n          this.setState(\r\n            { tenantId: data[i]._id },\r\n            console.log(data[i]._id),\r\n            this.props.display((displayData) => {\r\n              // console.log(\"displayData is: \", displayData);\r\n              var tempList = [];\r\n              for (var i = 0; i < displayData.length; i++) {\r\n                // console.log(displayData[i].tenantID);\r\n                if (displayData[i].tenantID === this.state.tenantId) {\r\n                  tempList.push(displayData[i]);\r\n                }\r\n              }\r\n              // console.log(tempList);\r\n              this.setState({ actualAudits: tempList });\r\n            })\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.auditList();\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  onViewClick = (record) => {\r\n    //pass to redux\r\n    this.props.auditInfo({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    this.props.history.push(\"/viewaudittenant\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  // auditList() {\r\n  //   for (var i = 0; i < this.state.audits.length; i++) {\r\n  //     console.log(this.state.audits[i]);\r\n  //     if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\r\n  //       this.state.actualAudits.push(this.state.audits[i]);\r\n  //     }\r\n  //   }\r\n  //   return this.state.actualAudits.map((currentaudit) => {\r\n  //     return (\r\n  //       <Audit\r\n  //         audit={currentaudit}\r\n  //         deleteAudit={this.deleteAudit}\r\n  //         key={currentaudit._id}\r\n  //       />\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        sorter: (a, b) => new Date(a.date) - new Date(b.date),\r\n        sortDirections: [\"descend\"],\r\n        ...this.getColumnSearchProps(\"date\"),\r\n      },\r\n      {\r\n        title: \"Score\",\r\n        dataIndex: \"total_score\",\r\n        key: \"total_score\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"total_score\"),\r\n      },\r\n      {\r\n        title: \"Score\",\r\n        dataIndex: \"total_score\",\r\n        key: \"total_score\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"total_score\"),\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button\r\n              className=\"action-buttons\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              // onClick={() => this.onViewClick(record)}\r\n            >\r\n              View Audit\r\n            </Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.actualAudits}\r\n          title={() => <div className=\"table-title\">Your Audits</div>}\r\n          scroll={{ x: 400 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTenantHome.propTypes = {\r\n  auditInfo: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userID: state.auth.user.id,\r\n});\r\nexport default connect(mapStateToProps, { auditInfo, getTenant, display })(\r\n  TenantHome\r\n);\r\n"]},"metadata":{},"sourceType":"module"}