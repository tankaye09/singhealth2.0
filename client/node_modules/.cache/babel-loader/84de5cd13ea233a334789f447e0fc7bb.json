{"ast":null,"code":"import { getAllByPlaceholderText } from \"@testing-library/dom\";\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\nexport const submit = (data, history) => {\n  console.log(\"submit\", data);\n  let promise = new Promise((resolve, reject) => {\n    axios.post(\"/api/audits/add\", data).then(() => {\n      resolve(data);\n      history.push(\"/auditlist\");\n    }).catch(error => {\n      console.log(error.response.data);\n      reject(\"Audit Submission Failed\");\n    });\n  });\n  promise.then(message => dispatch => {\n    console.log(\"in submit promse\"); // sendEmail(message);\n\n    axios.post(\"/api/sendemail/audit\", data).then(res => {\n      console.log(\"email sent success\");\n      dispatch({\n        type: GET_MESSAGE,\n        payload: \"Audit Created, an Email will be sent to Tenant\"\n      });\n    }).catch(err => {\n      console.log(\"email sent failed, err: \", err);\n      dispatch({\n        type: GET_ERRORS,\n        payload: \"Email Sent Failed\"\n      });\n    });\n  }).catch(message => {\n    console.log(\"in submit promse catch\");\n    console.log(message);\n  });\n};\nexport const display = onDataReceived => dispatch => {\n  axios.get(\"/api/audits\").then(response => {\n    const data = response.data; // console.log(data);\n    // console.log(data.length);\n\n    onDataReceived(data);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const updateAudit = data => {\n  console.log(\"Update audit: \", data);\n  let promise = new Promise((resolve, reject) => {\n    axios.put(\"/api/audits/update\", data).then(() => {\n      resolve(data);\n    }).catch(error => {\n      console.log(error);\n      reject(\"Update Audit failed\");\n    });\n  }); // send email notification\n\n  promise.then(message => {\n    sendEmailAuditUpdate(message);\n  }).catch(message => {\n    console.log(message);\n  });\n};\nexport const updateAuditImage = data => {\n  console.log(data);\n  axios.put(\"/api/audits/updateImage\", data).catch(error => {\n    console.log(error);\n  });\n};\nexport const deleteAudit = data => {\n  console.log(data);\n  return axios.post(\"/api/audits\", data).then(res => console.log(\"audit deleted success\")).catch(error => {\n    console.log(error);\n  });\n};\nexport const sendEmail = data => dispatch => {\n  console.log(\"In send email\");\n  axios.post(\"/api/sendemail/audit\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Audit Created, an Email will be sent to Tenant\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};\nexport const sendEmailAuditUpdate = data => dispatch => {\n  console.log(\"In send email\");\n  axios.post(\"/api/sendemail/auditupdate\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Email Notification Sent\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};\nexport const sendEmailReminder = data => dispatch => {\n  console.log(\"In send email\");\n  return axios.post(\"/api/sendemail/reminder\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Email Reminder Sent to Tenant\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/actions/auditActions.js"],"names":["getAllByPlaceholderText","axios","GET_ERRORS","GET_MESSAGE","submit","data","history","console","log","promise","Promise","resolve","reject","post","then","push","catch","error","response","message","dispatch","res","type","payload","err","display","onDataReceived","get","updateAudit","put","sendEmailAuditUpdate","updateAuditImage","deleteAudit","sendEmail","sendEmailReminder"],"mappings":"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","sourcesContent":["import { getAllByPlaceholderText } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\r\n\r\nexport const submit = (data, history) => {\r\n  console.log(\"submit\", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"/api/audits/add\", data)\r\n      .then(() => {\r\n        resolve(data);\r\n        history.push(\"/auditlist\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n        reject(\"Audit Submission Failed\");\r\n      });\r\n  });\r\n\r\n  promise\r\n    .then((message) => (dispatch) => {\r\n      console.log(\"in submit promse\");\r\n      // sendEmail(message);\r\n      axios\r\n        .post(\"/api/sendemail/audit\", data)\r\n        .then((res) => {\r\n          console.log(\"email sent success\");\r\n          dispatch({\r\n            type: GET_MESSAGE,\r\n            payload: \"Audit Created, an Email will be sent to Tenant\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"email sent failed, err: \", err);\r\n          dispatch({\r\n            type: GET_ERRORS,\r\n            payload: \"Email Sent Failed\",\r\n          });\r\n        });\r\n    })\r\n    .catch((message) => {\r\n      console.log(\"in submit promse catch\");\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const display = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/audits\")\r\n    .then((response) => {\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // console.log(data.length);\r\n      onDataReceived(data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAudit = (data) => {\r\n  console.log(\"Update audit: \", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\"/api/audits/update\", data)\r\n      .then(() => {\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        reject(\"Update Audit failed\");\r\n      });\r\n  });\r\n\r\n  // send email notification\r\n  promise\r\n    .then((message) => {\r\n      sendEmailAuditUpdate(message);\r\n    })\r\n    .catch((message) => {\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const updateAuditImage = (data) => {\r\n  console.log(data);\r\n  axios.put(\"/api/audits/updateImage\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\nexport const deleteAudit = (data) => {\r\n  console.log(data);\r\n  return axios\r\n    .post(\"/api/audits\", data)\r\n    .then((res) => console.log(\"audit deleted success\"))\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const sendEmail = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/audit\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Audit Created, an Email will be sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailAuditUpdate = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/auditupdate\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Notification Sent\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailReminder = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  return axios\r\n    .post(\"/api/sendemail/reminder\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Reminder Sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}