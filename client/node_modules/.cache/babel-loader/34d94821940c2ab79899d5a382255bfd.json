{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Recaptcha from \"react-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout; // TEST TEAM: for testing change to false\n// DEV TEAM: for dev change to true\n\nconst recaptchaOn = false;\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onFinish = values => {\n      console.log(values);\n\n      if (!this.state.isVerified) {\n        alert(\"Please verify you are human\");\n      } else {\n        const userData = {\n          email: values.email\n        }; // this.props.resetPassword(userData);\n      }\n    };\n\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      isVerified: false,\n      email: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (!recaptchaOn) {\n      this.setState({\n        isVerified: true\n      });\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isVerified: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to SingHealth Audit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A new password will be sent to your email address if your email address is valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onFinish: this.onFinish,\n          name: \"normal_login\",\n          className: \"login-register-form\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your Email!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Email\",\n              onChange: this.onChange,\n              value: this.state.email,\n              id: \"email\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"reset-button\",\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-register-form-button\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n          sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n          render: \"explicit\",\n          onloadCallback: console.log(\"onloadCallback\"),\n          verifyCallback: this.verifyCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nResetPassword.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ResetPassword);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/ResetPassword.js"],"names":["React","Component","Layout","Form","Input","Button","connect","Link","withRouter","Recaptcha","Header","Footer","Sider","Content","recaptchaOn","ResetPassword","constructor","onChange","e","setState","target","id","value","onFinish","values","console","log","state","isVerified","alert","userData","email","verifyCallback","bind","componentDidMount","recaptchaLoaded","response","render","required","message","propTypes","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Layout, Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\n// TEST TEAM: for testing change to false\r\n// DEV TEAM: for dev change to true\r\nconst recaptchaOn = false;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.state = {\r\n      isVerified: false,\r\n      email: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (!recaptchaOn) {\r\n      this.setState({\r\n        isVerified: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  recaptchaLoaded() {\r\n    console.log(\"captcha loaded\");\r\n  }\r\n\r\n  verifyCallback(response) {\r\n    if (response) {\r\n      this.setState({ isVerified: true });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    if (!this.state.isVerified) {\r\n      alert(\"Please verify you are human\");\r\n    } else {\r\n      const userData = {\r\n        email: values.email,\r\n      };\r\n      // this.props.resetPassword(userData);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Welcome to SingHealth Audit</h2>\r\n        <p>\r\n          A new password will be sent to your email address if your email\r\n          address is valid\r\n        </p>\r\n        <Content>\r\n          <Form\r\n            onFinish={this.onFinish}\r\n            name=\"normal_login\"\r\n            className=\"login-register-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                id=\"reset-button\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-register-form-button\"\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Recaptcha\r\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n            render=\"explicit\"\r\n            onloadCallback={console.log(\"onloadCallback\")}\r\n            verifyCallback={this.verifyCallback}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {})(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}