{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ChecklistNonFB.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox, Button, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport PhotoPop from \"./photo/PhotoPop.js\";\nimport { submit } from \"../actions/auditActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nonFb = importJSON.non_fb;\nconst {\n  Panel\n} = Collapse; // TODO: Take score from json file => Update the score, replace the json file\n\nclass ChecklistNonFB extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = () => {\n      var newState = [];\n\n      for (var i = 0; i < this.state.catCounts.length; i++) {\n        newState.push(this.state.catCounts[i] / 2);\n      }\n\n      const submitData = {\n        catCounts: newState\n      };\n      console.log(submitData);\n    };\n\n    this.state = {\n      checked: false,\n      catCounts: [0, 0, 0, 0, 0] // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\n\n    };\n\n    this.submitAudit = () => {\n      submit({\n        type: \"Non-FB\",\n        catCounts: this.state.catCounts,\n        total_score: catCounts[0] + catCounts[1] + catCounts[2]\n      });\n      this.showModal2();\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.showModal2 = () => {\n      this.setState({\n        visible2: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleOk2 = e => {\n      console.log(e);\n      this.setState({\n        visible2: false,\n        visible: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.createCheckbox = (label, catIndex) => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label // handleCheckboxChange={this.toggleCheckbox}\n      ,\n      onChange: e => this.handleCount(e, catIndex)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n\n    this.state = {\n      type: \"Non-FB\",\n      checked: false,\n      catCounts: [0, 0, 0],\n      // counts[0]: for Professionalism & Staff Hygiene (20%),\n      //counts[1]: for Housekeeping & General Cleanliness (40%)\n      //counts[2]: for Workplace Safety & Health (40%)\n      total_score: 0\n    };\n\n    this.handleCount = (e, catIndex) => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      switch (catIndex) {\n        case 0:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[0]++);\n          } else {\n            this.setState(state => state.catCounts[0]--);\n          }\n\n          break;\n\n        case 1:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[1]++);\n          } else {\n            this.setState(state => state.catCounts[1]--);\n          }\n\n          break;\n\n        case 2:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[2]++);\n          } else {\n            this.setState(state => state.catCounts[2]--);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [nonFb.map((cat, catIndex) => {\n        // var catScore = cat.score;\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 29\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"create-audit-row\",\n                              children: item\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 170,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: this.createCheckbox(item, catIndex)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 171,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 27\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-button\",\n        type: \"primary\",\n        onClick: this.onFinish,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Upload Photo\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        okButtonProps: {\n          disabled: true\n        },\n        cancelButtonProps: {\n          disabled: false\n        },\n        children: /*#__PURE__*/_jsxDEV(PhotoPop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.submitAudit(),\n        className: \"submit-button\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\",\n        visible: this.state.visible2,\n        onOk: this.handleOk2,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: true,\n          visible: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Audit Uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ChecklistNonFB;","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ChecklistNonFB.js"],"names":["Collapse","Divider","List","Input","Checkbox","Button","Modal","React","Component","importJSON","PhotoPop","submit","nonFb","non_fb","Panel","ChecklistNonFB","onFinish","newState","i","state","catCounts","length","push","submitData","console","log","checked","submitAudit","type","total_score","showModal2","showModal","setState","visible","visible2","handleOk","e","handleOk2","handleCancel","createCheckbox","label","catIndex","handleCount","target","render","map","cat","name","subcategories","subCat","subCatIndex","questions","item","disabled"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox, Button, Modal } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport PhotoPop from \"./photo/PhotoPop.js\";\r\nimport { submit } from \"../actions/auditActions.js\";\r\nconst nonFb = importJSON.non_fb;\r\nconst { Panel } = Collapse;\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass ChecklistNonFB extends Component {\r\n  // componentWillMount = () => {\r\n  //   this.selectedCheckboxes = new Set();\r\n  // };\r\n\r\n  // toggleCheckbox = (label) => {\r\n  //   if (this.selectedCheckboxes.has(label)) {\r\n  //     this.selectedCheckboxes.delete(label);\r\n  //   } else {\r\n  //     this.selectedCheckboxes.add(label);\r\n  //   }\r\n  // };\r\n\r\n  // handleFormSubmit = (formSubmitEvent) => {\r\n  //   formSubmitEvent.preventDefault();\r\n\r\n  //   for (const checkbox of this.selectedCheckboxes) {\r\n  //     console.log(checkbox, \"is selected.\");\r\n  //   }\r\n  // };\r\n\r\n  onFinish = () => {\r\n    var newState = [];\r\n    for (var i = 0; i < this.state.catCounts.length; i++) {\r\n      newState.push(this.state.catCounts[i] / 2);\r\n    }\r\n    const submitData = {\r\n      catCounts: newState,\r\n    };\r\n\r\n    console.log(submitData);\r\n  };\r\n  // not exactly dynamic\r\n  state = {\r\n    checked: false,\r\n    catCounts: [0, 0, 0, 0, 0], // counts[0]: for Professionalism & Staff Hygiene (10%), counts[1]: for Housekeeping & General Cleanliness (20%)\r\n  };\r\n  submitAudit = () => {\r\n    submit({\r\n      type: \"Non-FB\",\r\n      catCounts: this.state.catCounts,\r\n      total_score: catCounts[0] + catCounts[1] + catCounts[2],\r\n    });\r\n    this.showModal2();\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  showModal2 = () => {\r\n    this.setState({\r\n      visible2: true,\r\n    });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleOk2 = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible2: false,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n\r\n  // not exactly dynamic\r\n  state = {\r\n    type: \"Non-FB\",\r\n    checked: false,\r\n    catCounts: [0, 0, 0],\r\n    // counts[0]: for Professionalism & Staff Hygiene (20%),\r\n    //counts[1]: for Housekeeping & General Cleanliness (40%)\r\n    //counts[2]: for Workplace Safety & Health (40%)\r\n    total_score: 0,\r\n  };\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panels\">\r\n        {nonFb.map((cat, catIndex) => {\r\n          // var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"create-audit-row\">{item}</div>\r\n                                <div>{this.createCheckbox(item, catIndex)}</div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n        <Button\r\n          className=\"submit-button\"\r\n          type=\"primary\"\r\n          onClick={this.onFinish}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n        <Button type=\"primary\" onClick={this.showModal}>\r\n          Upload Photo\r\n        </Button>\r\n        <Modal\r\n          title=\"Upload Photo\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okButtonProps={{ disabled: true }}\r\n          cancelButtonProps={{ disabled: false }}\r\n        >\r\n          <PhotoPop />\r\n        </Modal>\r\n        <Button\r\n          onClick={() => this.submitAudit()}\r\n          className=\"submit-button\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n        {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          TEST\r\n        </Button> */}\r\n        <Modal\r\n          title=\"\"\r\n          visible={this.state.visible2}\r\n          onOk={this.handleOk2}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: true, visible: false }}\r\n        >\r\n          <p>Audit Uploaded!</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChecklistNonFB;\r\n"]},"metadata":{},"sourceType":"module"}