{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\AuditList.js\";\nimport React, { Component, TextArea } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Input, Table, Button, Tag, Space } from \"antd\";\nimport { connect } from \"react-redux\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { setSelectedTenant, getTenants } from \"../actions/tenantActions\";\nimport PropTypes from \"prop-types\";\nimport { display } from \"../actions/auditActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nconst Audit = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.audit.username\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.audit.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.audit.notes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.audit.tags\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.audit.date.substring(0, 10)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + props.audit._id,\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      onClick: () => {\n        props.deleteAudit(props.audit._id);\n      },\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = Audit;\nconst mapDispatchToProps = {\n  display\n};\n\nclass AuditList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onViewClick = record => {\n      //pass to redux\n      this.props.setSelectedTenant({\n        record\n      }); //if FB, go to FB | if non-FB go to non-FB\n\n      this.props.history.push(\"/viewaudit\"); // this.props.tenantInfo = record;\n\n      console.log({\n        record\n      });\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: \"block\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? \"#1890ff\" : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: \"#ffc069\",\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: \"\"\n      });\n    };\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.state = {\n      audits: []\n    };\n  }\n\n  componentDidMount() {\n    // axios\n    //   .get(\"http://localhost:5000/api/audits\")\n    //   .then((response) => {\n    //     this.setState({ audits: response.data });\n    //     console.log(response.data);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n    this.props.display(data => {\n      console.log(data);\n      this.setState({\n        audits: data\n      });\n    });\n  }\n\n  deleteAudit(id) {\n    axios.delete(\"http://localhost:5000/audits/\" + id).then(res => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter(el => el._id !== id)\n    });\n  }\n\n  auditList() {\n    return this.state.audits.map(currentaudit => {\n      return /*#__PURE__*/_jsxDEV(Audit, {\n        audit: currentaudit,\n        deleteAudit: this.deleteAudit\n      }, currentaudit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    // console.log(this.state.audits);\n    const columns = [{\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      fixed: \"left\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"type\")\n    }, {\n      title: \"Tenant ID\",\n      dataIndex: \"tenantID\",\n      key: \"itenantID\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"tenantID\")\n    }, {\n      title: \"Inst.\",\n      dataIndex: \"institution\",\n      key: \"institution\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"institution\")\n    }, {\n      title: \"Address\",\n      dataIndex: \"location\",\n      key: \"location\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"location\")\n    }, {\n      title: \"Date\",\n      dataIndex: \"date\",\n      key: \"date\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"date\")\n    }, {\n      title: \"Audit Score\",\n      dataIndex: \"total_score\",\n      key: \"total_score\",\n      width: \"150\",\n      ...this.getColumnSearchProps(\"total_score\")\n    }, {\n      title: \"View Audit\",\n      dataIndex: \"\",\n      key: \"x\",\n      fixed: \"right\",\n      width: \"20%\",\n      render: record => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.onViewClick(record),\n          children: \"View Audit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.state.audits,\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"Audits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 24\n        }, this),\n        scroll: {\n          x: 400,\n          y: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAuditList.propTypes = {\n  setSelectedTenant: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userID: state.auth.user.id\n});\n\nexport default connect(mapStateToProps, {\n  setSelectedTenant,\n  getTenants,\n  display\n})(AuditList);\n\nvar _c;\n\n$RefreshReg$(_c, \"Audit\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/AuditList.js"],"names":["React","Component","TextArea","Link","axios","Input","Table","Button","Tag","Space","connect","Highlighter","SearchOutlined","setSelectedTenant","getTenants","PropTypes","display","Column","ColumnGroup","Audit","props","audit","username","image","notes","tags","date","substring","_id","deleteAudit","mapDispatchToProps","AuditList","constructor","onViewClick","record","history","push","console","log","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","handleReset","closeDropdown","setState","searchText","searchedColumn","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","bind","audits","componentDidMount","data","id","delete","then","res","filter","el","auditList","map","currentaudit","columns","title","key","fixed","x","y","propTypes","func","isRequired","mapStateToProps","userID","auth","user"],"mappings":"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","sourcesContent":["import React, { Component, TextArea } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Input, Table, Button, Tag, Space } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { setSelectedTenant, getTenants } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { display } from \"../actions/auditActions.js\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst Audit = (props) => (\r\n  <tr>\r\n    <td>{props.audit.username}</td>\r\n    <td>{props.audit.image}</td>\r\n    <td>{props.audit.notes}</td>\r\n    <td>{props.audit.tags}</td>\r\n    <td>{props.audit.date.substring(0, 10)}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n      <a\r\n        href=\"#\"\r\n        onClick={() => {\r\n          props.deleteAudit(props.audit._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  display,\r\n};\r\n\r\nclass AuditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n    this.state = { audits: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"http://localhost:5000/api/audits\")\r\n    //   .then((response) => {\r\n    //     this.setState({ audits: response.data });\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n    this.props.display((data) => {\r\n      console.log(data);\r\n      this.setState({ audits: data });\r\n    });\r\n  }\r\n\r\n  onViewClick = (record) => {\r\n    //pass to redux\r\n    this.props.setSelectedTenant({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    this.props.history.push(\"/viewaudit\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  auditList() {\r\n    return this.state.audits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state.audits);\r\n    const columns = [\r\n      {\r\n        title: \"Type\",\r\n        dataIndex: \"type\",\r\n        key: \"type\",\r\n        fixed: \"left\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"type\"),\r\n      },\r\n      {\r\n        title: \"Tenant ID\",\r\n        dataIndex: \"tenantID\",\r\n        key: \"itenantID\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"tenantID\"),\r\n      },\r\n      {\r\n        title: \"Inst.\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"institution\"),\r\n      },\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"location\",\r\n        key: \"location\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"location\"),\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"date\"),\r\n      },\r\n      {\r\n        title: \"Audit Score\",\r\n        dataIndex: \"total_score\",\r\n        key: \"total_score\",\r\n        width: \"150\",\r\n        ...this.getColumnSearchProps(\"total_score\"),\r\n      },\r\n      {\r\n        title: \"View Audit\",\r\n        dataIndex: \"\",\r\n        key: \"x\",\r\n        fixed: \"right\",\r\n        width: \"20%\",\r\n        render: (record) => (\r\n          <div>\r\n            <Button onClick={() => this.onViewClick(record)}>View Audit</Button>\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.audits}\r\n          title={() => <div className=\"table-title\">Audits</div>}\r\n          scroll={{ x: 400, y: 300 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAuditList.propTypes = {\r\n  setSelectedTenant: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userID: state.auth.user.id,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  setSelectedTenant,\r\n  getTenants,\r\n  display,\r\n})(AuditList);\r\n"]},"metadata":{},"sourceType":"module"}