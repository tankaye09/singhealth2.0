{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\checklist\\\\ChecklistItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { Form, Row, Col } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChecklistItem = props3 => {\n  _s();\n\n  const [check, setCheck] = useState(false);\n  const [file, setFile] = useState(null);\n  const [note, setNote] = useState(\"\");\n  const [checklistItem, setChecklistItem] = useState({\n    question: props3.question,\n    point: check,\n    before_image: file,\n    after_image: null,\n    status: \"active\",\n    note: note\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        column: true,\n        xs: \"10\",\n        align: \"left\",\n        children: props3.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          checked: check,\n          onChange: () => {\n            props3.globalDispatch({\n              type: \"toggle\",\n              category: props3.title,\n              question: props3.question\n            });\n            setCheck(!check);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"8\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          xs: \"12\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 1,\n          value: note,\n          onChange: e => {\n            setNote(e.target.value); //console.log(note);\n            //setChecklistItem({...checklistItem,\"note\": note});\n            //console.log(checklistItem);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          children: /*#__PURE__*/_jsxDEV(Form.File, {\n            label: \"Upload photo\",\n            accept: \"image/*\",\n            value: file,\n            onChange: e => {\n              setFile(e.target.files[0]); //setChecklistItem({...checklistItem, \"before_image\": file})\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChecklistItem, \"JsjdcC3g1wbmj1eHsqSRdM55sIA=\");\n\n_c = ChecklistItem;\nexport default ChecklistItem;\n/*{\r\n  \"question\" : \"This is a test\",\r\n  \"point\" : true,\r\n  \"before_image\" : \"\",\r\n  \"after_image\" : \"\",\r\n  \"status\" : \"\",\r\n  \"note\" : \"\"\r\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ChecklistItem\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/checklist/ChecklistItem.js"],"names":["React","useState","useEffect","useReducer","Form","Row","Col","ChecklistItem","props3","check","setCheck","file","setFile","note","setNote","checklistItem","setChecklistItem","question","point","before_image","after_image","status","globalDispatch","type","category","title","e","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { Form, Row, Col } from \"antd\";\r\n\r\nconst ChecklistItem = (props3) => {\r\n  const [check, setCheck] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [note, setNote] = useState(\"\");\r\n\r\n  const [checklistItem, setChecklistItem] = useState({\r\n    question: props3.question,\r\n    point: check,\r\n    before_image: file,\r\n    after_image: null,\r\n    status: \"active\",\r\n    note: note,\r\n  });\r\n\r\n  return (\r\n    <div align=\"left\">\r\n      <Form.Group as={Row}>\r\n        <Form.Label column xs=\"10\" align=\"left\">\r\n          {props3.question}\r\n        </Form.Label>\r\n        <Col xs=\"2\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            checked={check}\r\n            onChange={() => {\r\n              props3.globalDispatch({\r\n                type: \"toggle\",\r\n                category: props3.title,\r\n                question: props3.question,\r\n              });\r\n              setCheck(!check);\r\n            }}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row}>\r\n        <Col xs=\"8\">\r\n          <Form.Label column xs=\"12\">\r\n            Comments\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={1}\r\n            value={note}\r\n            onChange={(e) => {\r\n              setNote(e.target.value);\r\n              //console.log(note);\r\n              //setChecklistItem({...checklistItem,\"note\": note});\r\n              //console.log(checklistItem);\r\n            }}\r\n          />\r\n        </Col>\r\n\r\n        <Col xs=\"4\">\r\n          <Form.Group as={Row}>\r\n            <Form.File\r\n              label=\"Upload photo\"\r\n              accept=\"image/*\"\r\n              value={file}\r\n              onChange={(e) => {\r\n                setFile(e.target.files[0]);\r\n                //setChecklistItem({...checklistItem, \"before_image\": file})\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Col>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChecklistItem;\r\n\r\n/*{\r\n  \"question\" : \"This is a test\",\r\n  \"point\" : true,\r\n  \"before_image\" : \"\",\r\n  \"after_image\" : \"\",\r\n  \"status\" : \"\",\r\n  \"note\" : \"\"\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}