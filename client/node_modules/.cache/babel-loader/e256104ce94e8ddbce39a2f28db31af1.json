{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(importJSON);\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse;\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\nconst subcategories = Fb.map((cat, catIndex) => cat.subcategories.map((subCat, subCatIndex) => subCat.name));\n\nclass Checklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentWillMount = () => {\n      this.selectedCheckboxes = new Set();\n    };\n\n    this.toggleCheckbox = label => {\n      if (this.selectedCheckboxes.has(label)) {\n        this.selectedCheckboxes.delete(label);\n      } else {\n        this.selectedCheckboxes.add(label);\n      }\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const checkbox of this.selectedCheckboxes) {\n        console.log(checkbox, \"is selected.\");\n      }\n    };\n\n    this.createprofCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label,\n      handleCheckboxChange: this.toggleCheckbox,\n      onChange: e => this.handleprofCheckCount(e)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n\n    this.state = {\n      checked: false,\n      profcount: 0\n    };\n\n    this.handleprofCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.profcount++, this.logCount);\n      } else {\n        this.setState(state => state.profcount--, this.logCount);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: Fb.map((cat, catIndex) => {\n        return /*#__PURE__*/_jsxDEV(Collapse, {\n          defaultActiveKey: [\"1\"],\n          children: /*#__PURE__*/_jsxDEV(Panel, {\n            header: /*#__PURE__*/_jsxDEV(\"div\", {\n              catIndex: catIndex,\n              children: cat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this),\n            className: \"bg-orange\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              catIndex: catIndex,\n              children: cat.subcategories.map((subCat, subCatIndex) => {\n                return /*#__PURE__*/_jsxDEV(Panel, {\n                  header: /*#__PURE__*/_jsxDEV(\"div\", {\n                    subCatIndex: subCatIndex,\n                    children: subCat.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this),\n                  className: \"bg-orange\",\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    dataSource: [\"Shop is open and ready to service patients/visitors according to operating hours.\", \"Staff Attendance: adequate staff for peak and non-peak hours.\", \"At least one clearly assigned person in-charge on site.\"],\n                    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"create-audit-row\",\n                        children: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: this.createprofCheckbox()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this)\n                }, subCatIndex + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, catIndex + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Checklist;","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","React","Component","importJSON","console","log","Fb","fb","Panel","text","subcategories","map","cat","catIndex","subCat","subCatIndex","name","Checklist","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","createprofCheckbox","e","handleprofCheckCount","state","checked","profcount","type","target","setState","logCount","render","item"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nconsole.log(importJSON);\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\nconst subcategories = Fb.map((cat, catIndex) =>\r\n  cat.subcategories.map((subCat, subCatIndex) => subCat.name)\r\n);\r\n\r\nclass Checklist extends Component {\r\n  componentWillMount = () => {\r\n    this.selectedCheckboxes = new Set();\r\n  };\r\n\r\n  toggleCheckbox = (label) => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = (formSubmitEvent) => {\r\n    formSubmitEvent.preventDefault();\r\n\r\n    for (const checkbox of this.selectedCheckboxes) {\r\n      console.log(checkbox, \"is selected.\");\r\n    }\r\n  };\r\n\r\n  createprofCheckbox = (label) => (\r\n    <Checkbox\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleprofCheckCount(e)}\r\n    />\r\n  );\r\n\r\n  state = {\r\n    checked: false,\r\n    profcount: 0,\r\n  };\r\n  handleprofCheckCount = (e) => {\r\n    const { checked, type } = e.target;\r\n    if (type === \"checkbox\" && checked === true) {\r\n      this.setState((state) => state.profcount++, this.logCount);\r\n    } else {\r\n      this.setState((state) => state.profcount--, this.logCount);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"panels\">\r\n        {Fb.map((cat, catIndex) => {\r\n          return (\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      <Panel\r\n                        header={\r\n                          <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                        }\r\n                        key={subCatIndex + 1}\r\n                        className=\"bg-orange\"\r\n                      >\r\n                        <List\r\n                          dataSource={[\r\n                            \"Shop is open and ready to service patients/visitors according to operating hours.\",\r\n                            \"Staff Attendance: adequate staff for peak and non-peak hours.\",\r\n                            \"At least one clearly assigned person in-charge on site.\",\r\n                          ]}\r\n                          renderItem={(item) => (\r\n                            <List.Item>\r\n                              <div className=\"create-audit-row\">{item}</div>\r\n                              <div>{this.createprofCheckbox()}</div>\r\n                            </List.Item>\r\n                          )}\r\n                        />\r\n                      </Panel>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}