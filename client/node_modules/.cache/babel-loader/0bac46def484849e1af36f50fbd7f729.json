{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOverflowOptions = getOverflowOptions;\nexports[\"default\"] = getPlacements;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _placements = require(\"rc-tooltip/lib/placements\");\n\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\n\nfunction getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\n\nfunction getPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,\n      autoAdjustOverflow = config.autoAdjustOverflow;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, placementMap[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, _placements.placements[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/node_modules/antd/lib/tooltip/placements.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","getOverflowOptions","getPlacements","_extends2","_placements","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","autoAdjustOverflow","config","_config$arrowWidth","arrowWidth","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","keys","forEach","key","arrowPointAtCenter","overflow","placements","ignoreShake"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.getOverflowOptions = getOverflowOptions;\r\nexports[\"default\"] = getPlacements;\r\n\r\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\r\n\r\nvar _placements = require(\"rc-tooltip/lib/placements\");\r\n\r\nvar autoAdjustOverflowEnabled = {\r\n  adjustX: 1,\r\n  adjustY: 1\r\n};\r\nvar autoAdjustOverflowDisabled = {\r\n  adjustX: 0,\r\n  adjustY: 0\r\n};\r\nvar targetOffset = [0, 0];\r\n\r\nfunction getOverflowOptions(autoAdjustOverflow) {\r\n  if (typeof autoAdjustOverflow === 'boolean') {\r\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\r\n  }\r\n\r\n  return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\r\n}\r\n\r\nfunction getPlacements(config) {\r\n  var _config$arrowWidth = config.arrowWidth,\r\n      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,\r\n      _config$horizontalArr = config.horizontalArrowShift,\r\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\r\n      _config$verticalArrow = config.verticalArrowShift,\r\n      verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow,\r\n      autoAdjustOverflow = config.autoAdjustOverflow;\r\n  var placementMap = {\r\n    left: {\r\n      points: ['cr', 'cl'],\r\n      offset: [-4, 0]\r\n    },\r\n    right: {\r\n      points: ['cl', 'cr'],\r\n      offset: [4, 0]\r\n    },\r\n    top: {\r\n      points: ['bc', 'tc'],\r\n      offset: [0, -4]\r\n    },\r\n    bottom: {\r\n      points: ['tc', 'bc'],\r\n      offset: [0, 4]\r\n    },\r\n    topLeft: {\r\n      points: ['bl', 'tc'],\r\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\r\n    },\r\n    leftTop: {\r\n      points: ['tr', 'cl'],\r\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\r\n    },\r\n    topRight: {\r\n      points: ['br', 'tc'],\r\n      offset: [horizontalArrowShift + arrowWidth, -4]\r\n    },\r\n    rightTop: {\r\n      points: ['tl', 'cr'],\r\n      offset: [4, -(verticalArrowShift + arrowWidth)]\r\n    },\r\n    bottomRight: {\r\n      points: ['tr', 'bc'],\r\n      offset: [horizontalArrowShift + arrowWidth, 4]\r\n    },\r\n    rightBottom: {\r\n      points: ['bl', 'cr'],\r\n      offset: [4, verticalArrowShift + arrowWidth]\r\n    },\r\n    bottomLeft: {\r\n      points: ['tl', 'bc'],\r\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\r\n    },\r\n    leftBottom: {\r\n      points: ['br', 'cl'],\r\n      offset: [-4, verticalArrowShift + arrowWidth]\r\n    }\r\n  };\r\n  Object.keys(placementMap).forEach(function (key) {\r\n    placementMap[key] = config.arrowPointAtCenter ? (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, placementMap[key]), {\r\n      overflow: getOverflowOptions(autoAdjustOverflow),\r\n      targetOffset: targetOffset\r\n    }) : (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, _placements.placements[key]), {\r\n      overflow: getOverflowOptions(autoAdjustOverflow)\r\n    });\r\n    placementMap[key].ignoreShake = true;\r\n  });\r\n  return placementMap;\r\n}"]},"metadata":{},"sourceType":"script"}