{"ast":null,"code":"import { getAllByPlaceholderText } from \"@testing-library/dom\";\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\nimport { sendEmail } from \"./authActions\";\nimport User from \"../../../models/User\";\nimport Tenant from \"../../../models/Tenant\";\nexport const submit = data => dispatch => {\n  console.log(\"submit\", data);\n  axios.post(\"/api/audits/add\", data).then(() => {\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Audit Created\"\n    }); // const Tenant = require(\"../../../models/Tenant\");\n\n    Tenant.findOne({\n      _id: data.tenantID\n    }).then(tenant => {\n      console.log(\"tenant in findone: \", tenant);\n      User.findOne({\n        _id: tenant._id\n      }).then(user => {\n        console.log(\"user in findone: \", user);\n        sendEmail(user);\n      });\n    });\n  }).catch(error => {\n    console.log(\"in the error\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n};\nexport const display = onDataReceived => dispatch => {\n  axios.get(\"/api/audits\").then(response => {\n    const data = response.data; // console.log(data);\n    // console.log(data.length);\n\n    onDataReceived(data);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const updateAudit = data => {\n  console.log(data);\n  axios.put(\"/api/audits/update\", data).catch(error => {\n    console.log(error);\n  });\n};\nexport const deleteAudit = data => {\n  console.log(data);\n  axios.post(\"/api/audits\", data).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/actions/auditActions.js"],"names":["getAllByPlaceholderText","axios","GET_ERRORS","GET_MESSAGE","sendEmail","User","Tenant","submit","data","dispatch","console","log","post","then","type","payload","findOne","_id","tenantID","tenant","user","catch","error","response","display","onDataReceived","get","err","updateAudit","put","deleteAudit"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,SAAxC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACAP,EAAAA,KAAK,CACFW,IADH,CACQ,iBADR,EAC2BJ,IAD3B,EAEGK,IAFH,CAEQ,MAAM;AACVJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR,CADU,CAKV;;AACAT,IAAAA,MAAM,CAACU,OAAP,CAAe;AAAEC,MAAAA,GAAG,EAAET,IAAI,CAACU;AAAZ,KAAf,EAAuCL,IAAvC,CAA6CM,MAAD,IAAY;AACtDT,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCQ,MAAnC;AACAd,MAAAA,IAAI,CAACW,OAAL,CAAa;AAAEC,QAAAA,GAAG,EAAEE,MAAM,CAACF;AAAd,OAAb,EAAkCJ,IAAlC,CAAwCO,IAAD,IAAU;AAC/CV,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,IAAjC;AACAhB,QAAAA,SAAS,CAACgB,IAAD,CAAT;AACD,OAHD;AAID,KAND;AAOD,GAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAW;AAChBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAef;AAFjB,KAAD,CAAR;AAID,GAtBH;AAuBD,CAzBM;AA2BP,OAAO,MAAMgB,OAAO,GAAIC,cAAD,IAAqBhB,QAAD,IAAc;AACvDR,EAAAA,KAAK,CACFyB,GADH,CACO,aADP,EAEGb,IAFH,CAESU,QAAD,IAAc;AAClB,UAAMf,IAAI,GAAGe,QAAQ,CAACf,IAAtB,CADkB,CAElB;AACA;;AACAiB,IAAAA,cAAc,CAACjB,IAAD,CAAd;AACD,GAPH,EAQGa,KARH,CAQUM,GAAD,IACLlB,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEZ,UADC;AAEPa,IAAAA,OAAO,EAAEY,GAAG,CAACJ,QAAJ,CAAaf;AAFf,GAAD,CATZ;AAcD,CAfM;AAiBP,OAAO,MAAMoB,WAAW,GAAIpB,IAAD,IAAU;AACnCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,EAAAA,KAAK,CAAC4B,GAAN,CAAU,oBAAV,EAAgCrB,IAAhC,EAAsCa,KAAtC,CAA6CC,KAAD,IAAW;AACrDZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,GAFD;AAGD,CALM;AAOP,OAAO,MAAMQ,WAAW,GAAItB,IAAD,IAAU;AACnCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,EAAAA,KAAK,CAACW,IAAN,CAAW,aAAX,EAA0BJ,IAA1B,EAAgCa,KAAhC,CAAuCC,KAAD,IAAW;AAC/CZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,GAFD;AAGD,CALM","sourcesContent":["import { getAllByPlaceholderText } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\r\nimport { sendEmail } from \"./authActions\";\r\nimport User from \"../../../models/User\";\r\nimport Tenant from \"../../../models/Tenant\";\r\n\r\nexport const submit = (data) => (dispatch) => {\r\n  console.log(\"submit\", data);\r\n  axios\r\n    .post(\"/api/audits/add\", data)\r\n    .then(() => {\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Audit Created\",\r\n      });\r\n      // const Tenant = require(\"../../../models/Tenant\");\r\n      Tenant.findOne({ _id: data.tenantID }).then((tenant) => {\r\n        console.log(\"tenant in findone: \", tenant);\r\n        User.findOne({ _id: tenant._id }).then((user) => {\r\n          console.log(\"user in findone: \", user);\r\n          sendEmail(user);\r\n        });\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"in the error\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const display = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/audits\")\r\n    .then((response) => {\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // console.log(data.length);\r\n      onDataReceived(data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAudit = (data) => {\r\n  console.log(data);\r\n  axios.put(\"/api/audits/update\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\nexport const deleteAudit = (data) => {\r\n  console.log(data);\r\n  axios.post(\"/api/audits\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}