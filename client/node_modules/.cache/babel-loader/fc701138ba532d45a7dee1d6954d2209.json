{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\private-route\\\\TenantRoute.js\";\nimport React, { Component } from \"react\";\nimport { Link, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TenantRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => auth.isAuthenticated === true ? auth.user.usertype === \"tenant\" ?\n  /*#__PURE__*/\n  // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\n  _jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sorry, you are not authorised to view this page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = TenantRoute;\nTenantRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(TenantRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"TenantRoute\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/private-route/TenantRoute.js"],"names":["React","Component","Link","Route","Redirect","connect","PropTypes","TenantRoute","component","auth","rest","props","isAuthenticated","user","usertype","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEP,SAAb;AAAwBQ,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,kBAClB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACNF,IAAI,CAACG,eAAL,KAAyB,IAAzB,GACEH,IAAI,CAACI,IAAL,CAAUC,QAAV,KAAuB,QAAvB;AAAA;AAAoC;AAClC,UAAC,SAAD,OAAeH;AAAf;AAAA;AAAA;AAAA;AAAA,UADF,gBAGE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAJJ,gBASE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAZN;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMJ,W;AAmBNA,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,IAAI,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AADD,CAAxB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADsB,CAAZ,CAAxB;;AAGA,eAAeJ,OAAO,CAACa,eAAD,CAAP,CAAyBX,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TenantRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        auth.user.usertype === \"tenant\" ? ( // check for tenant usertype, maybe can change such that both tenant and staff can view tenant pages\r\n          <Component {...props} />\r\n        ) : (\r\n          <div>\r\n            <h1>Sorry, you are not authorised to view this page</h1>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nTenantRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(TenantRoute);\r\n"]},"metadata":{},"sourceType":"module"}