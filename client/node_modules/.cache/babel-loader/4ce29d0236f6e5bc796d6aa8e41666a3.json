{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox, Button } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { createRegularExpressionLiteral } from \"typescript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse; // TODO: Take score from json file => Update the score, replace the json file\n\nclass Checklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentWillMount = () => {\n      this.selectedCheckboxes = new Set();\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const checkbox of this.selectedCheckboxes) {\n        console.log(checkbox, \"is selected.\");\n      }\n    };\n\n    this.state = {\n      checked: false,\n      cat0count: 0,\n      // count for Professionalism & Staff Hygiene (10%)\n      cat1count: 0,\n      // count for Housekeeping & General Cleanliness (20%)\n      cat2count: 0,\n      cat3count: 0,\n      cat4count: 0\n    };\n  }\n\n  // toggleCheckbox = (label) => {\n  //   if (this.selectedCheckboxes.has(label)) {\n  //     this.selectedCheckboxes.delete(label);\n  //   } else {\n  //     this.selectedCheckboxes.add(label);\n  //   }\n  // };\n  // createprofCheckbox = (label) => (\n  //   <Checkbox\n  //     label={label}\n  //     handleCheckboxChange={this.toggleCheckbox}\n  //     key={label}\n  //     onChange={(e) => this.handleCat0Count(e)}\n  //   />\n  // );\n  // handleCat0Count = (e) => {\n  //   const { checked, type } = e.target;\n  //   if (type === \"checkbox\" && checked === true) {\n  //     this.setState((state) => state.cat0count++, this.logCount);\n  //   } else {\n  //     this.setState((state) => state.cat0count--, this.logCount);\n  //   }\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [Fb.map((cat, catIndex) => {\n        var catScore = cat.score;\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 29\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"create-audit-row\",\n                              children: item\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 88,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: this.createprofCheckbox()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 89,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 87,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 27\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", catScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.cat0count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-button\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Checklist;","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","Button","React","Component","importJSON","createRegularExpressionLiteral","Fb","fb","Panel","Checklist","componentWillMount","selectedCheckboxes","Set","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","console","log","state","checked","cat0count","cat1count","cat2count","cat3count","cat4count","render","map","cat","catIndex","catScore","score","name","subcategories","subCat","subCatIndex","questions","item","createprofCheckbox"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport { createRegularExpressionLiteral } from \"typescript\";\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass Checklist extends Component {\r\n  componentWillMount = () => {\r\n    this.selectedCheckboxes = new Set();\r\n  };\r\n\r\n  handleFormSubmit = (formSubmitEvent) => {\r\n    formSubmitEvent.preventDefault();\r\n\r\n    for (const checkbox of this.selectedCheckboxes) {\r\n      console.log(checkbox, \"is selected.\");\r\n    }\r\n  };\r\n\r\n  state = {\r\n    checked: false,\r\n    cat0count: 0, // count for Professionalism & Staff Hygiene (10%)\r\n    cat1count: 0, // count for Housekeeping & General Cleanliness (20%)\r\n    cat2count: 0,\r\n    cat3count: 0,\r\n    cat4count: 0,\r\n  };\r\n\r\n  // toggleCheckbox = (label) => {\r\n  //   if (this.selectedCheckboxes.has(label)) {\r\n  //     this.selectedCheckboxes.delete(label);\r\n  //   } else {\r\n  //     this.selectedCheckboxes.add(label);\r\n  //   }\r\n  // };\r\n\r\n  // createprofCheckbox = (label) => (\r\n  //   <Checkbox\r\n  //     label={label}\r\n  //     handleCheckboxChange={this.toggleCheckbox}\r\n  //     key={label}\r\n  //     onChange={(e) => this.handleCat0Count(e)}\r\n  //   />\r\n  // );\r\n\r\n  // handleCat0Count = (e) => {\r\n  //   const { checked, type } = e.target;\r\n  //   if (type === \"checkbox\" && checked === true) {\r\n  //     this.setState((state) => state.cat0count++, this.logCount);\r\n  //   } else {\r\n  //     this.setState((state) => state.cat0count--, this.logCount);\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panels\">\r\n        {Fb.map((cat, catIndex) => {\r\n          var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"create-audit-row\">{item}</div>\r\n                                <div>{this.createprofCheckbox()}</div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {catScore}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n        <div>{this.state.cat0count}</div>\r\n        <Button className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          SUBMIT\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}