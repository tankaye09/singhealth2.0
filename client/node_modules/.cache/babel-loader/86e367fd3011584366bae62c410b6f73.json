{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Footer,\n  Sider,\n  Content\n} = Layout;\n\nclass ResetPassword extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to SingHealth Audit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A new password will be sent to your email address if your email address is valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onFinish: this.onFinish,\n          name: \"normal_login\",\n          className: \"login-register-form\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your Email!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 25\n              }, this),\n              placeholder: \"Email\",\n              onChange: this.onChange,\n              value: this.state.email,\n              error: errors.email,\n              id: \"email\",\n              type: \"email\",\n              className: classnames(\"\", {\n                invalid: errors.email || errors.emailnotfound\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your Password!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this),\n              placeholder: \"Password\",\n              onChange: this.onChange,\n              value: this.state.password,\n              error: errors.password,\n              id: \"password\",\n              type: \"password\",\n              className: classnames(\"\", {\n                invalid: errors.password || errors.passwordincorrect\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"usertypebool\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: this.onCheckboxChange,\n              value: this.state.usertypebool,\n              error: errors.usertypebool,\n              id: \"usertypebool\",\n              children: \"Singhealth Staff Member?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"login-button\",\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-register-form-button\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), \"New staff member? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Register\",\n              children: \"Register here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n          sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n          render: \"explicit\",\n          onloadCallback: console.log(\"onloadCallback\"),\n          verifyCallback: this.verifyCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nResetPassword.propTypes = {};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ResetPassword);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/ResetPassword.js"],"names":["React","Component","Layout","Form","Input","Button","connect","Link","withRouter","Header","Footer","Sider","Content","ResetPassword","render","onFinish","required","message","onChange","state","email","errors","classnames","invalid","emailnotfound","password","passwordincorrect","onCheckboxChange","usertypebool","console","log","verifyCallback","propTypes","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA4C,MAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,IAAqCV,MAA3C;;AAEA,MAAMW,aAAN,SAA4BZ,SAA5B,CAAsC;AACpCa,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,OAAD;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAE,KAAKC,QADjB;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,SAAS,EAAC,qBAHZ;AAAA,kCAKE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAE,CAAC;AAAEC,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAFT;AAAA,mCAIE,QAAC,KAAD;AACE,cAAA,MAAM,eAAE,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADV;AAEE,cAAA,WAAW,EAAC,OAFd;AAGE,cAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,cAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAJpB;AAKE,cAAA,KAAK,EAAEC,MAAM,CAACD,KALhB;AAME,cAAA,EAAE,EAAC,OANL;AAOE,cAAA,IAAI,EAAC,OAPP;AAQE,cAAA,SAAS,EAAEE,UAAU,CAAC,EAAD,EAAK;AACxBC,gBAAAA,OAAO,EAAEF,MAAM,CAACD,KAAP,IAAgBC,MAAM,CAACG;AADR,eAAL;AARvB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBALF,eAuBE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAE,CACL;AAAER,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,OAAO,EAAE;AAA3B,aADK,CAFT;AAAA,mCAME,QAAC,KAAD;AACE,cAAA,MAAM,eAAE,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADV;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,cAAA,KAAK,EAAE,KAAKC,KAAL,CAAWM,QAJpB;AAKE,cAAA,KAAK,EAAEJ,MAAM,CAACI,QALhB;AAME,cAAA,EAAE,EAAC,UANL;AAOE,cAAA,IAAI,EAAC,UAPP;AAQE,cAAA,SAAS,EAAEH,UAAU,CAAC,EAAD,EAAK;AACxBC,gBAAAA,OAAO,EAAEF,MAAM,CAACI,QAAP,IAAmBJ,MAAM,CAACK;AADX,eAAL;AARvB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBAvBF,eA2CE,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,IAAI,EAAC,cAAhB;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,QAAQ,EAAE,KAAKC,gBADjB;AAEE,cAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,YAFpB;AAGE,cAAA,KAAK,EAAEP,MAAM,CAACO,YAHhB;AAIE,cAAA,EAAE,EAAC,cAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3CF,eAsDE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,EAAE,EAAC,cADL;AAEE,cAAA,IAAI,EAAC,SAFP;AAGE,cAAA,QAAQ,EAAC,QAHX;AAIE,cAAA,SAAS,EAAC,4BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,qCASoB,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAmEE,QAAC,SAAD;AACE,UAAA,OAAO,EAAC,0CADV;AAEE,UAAA,MAAM,EAAC,UAFT;AAGE,UAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAHlB;AAIE,UAAA,cAAc,EAAE,KAAKC;AAJvB;AAAA;AAAA;AAAA;AAAA,gBAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmFD;;AArFmC;;AAwFtClB,aAAa,CAACmB,SAAd,GAA0B,EAA1B;;AACA,MAAMC,eAAe,GAAId,KAAD,KAAY,EAAZ,CAAxB;;AACA,eAAeb,OAAO,CAAC2B,eAAD,EAAkB,EAAlB,CAAP,CAA6BpB,aAA7B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Layout, Form, Input, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass ResetPassword extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Welcome to SingHealth Audit</h2>\r\n        <p>\r\n          A new password will be sent to your email address if your email\r\n          address is valid\r\n        </p>\r\n        <Content>\r\n          <Form\r\n            onFinish={this.onFinish}\r\n            name=\"normal_login\"\r\n            className=\"login-register-form\"\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n                error={errors.email}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                className={classnames(\"\", {\r\n                  invalid: errors.email || errors.emailnotfound,\r\n                })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Please input your Password!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Password\"\r\n                onChange={this.onChange}\r\n                value={this.state.password}\r\n                error={errors.password}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                className={classnames(\"\", {\r\n                  invalid: errors.password || errors.passwordincorrect,\r\n                })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"usertypebool\">\r\n              <Checkbox\r\n                onChange={this.onCheckboxChange}\r\n                value={this.state.usertypebool}\r\n                error={errors.usertypebool}\r\n                id=\"usertypebool\"\r\n              >\r\n                Singhealth Staff Member?\r\n              </Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                id=\"login-button\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-register-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n              New staff member? <Link to=\"/Register\">Register here!</Link>\r\n            </Form.Item>\r\n          </Form>\r\n          <Recaptcha\r\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n            render=\"explicit\"\r\n            onloadCallback={console.log(\"onloadCallback\")}\r\n            verifyCallback={this.verifyCallback}\r\n          />\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {})(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}