{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\"; // Get Tenants\n\nexport const getTenants = onDataReceived => dispatch => {\n  console.log(\"arrived\");\n  axios.get(\"/api/tenants\").then(response => {\n    // console.log(\"response is:\", response.data);\n    onDataReceived(response.data);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }) // console.log(\"err\")\n  );\n};\nexport const getTenant = onDataReceived => {\n  axios.get(\"/api/tenants\").then(response => {\n    // console.log(\"response is:\", response.data);\n    onDataReceived(response.data);\n  }).catch(() => {\n    alert(\"Error\");\n  });\n};\nexport const delTenant = data => dispatch => {\n  axios.delete(\"/api/tenants/delete\", data).then(() => dispatch({\n    type: GET_MESSAGE,\n    payload: \"Tenant Deleted\"\n  })).catch(error => {\n    console.log(\"in the error\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  });\n}; // Update tenantInfo in store with the row selected tenantInfo\n\nexport const setSelectedTenant = data => {\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: data\n  };\n};","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/actions/tenantActions.js"],"names":["axios","GET_ERRORS","SET_SELECTED_TENANT","GET_MESSAGE","getTenants","onDataReceived","dispatch","console","log","get","then","response","data","catch","err","type","payload","getTenant","alert","delTenant","delete","error","setSelectedTenant"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,WAA1C,QAA6D,SAA7D,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,cAAD,IAAqBC,QAAD,IAAc;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAR,EAAAA,KAAK,CACFS,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB;AACAN,IAAAA,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAd;AACD,GALH,EAMGC,KANH,CAOKC,GAAD,IACER,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,UADC;AAEPe,IAAAA,OAAO,EAAEF,GAAG,CAACH,QAAJ,CAAaC;AAFf,GAAD,CARd,CAYI;AAZJ;AAcD,CAhBM;AAkBP,OAAO,MAAMK,SAAS,GAAIZ,cAAD,IAAoB;AAC3CL,EAAAA,KAAK,CACFS,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB;AACAN,IAAAA,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAd;AACD,GALH,EAMGC,KANH,CAMS,MAAM;AACXK,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GARH;AASD,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAIP,IAAD,IAAWN,QAAD,IAAc;AAC/CN,EAAAA,KAAK,CACFoB,MADH,CACU,qBADV,EACiCR,IADjC,EAEGF,IAFH,CAEQ,MACJJ,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEZ,WADC;AAEPa,IAAAA,OAAO,EAAE;AAFF,GAAD,CAHZ,EAQGH,KARH,CAQUQ,KAAD,IAAW;AAChBd,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAF,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEK,KAAK,CAACV,QAAN,CAAeC;AAFjB,KAAD,CAAR;AAID,GAdH;AAeD,CAhBM,C,CAkBP;;AACA,OAAO,MAAMU,iBAAiB,GAAIV,IAAD,IAAU;AACzC,SAAO;AACLG,IAAAA,IAAI,EAAEb,mBADD;AAELc,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, SET_SELECTED_TENANT, GET_MESSAGE } from \"./types\";\r\n\r\n// Get Tenants\r\nexport const getTenants = (onDataReceived) => (dispatch) => {\r\n  console.log(\"arrived\");\r\n  axios\r\n    .get(\"/api/tenants\")\r\n    .then((response) => {\r\n      // console.log(\"response is:\", response.data);\r\n      onDataReceived(response.data);\r\n    })\r\n    .catch(\r\n      (err) =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data,\r\n        })\r\n      // console.log(\"err\")\r\n    );\r\n};\r\n\r\nexport const getTenant = (onDataReceived) => {\r\n  axios\r\n    .get(\"/api/tenants\")\r\n    .then((response) => {\r\n      // console.log(\"response is:\", response.data);\r\n      onDataReceived(response.data);\r\n    })\r\n    .catch(() => {\r\n      alert(\"Error\");\r\n    });\r\n};\r\n\r\nexport const delTenant = (data) => (dispatch) => {\r\n  axios\r\n    .delete(\"/api/tenants/delete\", data)\r\n    .then(() =>\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Tenant Deleted\",\r\n      })\r\n    )\r\n    .catch((error) => {\r\n      console.log(\"in the error\");\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n}\r\n\r\n// Update tenantInfo in store with the row selected tenantInfo\r\nexport const setSelectedTenant = (data) => {\r\n  return {\r\n    type: SET_SELECTED_TENANT,\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}