{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Directory.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Table } from \"antd\";\nimport { getData } from \"../data/StoreData.ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nexport default class Directory extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    //code runs before the page loads\n    axios.get(\"http://localhost:5000/api/tenants\").then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username //set username as the first username in the database\n\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table // columns={columns}\n      , {\n        dataSource: data,\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"CGH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 24\n        }, this),\n        size: \"middle\",\n        pagination: {\n          position: \"bottomLeft\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"Store Name\",\n          dataIndex: \"name\",\n          render: (text, record) => /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => window.open(record.image, \"_blank\"),\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, \"name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Location\",\n          dataIndex: \"location\"\n        }, \"location\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Terms\",\n          dataIndex: \"terms\"\n        }, \"terms\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Expiry\",\n          dataIndex: \"expiry\"\n        }, \"expiry\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const columns = [\n//     {\n//         title: 'Store Name',\n//         dataIndex: 'name',\n//         key: 'name',\n//         render: (text, record) => <a>\n//             <td onClick={() => window.open(text, \"_blank\")} /> {text} </a>,\n//     },\n//     {\n//         title: 'Location',\n//         dataIndex: 'location',\n//         key: 'location',\n//     },\n//     {\n//         title: 'Terms',\n//         dataIndex: 'terms',\n//         key: 'terms',\n//     },\n//     {\n//         title: 'Expiry',\n//         dataIndex: 'expiry',\n//         key: 'expiry',\n//     },\n// ];\n\nconst data = getData(\"\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/Directory.js"],"names":["React","Component","axios","Table","getData","Column","ColumnGroup","Directory","constructor","props","componentDidMount","get","then","response","data","length","setState","users","map","user","username","render","position","text","record","window","open","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BH,KAAhC;AAEA,eAAe,MAAMI,SAAN,SAAwBN,SAAxB,CAAkC;AAC/CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAqDC,QAAD,IAAc;AAChE,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEJ,QAAQ,CAACC,IAAT,CAAcI,GAAd,CAAmBC,IAAD,IAAUA,IAAI,CAACC,QAAjC,CADK;AAEZA,UAAAA,QAAQ,EAAEP,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBM,QAFf,CAEyB;;AAFzB,SAAd;AAID;AACF,KAPD;AAQD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,6BACE,QAAC,KAAD,CACE;AADF;AAEE,QAAA,UAAU,EAAEP,IAFd;AAGE,QAAA,KAAK,EAAE,mBAAM;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHf;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,UAAU,EAAE;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SALd;AAAA,gCAOE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,YADR;AAEE,UAAA,SAAS,EAAC,MAFZ;AAIE,UAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBACN;AAAA,mCACE;AAAI,cAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,KAAnB,EAA0B,QAA1B,CAAnB;AAAA,wBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALJ,WAGM,MAHN;AAAA;AAAA;AAAA;AAAA,gBAPF,eAmBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAyB,UAAA,SAAS,EAAC;AAAnC,WAAkD,UAAlD;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,SAAS,EAAC;AAAhC,WAA4C,OAA5C;AAAA;AAAA;AAAA;AAAA,gBApBF,eAqBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,SAAS,EAAC;AAAjC,WAA8C,QAA9C;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA7C8C,C,CAgDjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMT,IAAI,GAAGV,OAAO,CAAC,EAAD,CAApB","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\nimport { getData } from \"../data/StoreData.ts\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nexport default class Directory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //code runs before the page loads\r\n    axios.get(\"http://localhost:5000/api/tenants\").then((response) => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          users: response.data.map((user) => user.username),\r\n          username: response.data[0].username, //set username as the first username in the database\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"table\">\r\n        <Table\r\n          // columns={columns}\r\n          dataSource={data}\r\n          title={() => <div className=\"table-title\">CGH</div>}\r\n          size=\"middle\"\r\n          pagination={{ position: \"bottomLeft\" }}\r\n        >\r\n          <Column\r\n            title=\"Store Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text, record) => (\r\n              <a>\r\n                <td onClick={() => window.open(record.image, \"_blank\")}>\r\n                  {text}\r\n                </td>\r\n              </a>\r\n            )}\r\n          />\r\n          <Column title=\"Location\" dataIndex=\"location\" key=\"location\" />\r\n          <Column title=\"Terms\" dataIndex=\"terms\" key=\"terms\" />\r\n          <Column title=\"Expiry\" dataIndex=\"expiry\" key=\"expiry\" />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const columns = [\r\n//     {\r\n//         title: 'Store Name',\r\n//         dataIndex: 'name',\r\n//         key: 'name',\r\n//         render: (text, record) => <a>\r\n//             <td onClick={() => window.open(text, \"_blank\")} /> {text} </a>,\r\n//     },\r\n//     {\r\n//         title: 'Location',\r\n//         dataIndex: 'location',\r\n//         key: 'location',\r\n//     },\r\n//     {\r\n//         title: 'Terms',\r\n//         dataIndex: 'terms',\r\n//         key: 'terms',\r\n//     },\r\n//     {\r\n//         title: 'Expiry',\r\n//         dataIndex: 'expiry',\r\n//         key: 'expiry',\r\n//     },\r\n// ];\r\n\r\nconst data = getData(\"\");\r\n"]},"metadata":{},"sourceType":"module"}