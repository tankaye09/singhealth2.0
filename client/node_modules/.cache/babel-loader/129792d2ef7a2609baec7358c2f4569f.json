{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ViewAudit.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Progress, Image, Input, Comment, Form, Button, Row, Col, Card } from \"antd\";\nimport dateformat from \"dateformat\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { display, updateAudit } from \"../actions/auditActions.js\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nclass ViewAudit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: \"\",\n      audit: \"\",\n      total_score: \"\",\n      tenantID: \"\",\n      auditor: \"auditor\",\n      // auditorComments: [\"Bla\", \"blabla\"],\n      // tenantComments: [\"Response\", \"response\"],\n      comment: \"\",\n      image: \"\",\n      date: \"\",\n      rectifyDate: \"\",\n      catCounts: \"\",\n      type: \"\",\n      decodedImage: \"\",\n      newComment: \"\"\n    };\n\n    this.onChange = value => {\n      console.log(value.Text);\n      console.log(this.state.newComment);\n    };\n\n    this.newComment = values => {\n      // console.log(values.nativeEvent.explicitOriginalTarget.value);\n      this.setState({\n        newComment: [{\n          content: values.nativeEvent.explicitOriginalTarget.value,\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\n          author: \"auditor\"\n        }]\n      }); // console.log(this.state.newComment)\n    };\n\n    this.submitComment = () => {\n      var tempArray = this.state.comment;\n      console.log(tempArray);\n      tempArray.push(this.state.newComment[0]);\n      console.log(tempArray);\n      this.setState({\n        comment: tempArray\n      });\n      console.log(this.state.comment);\n      this.update();\n    };\n\n    this.update = () => {\n      console.log(this.state);\n      updateAudit({\n        _id: this.props.tenantInfo.record._id,\n        type: this.props.tenantInfo.record.type,\n        catCounts: this.props.tenantInfo.record.catCounts,\n        total_score: this.props.tenantInfo.record.total_score,\n        image: this.props.tenantInfo.record.image,\n        date: this.props.tenantInfo.record.date,\n        comment: this.state.newComment,\n        location: this.props.tenantInfo.record.location,\n        tenantID: this.props.tenantInfo.record.tenantID\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      _id: this.props.tenantInfo.record._id,\n      total_score: this.props.tenantInfo.record.total_score,\n      tenantID: this.props.tenantInfo.record.tenantID,\n      comment: this.props.tenantInfo.record.comment,\n      image: this.props.tenantInfo.record.image,\n      date: this.props.tenantInfo.record.date,\n      rectifyDate: this.props.tenantInfo.record.rectifyDate,\n      catCounts: this.props.tenantInfo.record.catCounts,\n      type: this.props.tenantInfo.record.type\n    });\n    console.log(this.state);\n  }\n\n  displayComments() {\n    var output = [];\n    var Comm = [];\n\n    for (var i = 0; i < Math.max(this.state.comment.length, this.state.image === null ? 0 : this.state.image.length); i++) {\n      Comm.push(this.state.comment[i]);\n\n      if (this.state.image != null && this.state.image[i] != null) {\n        Comm.push(this.state.image[i]);\n      }\n    }\n\n    Comm = Comm.sort((a, b) => a.date > b.date);\n    console.log(Comm);\n\n    for (var j = 0; j < Comm.length; j++) {\n      if (Comm[j].content) {\n        output.push( /*#__PURE__*/_jsxDEV(Card, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: Comm[j].author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this),\n            className: \"comment\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: Comm[j].content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this));\n      } else {\n        output.push( /*#__PURE__*/_jsxDEV(Card, {\n          className: \"image\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            width: 100,\n            src: `data:image/jpeg;base64,${Comm[j].base64}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 15,\n          style: {\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"text-align\": \"left\",\n              clear: \"both\",\n              width: \"100%\"\n            },\n            children: [\"Tenant ID:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: this.state.tenantID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"text-align\": \"left\",\n              clear: \"both\",\n              width: \"100%\"\n            },\n            children: \"Auditor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: this.state.auditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"text-align\": \"left\",\n              clear: \"both\",\n              width: \"100%\"\n            },\n            children: \"Rectification Deadline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: moment(this.state.rectifyDate, \"YYYY-MM-DDTHH:mm:ss.SSS\").format(\"DD MMMM, YYYY\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 9,\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            className: \"score\",\n            type: \"circle\",\n            percent: this.state.total_score,\n            width: \"18vh\",\n            strokeWidth: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.displayComments()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"addComment\",\n          onChange: this.newComment,\n          initialValues: {\n            remember: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"addComment\",\n            label: \"Add Comment\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: \"addCommentText\",\n              placeholder: \"Add Comment\",\n              rows: 4,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submit-comment\",\n              onClick: this.submitComment,\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nViewAudit.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps)(ViewAudit);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ViewAudit.js"],"names":["React","Component","Link","Typography","Progress","Image","Input","Comment","Form","Button","Row","Col","Card","dateformat","PropTypes","connect","display","updateAudit","moment","Text","TextArea","ViewAudit","state","_id","audit","total_score","tenantID","auditor","comment","image","date","rectifyDate","catCounts","type","decodedImage","newComment","onChange","value","console","log","values","setState","content","nativeEvent","explicitOriginalTarget","Date","toString","author","submitComment","tempArray","push","update","props","tenantInfo","record","location","componentDidMount","displayComments","output","Comm","i","Math","max","length","sort","a","b","j","base64","render","clear","width","format","remember","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Progress,\r\n  Image,\r\n  Input,\r\n  Comment,\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n} from \"antd\";\r\nimport dateformat from \"dateformat\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { display, updateAudit } from \"../actions/auditActions.js\";\r\nimport moment from \"moment\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nclass ViewAudit extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    audit: \"\",\r\n    total_score: \"\",\r\n    tenantID: \"\",\r\n    auditor: \"auditor\",\r\n    // auditorComments: [\"Bla\", \"blabla\"],\r\n    // tenantComments: [\"Response\", \"response\"],\r\n    comment: \"\",\r\n    image: \"\",\r\n    date: \"\",\r\n    rectifyDate: \"\",\r\n    catCounts: \"\",\r\n    type: \"\",\r\n    decodedImage: \"\",\r\n    newComment: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      _id: this.props.tenantInfo.record._id,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n      comment: this.props.tenantInfo.record.comment,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      rectifyDate: this.props.tenantInfo.record.rectifyDate,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      type: this.props.tenantInfo.record.type,\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  displayComments() {\r\n    var output = [];\r\n    var Comm = [];\r\n    for (\r\n      var i = 0;\r\n      i <\r\n      Math.max(\r\n        this.state.comment.length,\r\n        this.state.image === null ? 0 : this.state.image.length\r\n      );\r\n      i++\r\n    ) {\r\n      Comm.push(this.state.comment[i]);\r\n      if (this.state.image != null && this.state.image[i] != null) {\r\n        Comm.push(this.state.image[i]);\r\n      }\r\n    }\r\n    Comm = Comm.sort((a, b) => a.date > b.date);\r\n    console.log(Comm);\r\n\r\n    for (var j = 0; j < Comm.length; j++) {\r\n      if (Comm[j].content) {\r\n        output.push(\r\n          <Card size=\"small\">\r\n            <Comment\r\n              author={<a>{Comm[j].author}</a>}\r\n              className=\"comment\"\r\n              content={<p>{Comm[j].content}</p>}\r\n            />\r\n          </Card>\r\n        );\r\n      } else {\r\n        output.push(\r\n          <Card className=\"image\" size=\"small\">\r\n            <Image\r\n              width={100}\r\n              src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n            />\r\n          </Card>\r\n        );\r\n      }\r\n    }\r\n    return <div>{output}</div>;\r\n  }\r\n\r\n  onChange = (value) => {\r\n    console.log(value.Text);\r\n    console.log(this.state.newComment);\r\n  };\r\n\r\n  newComment = (values) => {\r\n    // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n    this.setState({\r\n      newComment: [\r\n        {\r\n          content: values.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          author: \"auditor\",\r\n        },\r\n      ],\r\n    });\r\n    // console.log(this.state.newComment)\r\n  };\r\n\r\n  submitComment = () => {\r\n    var tempArray = this.state.comment;\r\n    console.log(tempArray);\r\n    tempArray.push(this.state.newComment[0]);\r\n    console.log(tempArray);\r\n    this.setState({\r\n      comment: tempArray,\r\n    });\r\n    console.log(this.state.comment);\r\n    this.update();\r\n  };\r\n\r\n  update = () => {\r\n    console.log(this.state);\r\n    updateAudit({\r\n      _id: this.props.tenantInfo.record._id,\r\n      type: this.props.tenantInfo.record.type,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      comment: this.state.newComment,\r\n      location: this.props.tenantInfo.record.location,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Row>\r\n          <Col span={15} style={{ display: \"block\" }}>\r\n            <div style={{ \"text-align\": \"left\", clear: \"both\", width: \"100%\" }}>\r\n              Tenant ID:{\" \"}\r\n            </div>\r\n            <div className=\"name\">\r\n              <b>{this.state.tenantID}</b>\r\n            </div>\r\n            <div style={{ \"text-align\": \"left\", clear: \"both\", width: \"100%\" }}>\r\n              Auditor:\r\n            </div>\r\n            <div className=\"name\">\r\n              <b>{this.state.auditor}</b>\r\n            </div>\r\n            <div style={{ \"text-align\": \"left\", clear: \"both\", width: \"100%\" }}>\r\n              Rectification Deadline:\r\n            </div>\r\n            <div className=\"name\">\r\n              <b>\r\n                {moment(\r\n                  this.state.rectifyDate,\r\n                  \"YYYY-MM-DDTHH:mm:ss.SSS\"\r\n                ).format(\"DD MMMM, YYYY\")}\r\n              </b>\r\n            </div>\r\n          </Col>\r\n          <Col span={9}>\r\n            <Progress\r\n              className=\"score\"\r\n              type=\"circle\"\r\n              percent={this.state.total_score}\r\n              width={\"18vh\"}\r\n              strokeWidth={\"10\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div>\r\n          <div>{this.displayComments()}</div>\r\n          <Form\r\n            className=\"addComment\"\r\n            onChange={this.newComment}\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n          >\r\n            <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n              <TextArea\r\n                className=\"addCommentText\"\r\n                placeholder=\"Add Comment\"\r\n                rows={4}\r\n                allowClear={true}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                Submit Comment\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewAudit.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ViewAudit);\r\n"]},"metadata":{},"sourceType":"module"}