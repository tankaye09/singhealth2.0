{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ChecklistNonFB.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, DatePicker, Form, List, Input, Checkbox, Button, Modal } from \"antd\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { submit } from \"../actions/auditActions.js\";\nimport store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fileUpload = require(\"fuctbase64\");\n\nconst nonFb = importJSON.non_fb;\nconst {\n  Panel\n} = Collapse; // TODO: Take score from json file => Update the score, replace the json file\n\nclass ChecklistNonFB extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tenantInfo: {},\n      type: \"Non-FB\",\n      checked: false,\n      catCounts: [0, 0, 0],\n      // counts[0]: for Professionalism & Staff Hygiene (20%),\n      //counts[1]: for Housekeeping & General Cleanliness (40%)\n      //counts[2]: for Workplace Safety & Health (40%)\n      total_score: 0,\n      image: null,\n      date: null,\n      description: \"\",\n      location: \"\",\n      visibleForm: false,\n      visibleConfirm: false,\n      visibleAudit: false\n    };\n\n    this.submitAudit = () => {\n      console.log(this.state);\n      submit({\n        type: \"Non-FB\",\n        catCounts: this.state.catCounts,\n        total_score: this.state.catCounts[0] + this.state.catCounts[1] + this.state.catCounts[2],\n        image: this.state.image,\n        date: this.state.date,\n        description: this.state.description,\n        location: this.state.location\n      });\n      this.showAuditModal();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      this.setState({\n        date: date\n      });\n    };\n\n    this.showFormModal = () => {\n      this.setState({\n        visibleForm: true\n      });\n    };\n\n    this.showAuditModal = () => {\n      this.setState({\n        visibleAudit: true\n      });\n    };\n\n    this.showConfirmModal = () => {\n      this.setState({\n        visibleConfirm: true\n      });\n    };\n\n    this.handleFormOk = e => {\n      console.log(e);\n      this.showConfirmModal();\n    };\n\n    this.handleAuditOk = e => {\n      console.log(e);\n      this.setState({\n        visibleAudit: false\n      });\n    };\n\n    this.handleCancel = e => {\n      console.log(e);\n      this.setState({\n        visibleForm: false\n      });\n    };\n\n    this.handleUploadOk = e => {\n      console.log(e);\n      this.setState({\n        visibleConfirm: false\n      });\n    };\n\n    this.createCheckbox = (label, catIndex) => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label // handleCheckboxChange={this.toggleCheckbox}\n      ,\n      onChange: e => this.handleCount(e, catIndex)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this);\n\n    this.fileSelectedHandler = event => {\n      // console.log(event.target.files[0]);\n      fileUpload(event).then(data => {\n        // console.log(\"base64: \", data.base64);\n        this.setState({\n          image: data.base64\n        });\n      });\n    };\n\n    this.handleCount = (e, catIndex) => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      switch (catIndex) {\n        case 0:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[0]++);\n          } else {\n            this.setState(state => state.catCounts[0]--);\n          }\n\n          break;\n\n        case 1:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[1]++);\n          } else {\n            this.setState(state => state.catCounts[1]--);\n          }\n\n          break;\n\n        case 2:\n          if (type === \"checkbox\" && checked === true) {\n            this.setState(state => state.catCounts[2]++);\n          } else {\n            this.setState(state => state.catCounts[2]--);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  // might be deprecated\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return { ...this.state,\n      tenantInfo: nextProps.tenantInfo.record\n    };\n  }\n\n  render() {\n    const {\n      tenantInfo\n    } = this.state;\n    console.log(\"Tenant info: \", {\n      tenantInfo\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.tenantInfo.record._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), nonFb.map((cat, catIndex) => {\n        // var catScore = cat.score;\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 25\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 29\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"checklist-item\",\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"create-audit-row\",\n                                children: item\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 205,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"checklist-checkbox\",\n                                children: this.createCheckbox(item, catIndex)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 206,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 204,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 27\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Score: \", this.state.catCounts[catIndex] / 2]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.showFormModal,\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Upload Photo\",\n        visible: this.state.visibleForm,\n        onOk: this.handleFormOk,\n        onCancel: this.handleCancel,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: false\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          name: \"photo_upload\",\n          className: \"photo-upload\",\n          onFinish: this.onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              onChange: this.fileSelectedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"date\",\n            rules: [{\n              required: true,\n              message: \"Date of Incident\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              placeholder: \"Date\",\n              onChange: this.onChangeDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"description\",\n            rules: [{\n              required: true,\n              message: \"Description\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Description\",\n              onChange: this.onChange,\n              value: this.state.description,\n              id: \"description\",\n              type: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"location\",\n            rules: [{\n              required: true,\n              message: \"Location of Incident\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Location\",\n              onChange: this.onChange,\n              value: this.state.location,\n              id: \"location\",\n              type: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Upload Confirm\",\n          destroyOnClose: true,\n          visible: this.state.visibleConfirm,\n          onOk: this.handleUploadOk,\n          okButtonProps: {\n            disabled: false\n          },\n          cancelButtonProps: {\n            disabled: true,\n            visible: false\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Photo Added!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.submitAudit(),\n        className: \"submit-button\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\",\n        visible: this.state.visibleAudit,\n        onOk: this.handleAuditOk,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: true,\n          visible: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Audit Uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nChecklistNonFB.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps)(ChecklistNonFB);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ChecklistNonFB.js"],"names":["Collapse","Divider","DatePicker","Form","List","Input","Checkbox","Button","Modal","React","Component","PropTypes","connect","importJSON","submit","store","fileUpload","require","nonFb","non_fb","Panel","ChecklistNonFB","state","tenantInfo","type","checked","catCounts","total_score","image","date","description","location","visibleForm","visibleConfirm","visibleAudit","submitAudit","console","log","showAuditModal","onChange","e","setState","target","id","value","onChangeDate","dateString","showFormModal","showConfirmModal","handleFormOk","handleAuditOk","handleCancel","handleUploadOk","createCheckbox","label","catIndex","handleCount","fileSelectedHandler","event","then","data","base64","getDerivedStateFromProps","nextProps","prevState","record","render","props","_id","map","cat","name","subcategories","subCat","subCatIndex","questions","item","disabled","onFinish","required","message","visible","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  DatePicker,\r\n  Form,\r\n  List,\r\n  Input,\r\n  Checkbox,\r\n  Button,\r\n  Modal,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nimport { submit } from \"../actions/auditActions.js\";\r\nimport store from \"../store\";\r\nconst fileUpload = require(\"fuctbase64\");\r\nconst nonFb = importJSON.non_fb;\r\nconst { Panel } = Collapse;\r\n\r\n// TODO: Take score from json file => Update the score, replace the json file\r\n\r\nclass ChecklistNonFB extends Component {\r\n  // not exactly dynamic\r\n  state = {\r\n    tenantInfo: {},\r\n    type: \"Non-FB\",\r\n    checked: false,\r\n    catCounts: [0, 0, 0],\r\n    // counts[0]: for Professionalism & Staff Hygiene (20%),\r\n    //counts[1]: for Housekeeping & General Cleanliness (40%)\r\n    //counts[2]: for Workplace Safety & Health (40%)\r\n    total_score: 0,\r\n    image: null,\r\n    date: null,\r\n    description: \"\",\r\n    location: \"\",\r\n    visibleForm: false,\r\n    visibleConfirm: false,\r\n    visibleAudit: false,\r\n  };\r\n\r\n  submitAudit = () => {\r\n    console.log(this.state);\r\n    submit({\r\n      type: \"Non-FB\",\r\n      catCounts: this.state.catCounts,\r\n      total_score:\r\n        this.state.catCounts[0] +\r\n        this.state.catCounts[1] +\r\n        this.state.catCounts[2],\r\n      image: this.state.image,\r\n      date: this.state.date,\r\n      description: this.state.description,\r\n      location: this.state.location,\r\n    });\r\n    this.showAuditModal();\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onChangeDate = (date, dateString) => {\r\n    this.setState({ date: date });\r\n  };\r\n\r\n  showFormModal = () => {\r\n    this.setState({\r\n      visibleForm: true,\r\n    });\r\n  };\r\n\r\n  showAuditModal = () => {\r\n    this.setState({\r\n      visibleAudit: true,\r\n    });\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({\r\n      visibleConfirm: true,\r\n    });\r\n  };\r\n\r\n  handleFormOk = (e) => {\r\n    console.log(e);\r\n    this.showConfirmModal();\r\n  };\r\n\r\n  handleAuditOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleAudit: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleForm: false,\r\n    });\r\n  };\r\n\r\n  handleUploadOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visibleConfirm: false,\r\n    });\r\n  };\r\n\r\n  createCheckbox = (label, catIndex) => (\r\n    <Checkbox\r\n      label={label}\r\n      // handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n      onChange={(e) => this.handleCount(e, catIndex)}\r\n    />\r\n  );\r\n\r\n  fileSelectedHandler = (event) => {\r\n    // console.log(event.target.files[0]);\r\n    fileUpload(event).then((data) => {\r\n      // console.log(\"base64: \", data.base64);\r\n      this.setState({\r\n        image: data.base64,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleCount = (e, catIndex) => {\r\n    const { checked, type } = e.target;\r\n    switch (catIndex) {\r\n      case 0:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[0]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[0]--);\r\n        }\r\n        break;\r\n      case 1:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[1]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[1]--);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (type === \"checkbox\" && checked === true) {\r\n          this.setState((state) => state.catCounts[2]++);\r\n        } else {\r\n          this.setState((state) => state.catCounts[2]--);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // might be deprecated\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      ...this.state,\r\n      tenantInfo: nextProps.tenantInfo.record,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { tenantInfo } = this.state;\r\n    console.log(\"Tenant info: \", { tenantInfo });\r\n    return (\r\n      <div className=\"table\">\r\n        <div>{this.props.tenantInfo.record._id}</div>\r\n        {/* <h1>Non-FB CheckList for: {tenantInfo.record.userId}</h1> */}\r\n        {nonFb.map((cat, catIndex) => {\r\n          // var catScore = cat.score;\r\n          return (\r\n            // Category\r\n            <Collapse defaultActiveKey={[\"1\"]}>\r\n              <Panel\r\n                header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                key={catIndex + 1}\r\n                className=\"bg-orange\"\r\n              >\r\n                <div catIndex={catIndex}>\r\n                  {cat.subcategories.map((subCat, subCatIndex) => {\r\n                    return (\r\n                      // SubCategory\r\n                      <Collapse defaultActiveKey={[\"1\"]}>\r\n                        <Panel\r\n                          header={\r\n                            <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                          }\r\n                          key={subCatIndex + 1}\r\n                          className=\"bg-orange\"\r\n                        >\r\n                          <List\r\n                            dataSource={subCat.questions} // Questions\r\n                            renderItem={(item) => (\r\n                              <List.Item>\r\n                                <div className=\"checklist-item\">\r\n                                  <div className=\"create-audit-row\">{item}</div>\r\n                                  <div className=\"checklist-checkbox\">\r\n                                    {this.createCheckbox(item, catIndex)}\r\n                                  </div>\r\n                                </div>\r\n                              </List.Item>\r\n                            )}\r\n                          />\r\n                        </Panel>\r\n                      </Collapse>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div>Score: {this.state.catCounts[catIndex] / 2}</div>\r\n              </Panel>\r\n            </Collapse>\r\n          );\r\n        })}\r\n\r\n        <Button type=\"primary\" onClick={this.showFormModal}>\r\n          Upload Photo\r\n        </Button>\r\n        <Modal\r\n          title=\"Upload Photo\"\r\n          visible={this.state.visibleForm}\r\n          onOk={this.handleFormOk}\r\n          onCancel={this.handleCancel}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: false }}\r\n        >\r\n          <Form\r\n            name=\"photo_upload\"\r\n            className=\"photo-upload\"\r\n            onFinish={this.onFinish}\r\n          >\r\n            <Form.Item>\r\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"date\"\r\n              rules={[{ required: true, message: \"Date of Incident\" }]}\r\n            >\r\n              <DatePicker placeholder=\"Date\" onChange={this.onChangeDate} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Description\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Description\"\r\n                onChange={this.onChange}\r\n                value={this.state.description}\r\n                id=\"description\"\r\n                type=\"description\"\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"location\"\r\n              rules={[{ required: true, message: \"Location of Incident\" }]}\r\n            >\r\n              <Input\r\n                placeholder=\"Location\"\r\n                onChange={this.onChange}\r\n                value={this.state.location}\r\n                id=\"location\"\r\n                type=\"location\"\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n          {/* <Form>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"upload-photo-button\"\r\n              onClick={() => { this.upload(this.state); }}\r\n            >\r\n              Upload\r\n                    </Button>\r\n          </Form> */}\r\n          <Modal\r\n            title=\"Upload Confirm\"\r\n            destroyOnClose={true}\r\n            visible={this.state.visibleConfirm}\r\n            onOk={this.handleUploadOk}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: true, visible: false }}\r\n          >\r\n            <p>Photo Added!</p>\r\n          </Modal>\r\n        </Modal>\r\n        <Button\r\n          onClick={() => this.submitAudit()}\r\n          className=\"submit-button\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n        {/* <Button onClick={() => this.updateItems()} className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n          TEST\r\n        </Button> */}\r\n        <Modal\r\n          title=\"\"\r\n          visible={this.state.visibleAudit}\r\n          onOk={this.handleAuditOk}\r\n          okButtonProps={{ disabled: false }}\r\n          cancelButtonProps={{ disabled: true, visible: false }}\r\n        >\r\n          <p>Audit Uploaded!</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nChecklistNonFB.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ChecklistNonFB);\r\n"]},"metadata":{},"sourceType":"module"}