{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\TenantList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Input, Button, Space, Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { getTenants } from \"../actions/tenantActions\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table; // const hardData = [\n//   {\n//     _id: \"60631883a28310df640dcfe9\",\n//     userId: \"60631883a28310df640dcfe8\",\n//     address: \"addtenent7\",\n//     institution: \"CGH\",\n//     auditor: \"1\",\n//     __v: 0,\n//   },\n//   {\n//     _id: \"60631d491b5182a0d81d3942\",\n//     userId: \"60631d491b5182a0d81d3941\",\n//     address: \"tenant1\",\n//     institution: \"SGH\",\n//     auditor: \"staff1\",\n//     __v: 0,\n//   },\n// ];\n\nclass Directory extends Component {\n  constructor() {\n    super();\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: \"block\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? \"#1890ff\" : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: \"#ffc069\",\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: \"\"\n      });\n    };\n\n    this.state = {\n      tenantData: [],\n      searchText: \"\",\n      searchedColumn: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"data\");\n    this.props.getTenants(data => {\n      this.setState({\n        tenantData: data\n      });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: \"Address\",\n      dataIndex: \"address\",\n      key: \"address\",\n      width: \"30%\",\n      ...this.getColumnSearchProps(\"address\")\n    }, {\n      title: \"Institution\",\n      dataIndex: \"institution\",\n      key: \"institution\",\n      ...this.getColumnSearchProps(\"address\")\n    }, {\n      title: \"Institution\",\n      dataIndex: \"institution\",\n      key: \"institution\",\n      ...this.getColumnSearchProps(\"address\")\n    }, {\n      title: \"Auditor\",\n      dataIndex: \"auditor\",\n      key: \"auditor\",\n      ...this.getColumnSearchProps(\"auditor\")\n    }, {\n      title: \"User Id\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n      ...this.getColumnSearchProps(\"auditor\")\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: this.state.tenantData,\n        scroll: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this); //     <div className=\"panels\">\n    //       {/* <Table> */}\n    //       {this.state.tenants.map((tenant, tenIndex) => {\n    //         console.log(tenant);\n    //         return <div>{tenant}</div>;\n    //       })}\n    //       {/* </Table> */}\n    //     </div>\n    //   );\n    // }\n  }\n\n}\n\nDirectory.propTypes = {\n  getTenants: PropTypes.func.isRequired,\n  tenantData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantData: state.tenantData\n});\n\nexport default connect(mapStateToProps, {\n  getTenants\n})(Directory);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/TenantList.js"],"names":["React","Component","axios","Input","Button","Space","Table","Highlighter","SearchOutlined","connect","getTenants","PropTypes","Column","ColumnGroup","Directory","constructor","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","searchText","searchedColumn","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","state","backgroundColor","tenantData","componentDidMount","console","log","props","data","columns","title","key","x","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTenants } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n// const hardData = [\r\n//   {\r\n//     _id: \"60631883a28310df640dcfe9\",\r\n//     userId: \"60631883a28310df640dcfe8\",\r\n//     address: \"addtenent7\",\r\n//     institution: \"CGH\",\r\n//     auditor: \"1\",\r\n//     __v: 0,\r\n//   },\r\n//   {\r\n//     _id: \"60631d491b5182a0d81d3942\",\r\n//     userId: \"60631d491b5182a0d81d3941\",\r\n//     address: \"tenant1\",\r\n//     institution: \"SGH\",\r\n//     auditor: \"staff1\",\r\n//     __v: 0,\r\n//   },\r\n// ];\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        key: \"address\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Institution\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Institution\",\r\n        dataIndex: \"institution\",\r\n        key: \"institution\",\r\n        ...this.getColumnSearchProps(\"address\"),\r\n      },\r\n      {\r\n        title: \"Auditor\",\r\n        dataIndex: \"auditor\",\r\n        key: \"auditor\",\r\n        ...this.getColumnSearchProps(\"auditor\"),\r\n      },\r\n      {\r\n        title: \"User Id\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n        ...this.getColumnSearchProps(\"auditor\"),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.tenantData}\r\n          scroll={(x: 400)}\r\n        />\r\n      </div>\r\n    );\r\n    //     <div className=\"panels\">\r\n    //       {/* <Table> */}\r\n    //       {this.state.tenants.map((tenant, tenIndex) => {\r\n    //         console.log(tenant);\r\n    //         return <div>{tenant}</div>;\r\n    //       })}\r\n    //       {/* </Table> */}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants })(Directory);\r\n"]},"metadata":{},"sourceType":"module"}