{"ast":null,"code":"import { getAllByPlaceholderText } from \"@testing-library/dom\";\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\nexport const submit = data => dispatch => {\n  console.log(\"submit\", data);\n  let promise = new Promise((resolve, reject) => {\n    axios.post(\"/api/audits/add\", data).then(() => {\n      dispatch({\n        type: GET_MESSAGE,\n        payload: \"Audit Created\"\n      });\n      resolve(data);\n    }).catch(error => {\n      console.log(\"in the error\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data\n      });\n      reject(\"Audit Submission Failed\");\n    });\n  });\n  promise.then(message => {\n    sendEmail(message);\n  }).catch(message => {\n    console.log(message);\n  });\n};\nexport const display = onDataReceived => dispatch => {\n  axios.get(\"/api/audits\").then(response => {\n    const data = response.data; // console.log(data);\n    // console.log(data.length);\n\n    onDataReceived(data);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const updateAudit = data => {\n  console.log(\"Update audit: \", data);\n  let promise = new Promise((resolve, reject) => {\n    axios.put(\"/api/audits/update\", data).then(() => {\n      resolve(data);\n    }).catch(error => {\n      console.log(error);\n      reject(\"Update Audit failed\");\n    });\n  }); // send email notification\n\n  promise.then(message => {\n    sendEmailAuditUpdate(message);\n  }).catch(message => {\n    console.log(message);\n  });\n};\nexport const updateAuditImage = data => {\n  console.log(data);\n  axios.put(\"/api/audits/updateImage\", data).catch(error => {\n    console.log(error);\n  });\n};\nexport const deleteAudit = data => {\n  console.log(data);\n  return axios.post(\"/api/audits\", data).then(res => console.log(\"audit deleted success\")).catch(error => {\n    console.log(error);\n  });\n};\nexport const sendEmail = data => dispatch => {\n  console.log(\"In send email\");\n  axios.post(\"/api/sendemail/audit\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Email Sent to Tenant\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};\nexport const sendEmailAuditUpdate = data => dispatch => {\n  console.log(\"In send email\");\n  axios.post(\"/api/sendemail/auditupdate\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Email Notification Sent\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};\nexport const sendEmailReminder = data => dispatch => {\n  console.log(\"In send email\");\n  return axios.post(\"/api/sendemail/reminder\", data).then(res => {\n    console.log(\"email sent success\");\n    dispatch({\n      type: GET_MESSAGE,\n      payload: \"Email Reminder Sent to Tenant\"\n    });\n  }).catch(err => {\n    console.log(\"email sent failed, err: \", err);\n    dispatch({\n      type: GET_ERRORS,\n      payload: \"Email Sent Failed\"\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/actions/auditActions.js"],"names":["getAllByPlaceholderText","axios","GET_ERRORS","GET_MESSAGE","submit","data","dispatch","console","log","promise","Promise","resolve","reject","post","then","type","payload","catch","error","response","message","sendEmail","display","onDataReceived","get","err","updateAudit","put","sendEmailAuditUpdate","updateAuditImage","deleteAudit","res","sendEmailReminder"],"mappings":"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","sourcesContent":["import { getAllByPlaceholderText } from \"@testing-library/dom\";\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, GET_MESSAGE } from \"./types\";\r\n\r\nexport const submit = (data) => (dispatch) => {\r\n  console.log(\"submit\", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\"/api/audits/add\", data)\r\n      .then(() => {\r\n        dispatch({\r\n          type: GET_MESSAGE,\r\n          payload: \"Audit Created\",\r\n        });\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"in the error\");\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: error.response.data,\r\n        });\r\n        reject(\"Audit Submission Failed\");\r\n      });\r\n  });\r\n\r\n  promise\r\n    .then((message) => {\r\n      sendEmail(message);\r\n    })\r\n    .catch((message) => {\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const display = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/audits\")\r\n    .then((response) => {\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // console.log(data.length);\r\n      onDataReceived(data);\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateAudit = (data) => {\r\n  console.log(\"Update audit: \", data);\r\n  let promise = new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\"/api/audits/update\", data)\r\n      .then(() => {\r\n        resolve(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        reject(\"Update Audit failed\");\r\n      });\r\n  });\r\n\r\n  // send email notification\r\n  promise\r\n    .then((message) => {\r\n      sendEmailAuditUpdate(message);\r\n    })\r\n    .catch((message) => {\r\n      console.log(message);\r\n    });\r\n};\r\n\r\nexport const updateAuditImage = (data) => {\r\n  console.log(data);\r\n  axios.put(\"/api/audits/updateImage\", data).catch((error) => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\nexport const deleteAudit = (data) => {\r\n  console.log(data);\r\n  return axios\r\n    .post(\"/api/audits\", data)\r\n    .then((res) => console.log(\"audit deleted success\"))\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const sendEmail = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/audit\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailAuditUpdate = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  axios\r\n    .post(\"/api/sendemail/auditupdate\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Notification Sent\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const sendEmailReminder = (data) => (dispatch) => {\r\n  console.log(\"In send email\");\r\n  return axios\r\n    .post(\"/api/sendemail/reminder\", data)\r\n    .then((res) => {\r\n      console.log(\"email sent success\");\r\n      dispatch({\r\n        type: GET_MESSAGE,\r\n        payload: \"Email Reminder Sent to Tenant\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"email sent failed, err: \", err);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"Email Sent Failed\",\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}