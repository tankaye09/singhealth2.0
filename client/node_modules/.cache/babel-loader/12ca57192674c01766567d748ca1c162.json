{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\n// import { Form, Input, Button, Checkbox } from \"antd\";\n// import { UserOutlined, LockOutlined } from \"@ant-design/icons\";\n// import { Link } from \"react-router-dom\";\n// const Login = () => {\n//   const onFinish = (values) => {\n//     console.log(\"Received values of form: \", values);\n//   };\n//   return (\n//     <div class=\"login-register-form\">\n//       <Form\n//         name=\"normal_login\"\n//         className=\"login-register-form\"\n//         initialValues={{ remember: true }}\n//         onFinish={onFinish}\n//       >\n//         <Form.Item\n//           name=\"email\"\n//           rules={[{ required: true, message: \"Please input your Email!\" }]}\n//         >\n//           <Input\n//             prefix={<UserOutlined className=\"site-form-item-icon\" />}\n//             placeholder=\"Email\"\n//           />\n//         </Form.Item>\n//         <Form.Item\n//           name=\"password\"\n//           rules={[{ required: true, message: \"Please input your Password!\" }]}\n//         >\n//           <Input\n//             prefix={<LockOutlined className=\"site-form-item-icon\" />}\n//             type=\"password\"\n//             placeholder=\"Password\"\n//           />\n//         </Form.Item>\n//         <Form.Item>\n//           <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n//             <Checkbox>Remember me</Checkbox>\n//           </Form.Item>\n//           <a className=\"login-form-forgot\" href=\"\">\n//             Forgot password\n//           </a>\n//         </Form.Item>\n//         <Form.Item>\n//           <Button\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             className=\"login-register-form-button\"\n//           >\n//             Log in\n//           </Button>\n//           Or <Link to=\"/Register\">register now</Link>\n//         </Form.Item>\n//       </Form>\n//     </div>\n//   );\n// };\n// export default Login;\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onFinish = values => {\n      console.log(values);\n      const userData = {\n        email: values.email,\n        password: values.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  } // might be deprecated\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"4rem\"\n        },\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col s8 offset-s2\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onFinish: this.onFinish,\n            name: \"normal_login\",\n            className: \"login-register-form\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"email\",\n              rules: [{\n                required: true,\n                message: \"Please input your Email!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                  className: \"site-form-item-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 27\n                }, this),\n                placeholder: \"Email\",\n                onChange: this.onChange,\n                value: this.state.email,\n                error: errors.email,\n                id: \"email\",\n                type: \"email\",\n                className: classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"password\",\n              rules: [{\n                required: true,\n                message: \"Please input your Password!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                  className: \"site-form-item-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 27\n                }, this),\n                placeholder: \"Password\",\n                onChange: this.onChange,\n                value: this.state.password,\n                error: errors.password,\n                id: \"password\",\n                type: \"password\",\n                className: classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"login-register-form-button\",\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), \"Or \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Register\",\n                children: \"register now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/Login.js"],"names":["React","Component","Link","PropTypes","connect","loginUser","classnames","Form","Input","Button","Checkbox","UserOutlined","LockOutlined","Login","constructor","onChange","e","setState","target","id","value","onFinish","values","console","log","userData","email","password","props","state","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","marginTop","required","message","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["// import { Form, Input, Button, Checkbox } from \"antd\";\r\n// import { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const Login = () => {\r\n//   const onFinish = (values) => {\r\n//     console.log(\"Received values of form: \", values);\r\n//   };\r\n\r\n//   return (\r\n//     <div class=\"login-register-form\">\r\n//       <Form\r\n//         name=\"normal_login\"\r\n//         className=\"login-register-form\"\r\n//         initialValues={{ remember: true }}\r\n//         onFinish={onFinish}\r\n//       >\r\n//         <Form.Item\r\n//           name=\"email\"\r\n//           rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n//         >\r\n//           <Input\r\n//             prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n//             placeholder=\"Email\"\r\n//           />\r\n//         </Form.Item>\r\n//         <Form.Item\r\n//           name=\"password\"\r\n//           rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n//         >\r\n//           <Input\r\n//             prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n//             type=\"password\"\r\n//             placeholder=\"Password\"\r\n//           />\r\n//         </Form.Item>\r\n//         <Form.Item>\r\n//           <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n//             <Checkbox>Remember me</Checkbox>\r\n//           </Form.Item>\r\n\r\n//           <a className=\"login-form-forgot\" href=\"\">\r\n//             Forgot password\r\n//           </a>\r\n//         </Form.Item>\r\n\r\n//         <Form.Item>\r\n//           <Button\r\n//             type=\"primary\"\r\n//             htmlType=\"submit\"\r\n//             className=\"login-register-form-button\"\r\n//           >\r\n//             Log in\r\n//           </Button>\r\n//           Or <Link to=\"/Register\">register now</Link>\r\n//         </Form.Item>\r\n//       </Form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  onFinish = (values) => {\r\n    console.log(values);\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Form\r\n              onFinish={this.onFinish}\r\n              name=\"normal_login\"\r\n              className=\"login-register-form\"\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your Email!\" },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"Email\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound,\r\n                  })}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your Password!\" },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"Password\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect,\r\n                  })}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-register-form-button\"\r\n                >\r\n                  Log in\r\n                </Button>\r\n                Or <Link to=\"/Register\">register now</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n"]},"metadata":{},"sourceType":"module"}