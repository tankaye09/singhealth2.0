{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\CreateTenant.js\";\nimport React, { ReactDOM, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerTenant } from \"../../actions/authActions\";\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport institutionsData from \"../../data/institutions.json\";\nimport tenantData from \"../../data/tenantTypes.json\"; // TODO: this should be taken from db\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst institutions = institutionsData;\nconst tenantTypes = tenantData;\n\nclass CreateTenant extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onDropdownChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.onFinish = values => {\n      const newUser = {\n        name: values.name,\n        type: values.type,\n        email: values.email,\n        address: values.address,\n        institution: values.institution,\n        auditor: values.auditor\n      };\n      console.log(\"newUser: \", newUser);\n      this.props.registerTenant(newUser, this.props.history);\n      window.scrollTo(0, 0); // Scroll to top\n    };\n\n    this.state = {\n      name: \"\",\n      type: \"\",\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      errors\n    } = this.state;\n    const layout = {\n      labelCol: {\n        span: 3\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"normal_login\",\n      className: \"login-register-form\",\n      onFinish: this.onFinish,\n      initialValues: {\n        auditor: user.name\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create a Tenant Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Tenant Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          type: \"string\",\n          message: \"Please input a valid Name!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Tenant Name\",\n          onChange: this.onChange,\n          value: this.state.name,\n          error: errors.name,\n          id: \"name\",\n          type: \"name\" // className={classnames(\"\", {\n          //   invalid: errors.email,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Type\",\n        name: \"type\",\n        rules: [{\n          required: true,\n          message: \"Please select F&B or non-F&B!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          className: \"dropdown\",\n          placeholder: \"F&B or Non-F&B\",\n          options: tenantTypes,\n          onChange: this.onDropdownChange,\n          id: \"type\",\n          type: \"type\",\n          value: this.state.type,\n          error: errors.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          type: \"email\",\n          message: \"Please input a valid Email!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\",\n          onChange: this.onChange,\n          value: this.state.email,\n          error: errors.email,\n          id: \"email\",\n          type: \"email\" // className={classnames(\"\", {\n          //   invalid: errors.email,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Address\",\n        name: \"address\",\n        rules: [{\n          required: true,\n          type: \"string\",\n          message: \"Please input a valid Address!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Address\",\n          onChange: this.onChange,\n          value: this.state.address,\n          error: errors.address,\n          id: \"address\",\n          type: \"address\" // className={classnames(\"\", {\n          //   invalid: errors.email,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Institution\",\n        name: \"institution\",\n        rules: [{\n          required: true,\n          message: \"Please select an institution!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          showSearch: true,\n          className: \"dropdown\",\n          icon: MailOutlined,\n          placeholder: \"Institution\",\n          options: institutions,\n          onChange: this.onDropdownChange,\n          id: \"institution\",\n          type: \"institution\",\n          value: this.state.institution,\n          error: errors.institution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Auditor\",\n        name: \"auditor\",\n        rules: [{\n          required: true,\n          message: \"Please input name of Auditor!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Auditor\",\n          onChange: this.onChange,\n          value: this.state.auditor,\n          error: errors.auditor,\n          id: \"auditor\",\n          type: \"auditor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-register-form-button\",\n          children: \"Create Tenant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Props stands for properties and is being used for passing data from one component to another\n\n\nCreateTenant.propTypes = {\n  registerTenant: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // Get state from Redux and map it to props\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  // allows us to call this.props.auth\n  errors: state.errors // allows us to call this.props.errors\n\n});\n\nexport default connect(mapStateToProps, {\n  registerTenant\n})(withRouter(CreateTenant));","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/CreateTenant.js"],"names":["React","ReactDOM","Component","Link","withRouter","PropTypes","connect","registerTenant","Form","Input","Button","Message","Select","message","MailOutlined","UserOutlined","LockOutlined","institutionsData","tenantData","institutions","tenantTypes","CreateTenant","constructor","onChange","e","setState","target","id","value","onDropdownChange","onFinish","values","newUser","name","type","email","address","institution","auditor","console","log","props","history","window","scrollTo","state","errors","componentDidMount","auth","isAuthenticaed","push","UNSAFE_componentWillReceiveProps","nextProps","render","user","layout","labelCol","span","required","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { ReactDOM, Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerTenant } from \"../../actions/authActions\";\r\nimport { Form, Input, Button, Message, Select, message } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport institutionsData from \"../../data/institutions.json\";\r\nimport tenantData from \"../../data/tenantTypes.json\";\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = institutionsData;\r\nconst tenantTypes = tenantData;\r\n\r\nclass CreateTenant extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      type: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  // TODO send email to tenant with login details\r\n\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      name: values.name,\r\n      type: values.type,\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n    };\r\n    console.log(\"newUser: \", newUser);\r\n    this.props.registerTenant(newUser, this.props.history);\r\n    window.scrollTo(0, 0); // Scroll to top\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n        initialValues={{\r\n          auditor: user.name,\r\n        }}\r\n      >\r\n        <h1>Create a Tenant Account</h1>\r\n\r\n        {/* No name, replace with id for annonymity */}\r\n\r\n        <Form.Item\r\n          label=\"Tenant Name\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Name!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Tenant Name\"\r\n            onChange={this.onChange}\r\n            value={this.state.name}\r\n            error={errors.name}\r\n            id=\"name\"\r\n            type=\"name\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Type\"\r\n          name=\"type\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select F&B or non-F&B!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            className=\"dropdown\"\r\n            placeholder=\"F&B or Non-F&B\"\r\n            options={tenantTypes}\r\n            onChange={this.onDropdownChange}\r\n            id=\"type\"\r\n            type=\"type\"\r\n            value={this.state.type}\r\n            error={errors.type}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Address!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address}\r\n            error={errors.address}\r\n            id=\"address\"\r\n            type=\"address\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Institution\"\r\n          name=\"institution\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select an institution!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            className=\"dropdown\"\r\n            icon={MailOutlined}\r\n            placeholder=\"Institution\"\r\n            options={institutions}\r\n            onChange={this.onDropdownChange}\r\n            id=\"institution\"\r\n            type=\"institution\"\r\n            value={this.state.institution}\r\n            error={errors.institution}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Auditor\"\r\n          name=\"auditor\"\r\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Auditor\"\r\n            onChange={this.onChange}\r\n            value={this.state.auditor}\r\n            error={errors.auditor}\r\n            id=\"auditor\"\r\n            type=\"auditor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Create Tenant\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nCreateTenant.propTypes = {\r\n  registerTenant: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerTenant })(\r\n  withRouter(CreateTenant)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}