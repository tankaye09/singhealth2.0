{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\RegisterTenant.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\"; // TODO: this should be taken from db\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst institutions = [{\n  label: \"CGH\",\n  value: \"CGH\"\n}, {\n  label: \"SGH\",\n  value: \"SGH\"\n}, {\n  label: \"KKH\",\n  value: \"KKH\"\n}];\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onDropdownChange = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.onFinish = values => {\n      const newUser = {\n        email: values.email,\n        address: values.address,\n        institution: values.institution,\n        auditor: values.auditor\n      };\n      console.log(newUser);\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      email: \"\",\n      address: \"\",\n      institution: \"\",\n      auditor: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\n    if (this.props.auth.isAuthenticaed) {\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      errors\n    } = this.state;\n    const layout = {\n      labelCol: {\n        span: 3\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"normal_login\",\n      className: \"login-register-form\",\n      onFinish: this.onFinish,\n      initialValues: {\n        auditor: user.name\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Tenant Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          type: \"email\",\n          message: \"Please input a valid Email!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\",\n          onChange: this.onChange,\n          value: this.state.email,\n          error: errors.email,\n          id: \"email\",\n          type: \"email\" // className={classnames(\"\", {\n          //   invalid: errors.email,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Address\",\n        name: \"address\",\n        rules: [{\n          required: true,\n          type: \"string\",\n          message: \"Please input a valid Address!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Address\",\n          onChange: this.onChange,\n          value: this.state.address,\n          error: errors.address,\n          id: \"address\",\n          type: \"address\" // className={classnames(\"\", {\n          //   invalid: errors.email,\n          // })}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Institution\",\n        name: \"institution\",\n        rules: [{\n          required: true,\n          message: \"Please select an institution!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          icon: MailOutlined,\n          placeholder: \"Institution\",\n          options: institutions,\n          onChange: this.onDropdownChange,\n          id: \"institution\",\n          type: \"institution\",\n          value: this.state.institution,\n          error: errors.institution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Auditor\",\n        name: \"auditor\",\n        rules: [{\n          required: true,\n          message: \"Please input name of Auditor!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Auditor\",\n          onChange: this.onChange,\n          value: this.state.auditor,\n          error: errors.auditor,\n          id: \"auditor\",\n          type: \"auditor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-register-form-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Props stands for properties and is being used for passing data from one component to another\n\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // Get state from Redux and map it to props\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  // allows us to call this.props.auth\n  errors: state.errors // allows us to call this.props.errors\n\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/RegisterTenant.js"],"names":["React","Component","Link","withRouter","PropTypes","connect","registerUser","classnames","Form","Input","Button","Checkbox","Select","MailOutlined","UserOutlined","LockOutlined","institutions","label","value","Register","constructor","onChange","e","setState","target","id","onDropdownChange","onFinish","values","newUser","email","address","institution","auditor","console","log","props","history","state","errors","componentDidMount","auth","isAuthenticaed","push","componentWillReceiveProps","nextProps","render","user","layout","labelCol","span","name","required","type","message","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { Form, Input, Button, Checkbox, Select } from \"antd\";\r\nimport { MailOutlined, UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\n// TODO: this should be taken from db\r\nconst institutions = [\r\n  { label: \"CGH\", value: \"CGH\" },\r\n  { label: \"SGH\", value: \"SGH\" },\r\n  { label: \"KKH\", value: \"KKH\" },\r\n];\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      address: \"\",\r\n      institution: \"\",\r\n      auditor: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If loggied in and user navigates to Register page, should redirect them to dashboad\r\n    if (this.props.auth.isAuthenticaed) {\r\n      this.props.history.push(\"/dashboard\"); // Push new entry into history stack, ie redirecting the user to another route\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onDropdownChange = (e, { value }) => this.setState({ value });\r\n\r\n  onFinish = (values) => {\r\n    const newUser = {\r\n      email: values.email,\r\n      address: values.address,\r\n      institution: values.institution,\r\n      auditor: values.auditor,\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { errors } = this.state;\r\n    const layout = {\r\n      labelCol: { span: 3 },\r\n    };\r\n\r\n    return (\r\n      <Form\r\n        {...layout}\r\n        name=\"normal_login\"\r\n        className=\"login-register-form\"\r\n        onFinish={this.onFinish}\r\n        initialValues={{\r\n          auditor: user.name,\r\n        }}\r\n      >\r\n        <h1>Create Tenant Account</h1>\r\n\r\n        {/* No name, replace with id for annonymity */}\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"email\",\r\n              message: \"Please input a valid Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n            error={errors.email}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: \"string\",\r\n              message: \"Please input a valid Address!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"Address\"\r\n            onChange={this.onChange}\r\n            value={this.state.address}\r\n            error={errors.address}\r\n            id=\"address\"\r\n            type=\"address\"\r\n            // className={classnames(\"\", {\r\n            //   invalid: errors.email,\r\n            // })}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Institution\"\r\n          name=\"institution\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please select an institution!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            icon={MailOutlined}\r\n            placeholder=\"Institution\"\r\n            options={institutions}\r\n            onChange={this.onDropdownChange}\r\n            id=\"institution\"\r\n            type=\"institution\"\r\n            value={this.state.institution}\r\n            error={errors.institution}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Auditor\"\r\n          name=\"auditor\"\r\n          rules={[{ required: true, message: \"Please input name of Auditor!\" }]}\r\n        >\r\n          <Input\r\n            placeholder=\"Auditor\"\r\n            onChange={this.onChange}\r\n            value={this.state.auditor}\r\n            error={errors.auditor}\r\n            id=\"auditor\"\r\n            type=\"auditor\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-register-form-button\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n// Props stands for properties and is being used for passing data from one component to another\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\n// Get state from Redux and map it to props\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth, // allows us to call this.props.auth\r\n  errors: state.errors, // allows us to call this.props.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n"]},"metadata":{},"sourceType":"module"}