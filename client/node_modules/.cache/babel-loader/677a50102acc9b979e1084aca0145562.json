{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ViewAuditTenant.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Progress, Image, Input, Comment, Form, Button, Modal } from \"antd\";\nimport dateformat from \"dateformat\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { display, updateAudit, updateAuditImage } from \"../actions/auditActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fileUpload = require(\"fuctbase64\");\n\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nclass ViewAuditTenant extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: \"\",\n      audit: \"\",\n      total_score: \"\",\n      tenantID: \"\",\n      auditor: \"auditor\",\n      // auditorComments: [\"Bla\", \"blabla\"],\n      // tenantComments: [\"Response\", \"response\"],\n      comment: \"\",\n      image: \"\",\n      date: \"\",\n      catCounts: \"\",\n      type: \"\",\n      decodedImage: \"\",\n      newComment: \"\",\n      tempImageBase64: [],\n      tempImageCaption: null,\n      imageUpload: [],\n      visibleConfirm: false,\n      testState: \"\"\n    };\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files[0]);\n      fileUpload(event).then(data => {\n        console.log(\"base64: \", data.base64);\n        this.setState({\n          // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\n          tempImageBase64: [{\n            base64: data.base64,\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\")\n          }]\n        });\n      });\n    };\n\n    this.onChangeCaption = caption => {\n      console.log(this.state);\n      this.setState({\n        tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value\n      });\n    };\n\n    this.handleUploadOk = e => {\n      console.log(e);\n      console.log(this.state);\n      var tempArray = this.state.image;\n      console.log(tempArray);\n      tempArray.push([{\n        base64: this.state.tempImageBase64[0].base64,\n        date: this.state.tempImageBase64[0].date,\n        caption: this.state.tempImageCaption\n      }]);\n      console.log(tempArray);\n      this.setState({\n        image: tempArray\n      });\n      this.setState({\n        visibleConfirm: false\n      });\n      this.updateImage();\n    };\n\n    this.onChange = value => {\n      console.log(value.Text);\n      console.log(this.state.newComment);\n    };\n\n    this.handleFormOk = e => {\n      console.log(e);\n      this.setState({\n        imageUpload: [{\n          base64: this.state.tempImageBase64[0].base64,\n          date: this.state.tempImageBase64[0].date,\n          caption: this.state.tempImageCaption,\n          uploader: \"tenant\"\n        }],\n        // image: tempArray,\n        // visibleConfirm: false,\n        testState: \"Test Passed\"\n      });\n      this.showConfirmModal();\n    };\n\n    this.showConfirmModal = () => {\n      this.setState({\n        visibleConfirm: true\n      });\n    };\n\n    this.newComment = values => {\n      // console.log(values.nativeEvent.explicitOriginalTarget.value);\n      this.setState({\n        newComment: [{\n          content: values.nativeEvent.explicitOriginalTarget.value,\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\n          author: \"tenant\"\n        }]\n      }); // console.log(this.state.newComment)\n    };\n\n    this.submitComment = () => {\n      var tempArray = this.state.comment;\n      console.log(tempArray);\n      tempArray.push(this.state.newComment[0]);\n      console.log(tempArray);\n      this.setState({\n        comment: tempArray\n      });\n      console.log(this.state.comment);\n      this.updateComments();\n    };\n\n    this.updateComments = () => {\n      console.log(this.state);\n      updateAudit({\n        _id: this.props.tenantInfo.record._id,\n        type: this.props.tenantInfo.record.type,\n        catCounts: this.props.tenantInfo.record.catCounts,\n        total_score: this.props.tenantInfo.record.total_score,\n        image: this.props.tenantInfo.record.image,\n        date: this.props.tenantInfo.record.date,\n        comment: this.state.newComment,\n        location: this.props.tenantInfo.record.location,\n        tenantID: this.props.tenantInfo.record.tenantID\n      });\n    };\n\n    this.updateImage = () => {\n      console.log(this.state.imageUpload);\n      updateAuditImage({\n        _id: this.props.tenantInfo.record._id,\n        type: this.props.tenantInfo.record.type,\n        catCounts: this.props.tenantInfo.record.catCounts,\n        total_score: this.props.tenantInfo.record.total_score,\n        image: this.state.imageUpload,\n        date: this.props.tenantInfo.record.date,\n        comment: this.props.tenantInfo.record.comment,\n        location: this.props.tenantInfo.record.location,\n        tenantID: this.props.tenantInfo.record.tenantID\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      _id: this.props.tenantInfo.record._id,\n      total_score: this.props.tenantInfo.record.total_score,\n      tenantID: this.props.tenantInfo.record.tenantID,\n      comment: this.props.tenantInfo.record.comment,\n      image: this.props.tenantInfo.record.image,\n      date: this.props.tenantInfo.record.date,\n      catCounts: this.props.tenantInfo.record.catCounts,\n      type: this.props.tenantInfo.record.type\n    });\n  }\n\n  displayComments() {\n    var output = [];\n    var Comm = [];\n\n    for (var i = 0; i < Math.max(this.state.comment.length, this.state.image === null ? 0 : this.state.image.length); i++) {\n      Comm.push(this.state.comment[i]);\n\n      if (this.state.image[i] != null) {\n        Comm.push(this.state.image[i]);\n      }\n    }\n\n    Comm = Comm.sort((a, b) => a.date > b.date);\n    console.log(Comm);\n\n    for (var j = 0; j < Comm.length; j++) {\n      if (Comm[j].content) {\n        output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: Comm[j].author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 23\n            }, this),\n            className: \"comment\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: Comm[j].content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this));\n      } else {\n        output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: Comm[j].uploader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }, this),\n            className: \"caption\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: Comm[j].caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            width: 100,\n            src: `data:image/jpeg;base64,${Comm[j].base64}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        className: \"score\",\n        type: \"circle\",\n        percent: this.state.total_score,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Tenant: \", this.state.tenantID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Auditor: \", this.state.auditor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), this.displayComments(), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"addComment\",\n          onChange: this.newComment,\n          initialValues: {\n            remember: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"addComment\",\n            label: \"Add Comment\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: \"addCommentText\",\n              placeholder: \"Add Comment\",\n              rows: 4,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submit-comment\",\n              onClick: this.submitComment,\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              onChange: this.fileSelectedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"caption\",\n            rules: [{\n              required: true,\n              message: \"Description\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Caption\",\n              onChange: this.onChangeCaption,\n              value: this.state.caption,\n              id: \"caption\",\n              type: \"caption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleFormOk,\n            children: \"Submit Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"Upload Confirm\",\n          destroyOnClose: true,\n          visible: this.state.visibleConfirm,\n          onOk: this.handleUploadOk,\n          okButtonProps: {\n            disabled: false\n          },\n          cancelButtonProps: {\n            disabled: true,\n            visible: false\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Photo Added!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nViewAuditTenant.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps)(ViewAuditTenant);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ViewAuditTenant.js"],"names":["React","Component","Link","Typography","Progress","Image","Input","Comment","Form","Button","Modal","dateformat","PropTypes","connect","display","updateAudit","updateAuditImage","fileUpload","require","Text","TextArea","ViewAuditTenant","state","_id","audit","total_score","tenantID","auditor","comment","image","date","catCounts","type","decodedImage","newComment","tempImageBase64","tempImageCaption","imageUpload","visibleConfirm","testState","fileSelectedHandler","event","console","log","target","files","then","data","base64","setState","Date","toString","onChangeCaption","caption","nativeEvent","explicitOriginalTarget","value","handleUploadOk","e","tempArray","push","updateImage","onChange","handleFormOk","uploader","showConfirmModal","values","content","author","submitComment","updateComments","props","tenantInfo","record","location","componentDidMount","displayComments","output","Comm","i","Math","max","length","sort","a","b","j","render","remember","required","message","disabled","visible","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Progress,\r\n  Image,\r\n  Input,\r\n  Comment,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n} from \"antd\";\r\nimport dateformat from \"dateformat\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  display,\r\n  updateAudit,\r\n  updateAuditImage,\r\n} from \"../actions/auditActions.js\";\r\nconst fileUpload = require(\"fuctbase64\");\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nclass ViewAuditTenant extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    audit: \"\",\r\n    total_score: \"\",\r\n    tenantID: \"\",\r\n    auditor: \"auditor\",\r\n    // auditorComments: [\"Bla\", \"blabla\"],\r\n    // tenantComments: [\"Response\", \"response\"],\r\n    comment: \"\",\r\n    image: \"\",\r\n    date: \"\",\r\n    catCounts: \"\",\r\n    type: \"\",\r\n    decodedImage: \"\",\r\n    newComment: \"\",\r\n    tempImageBase64: [],\r\n    tempImageCaption: null,\r\n    imageUpload: [],\r\n    visibleConfirm: false,\r\n    testState: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      _id: this.props.tenantInfo.record._id,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n      comment: this.props.tenantInfo.record.comment,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      type: this.props.tenantInfo.record.type,\r\n    });\r\n  }\r\n\r\n  fileSelectedHandler = (event) => {\r\n    console.log(event.target.files[0]);\r\n    fileUpload(event).then((data) => {\r\n      console.log(\"base64: \", data.base64);\r\n      this.setState({\r\n        // image: [{ \"base64\": data.base64, \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"), \"caption\": \"\" }]\r\n        tempImageBase64: [\r\n          {\r\n            base64: data.base64,\r\n            date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          },\r\n        ],\r\n      });\r\n    });\r\n  };\r\n\r\n  onChangeCaption = (caption) => {\r\n    console.log(this.state);\r\n    this.setState({\r\n      tempImageCaption: caption.nativeEvent.explicitOriginalTarget.value,\r\n    });\r\n  };\r\n\r\n  handleUploadOk = (e) => {\r\n    console.log(e);\r\n    console.log(this.state);\r\n    var tempArray = this.state.image;\r\n    console.log(tempArray);\r\n    tempArray.push([\r\n      {\r\n        base64: this.state.tempImageBase64[0].base64,\r\n        date: this.state.tempImageBase64[0].date,\r\n        caption: this.state.tempImageCaption,\r\n      },\r\n    ]);\r\n    console.log(tempArray);\r\n    this.setState({\r\n      image: tempArray,\r\n    });\r\n    this.setState({\r\n      visibleConfirm: false,\r\n    });\r\n    this.updateImage();\r\n  };\r\n\r\n  displayComments() {\r\n    var output = [];\r\n    var Comm = [];\r\n    for (\r\n      var i = 0;\r\n      i <\r\n      Math.max(\r\n        this.state.comment.length,\r\n        this.state.image === null ? 0 : this.state.image.length\r\n      );\r\n      i++\r\n    ) {\r\n      Comm.push(this.state.comment[i]);\r\n      if (this.state.image[i] != null) {\r\n        Comm.push(this.state.image[i]);\r\n      }\r\n    }\r\n    Comm = Comm.sort((a, b) => a.date > b.date);\r\n    console.log(Comm);\r\n\r\n    for (var j = 0; j < Comm.length; j++) {\r\n      if (Comm[j].content) {\r\n        output.push(\r\n          <div>\r\n            <Comment\r\n              author={<a>{Comm[j].author}</a>}\r\n              className=\"comment\"\r\n              content={<p>{Comm[j].content}</p>}\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n          </div>\r\n        );\r\n      } else {\r\n        output.push(\r\n          <div className=\"image\">\r\n            <p></p>\r\n            <Comment\r\n              author={<a>{Comm[j].uploader}</a>}\r\n              className=\"caption\"\r\n              content={<p>{Comm[j].caption}</p>}\r\n            ></Comment>\r\n            <Image\r\n              width={100}\r\n              src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n            />\r\n            <p></p>\r\n            <p></p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return <div>{output}</div>;\r\n  }\r\n\r\n  onChange = (value) => {\r\n    console.log(value.Text);\r\n    console.log(this.state.newComment);\r\n  };\r\n\r\n  handleFormOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      imageUpload: [\r\n        {\r\n          base64: this.state.tempImageBase64[0].base64,\r\n          date: this.state.tempImageBase64[0].date,\r\n          caption: this.state.tempImageCaption,\r\n          uploader: \"tenant\",\r\n        },\r\n      ],\r\n      // image: tempArray,\r\n      // visibleConfirm: false,\r\n      testState: \"Test Passed\",\r\n    });\r\n    this.showConfirmModal();\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({\r\n      visibleConfirm: true,\r\n    });\r\n  };\r\n\r\n  newComment = (values) => {\r\n    // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n    this.setState({\r\n      newComment: [\r\n        {\r\n          content: values.nativeEvent.explicitOriginalTarget.value,\r\n          date: dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n          author: \"tenant\",\r\n        },\r\n      ],\r\n    });\r\n    // console.log(this.state.newComment)\r\n  };\r\n\r\n  submitComment = () => {\r\n    var tempArray = this.state.comment;\r\n    console.log(tempArray);\r\n    tempArray.push(this.state.newComment[0]);\r\n    console.log(tempArray);\r\n    this.setState({\r\n      comment: tempArray,\r\n    });\r\n    console.log(this.state.comment);\r\n    this.updateComments();\r\n  };\r\n\r\n  updateComments = () => {\r\n    console.log(this.state);\r\n    updateAudit({\r\n      _id: this.props.tenantInfo.record._id,\r\n      type: this.props.tenantInfo.record.type,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      image: this.props.tenantInfo.record.image,\r\n      date: this.props.tenantInfo.record.date,\r\n      comment: this.state.newComment,\r\n      location: this.props.tenantInfo.record.location,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n    });\r\n  };\r\n\r\n  updateImage = () => {\r\n    console.log(this.state.imageUpload);\r\n    updateAuditImage({\r\n      _id: this.props.tenantInfo.record._id,\r\n      type: this.props.tenantInfo.record.type,\r\n      catCounts: this.props.tenantInfo.record.catCounts,\r\n      total_score: this.props.tenantInfo.record.total_score,\r\n      image: this.state.imageUpload,\r\n      date: this.props.tenantInfo.record.date,\r\n      comment: this.props.tenantInfo.record.comment,\r\n      location: this.props.tenantInfo.record.location,\r\n      tenantID: this.props.tenantInfo.record.tenantID,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p></p>\r\n        <Progress\r\n          className=\"score\"\r\n          type=\"circle\"\r\n          percent={this.state.total_score}\r\n          width={200}\r\n        />\r\n        <div>\r\n          <Text className=\"name\">Tenant: {this.state.tenantID}</Text>\r\n          <div />\r\n          <Text className=\"name\">Auditor: {this.state.auditor}</Text>\r\n          <div />\r\n          {this.displayComments()}\r\n          <div />\r\n          <Form\r\n            className=\"addComment\"\r\n            onChange={this.newComment}\r\n            initialValues={{\r\n              remember: false,\r\n            }}\r\n          >\r\n            <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n              <TextArea\r\n                className=\"addCommentText\"\r\n                placeholder=\"Add Comment\"\r\n                rows={4}\r\n                allowClear={true}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                Submit Comment\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"caption\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Description\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Caption\"\r\n                onChange={this.onChangeCaption}\r\n                value={this.state.caption}\r\n                id=\"caption\"\r\n                type=\"caption\"\r\n              />\r\n            </Form.Item>\r\n            <Button onClick={this.handleFormOk}>Submit Photo</Button>\r\n          </Form>\r\n          <Modal\r\n            title=\"Upload Confirm\"\r\n            destroyOnClose={true}\r\n            visible={this.state.visibleConfirm}\r\n            onOk={this.handleUploadOk}\r\n            okButtonProps={{ disabled: false }}\r\n            cancelButtonProps={{ disabled: true, visible: false }}\r\n          >\r\n            <p>Photo Added!</p>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewAuditTenant.propTypes = {\r\n  tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ViewAuditTenant);\r\n"]},"metadata":{},"sourceType":"module"}