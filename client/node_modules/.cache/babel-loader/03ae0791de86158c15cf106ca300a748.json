{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport Recaptcha from \"react-recaptcha\";\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onCheckboxChange = e => {\n      this.setState({\n        usertypebool: !this.state.usertypebool\n      });\n    };\n\n    this.onFinish = values => {\n      // console.log(values);\n      // Process checkbox boolean to usertype string\n      var {\n        usertype\n      } = \"\";\n\n      if (this.state.usertypebool) {\n        usertype = \"staff\";\n      } else {\n        usertype = \"tenant\";\n      }\n\n      const userData = {\n        email: values.email,\n        password: values.password,\n        usertype: usertype\n      };\n      console.log(values);\n      this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      usertypebool: false,\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\");\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n  } // might be deprecated\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      if (this.props.auth.user.usertype === \"staff\") {\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\n      } else if (this.props.auth.user.usertype === \"tenant\") {\n        this.props.history.push(\"/tenant\");\n      }\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded\");\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onFinish: this.onFinish,\n        name: \"normal_login\",\n        className: \"login-register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to SingHealth Audit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your email and password to log in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please input your Email!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Email\",\n            onChange: this.onChange,\n            value: this.state.email,\n            error: errors.email,\n            id: \"email\",\n            type: \"email\",\n            className: classnames(\"\", {\n              invalid: errors.email || errors.emailnotfound\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please input your Password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Password\",\n            onChange: this.onChange,\n            value: this.state.password,\n            error: errors.password,\n            id: \"password\",\n            type: \"password\",\n            className: classnames(\"\", {\n              invalid: errors.password || errors.passwordincorrect\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"usertypebool\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: this.onCheckboxChange,\n            value: this.state.usertypebool,\n            error: errors.usertypebool,\n            id: \"usertypebool\",\n            children: \"Singhealth Staff Member?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"login-button\",\n            type: \"primary\",\n            htmlType: \"submit\",\n            className: \"login-register-form-button\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), \"New staff member? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Register\",\n            children: \"Register here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recaptcha, {\n        sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n        render: \"explicit\",\n        onloadCallback: recaptchaLoaded()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/auth/Login.js"],"names":["React","Component","Link","PropTypes","connect","loginUser","classnames","Recaptcha","Form","Input","Button","Checkbox","Alert","UserOutlined","LockOutlined","Login","constructor","onChange","e","setState","target","id","value","onCheckboxChange","usertypebool","state","onFinish","values","usertype","userData","email","password","console","log","props","history","errors","componentDidMount","auth","isAuthenticated","user","push","UNSAFE_componentWillReceiveProps","nextProps","recaptchaLoaded","render","required","message","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport Recaptcha from \"react-recaptcha\";\r\n\r\nimport { Form, Input, Button, Checkbox, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      usertypebool: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\");\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n  }\r\n  // might be deprecated\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      if (this.props.auth.user.usertype === \"staff\") {\r\n        this.props.history.push(\"/auditlist\"); // push staff to auditlist when they login\r\n      } else if (this.props.auth.user.usertype === \"tenant\") {\r\n        this.props.history.push(\"/tenant\");\r\n      }\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onCheckboxChange = (e) => {\r\n    this.setState({ usertypebool: !this.state.usertypebool });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    // console.log(values);\r\n    // Process checkbox boolean to usertype string\r\n    var { usertype } = \"\";\r\n    if (this.state.usertypebool) {\r\n      usertype = \"staff\";\r\n    } else {\r\n      usertype = \"tenant\";\r\n    }\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n      usertype: usertype,\r\n    };\r\n    console.log(values);\r\n\r\n    this.props.loginUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\n\r\n  recaptchaLoaded() {\r\n    console.log(\"captcha loaded\");\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <Form\r\n          onFinish={this.onFinish}\r\n          name=\"normal_login\"\r\n          className=\"login-register-form\"\r\n        >\r\n          <h2>Welcome to SingHealth Audit</h2>\r\n          <p>Enter your email and password to log in </p>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[{ required: true, message: \"Please input your Email!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              error={errors.email}\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.email || errors.emailnotfound,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n          >\r\n            <Input\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n              error={errors.password}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              className={classnames(\"\", {\r\n                invalid: errors.password || errors.passwordincorrect,\r\n              })}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"usertypebool\">\r\n            <Checkbox\r\n              onChange={this.onCheckboxChange}\r\n              value={this.state.usertypebool}\r\n              error={errors.usertypebool}\r\n              id=\"usertypebool\"\r\n            >\r\n              Singhealth Staff Member?\r\n            </Checkbox>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              id=\"login-button\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-register-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            New staff member? <Link to=\"/Register\">Register here!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n        <Recaptcha\r\n          sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\r\n          render=\"explicit\"\r\n          onloadCallback={recaptchaLoaded()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n"]},"metadata":{},"sourceType":"module"}