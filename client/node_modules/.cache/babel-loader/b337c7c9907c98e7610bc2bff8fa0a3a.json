{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\tenant\\\\TenantHome.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { Table, Tag, Space, Button } from \"antd\";\nimport { display } from \"../../actions/auditActions.js\";\nimport { auditInfo, getTenant } from \"../../actions/tenantActions\";\nimport { connect } from \"react-redux\";\nimport store from \"../../store.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table; // const Audit = (props) => (\n//   <tr>\n//     <td>{props.audit.username}</td>\n//     <td>{props.audit.image}</td>\n//     <td>{props.audit.notes}</td>\n//     <td>{props.audit.tags}</td>\n//     <td>{props.audit.date.substring(0, 10)}</td>\n//     <td>\n//       <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\n//       <a\n//         href=\"#\"\n//         onClick={() => {\n//           props.deleteAudit(props.audit._id);\n//         }}\n//       >\n//         delete\n//       </a>\n//     </td>\n//   </tr>\n// );\n\nclass TenantHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onViewClick = record => {\n      //pass to redux\n      this.props.auditInfo({\n        record\n      }); //if FB, go to FB | if non-FB go to non-FB\n\n      this.props.history.push(\"/viewaudittenant\"); // this.props.tenantInfo = record;\n\n      console.log({\n        record\n      });\n    };\n\n    this.deleteAudit = this.deleteAudit.bind(this);\n    this.display = this.display.bind(this);\n    this.state = {\n      audits: [],\n      actualAudits: [],\n      userID: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted: \", store.getState().auth.user.id);\n    this.setState({\n      userID: store.getState().auth.user.id\n    }); // getTenant((data) => {\n    //   for (var i = 0; i < data.length; i++) {\n    //     if (data[i].userId == store.getState().auth.user.id) {\n    //       this.setState({ userID: data[i]._id });\n    //     }\n    //   }\n    // });\n\n    this.props.display(data => {\n      console.log(\"data is: \", data);\n      var tempList = [];\n\n      for (var i = 0; i < data.length; i++) {\n        console.log(data[i]);\n\n        if (data[i].tenantID == this.state.userID) {\n          tempList.push(data[i]);\n        }\n      }\n\n      this.setState({\n        actualAudits: tempList\n      });\n    }); // this.auditList();\n  }\n\n  deleteAudit(id) {\n    axios.delete(\"http://localhost:5000/audits/\" + id).then(res => console.log(res.data));\n    this.setState({\n      audits: this.state.audits.filter(el => el._id !== id)\n    });\n  }\n\n  auditList() {\n    for (var i = 0; i < this.state.audits.length; i++) {\n      console.log(this.state.audits[i]);\n\n      if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\n        this.state.actualAudits.push(this.state.audits[i]);\n      }\n    }\n\n    return this.state.actualAudits.map(currentaudit => {\n      return /*#__PURE__*/_jsxDEV(Audit, {\n        audit: currentaudit,\n        deleteAudit: this.deleteAudit\n      }, currentaudit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: this.state.actualAudits,\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"Your Audits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 24\n        }, this),\n        scroll: {\n          x: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"Type\",\n          dataIndex: \"type\"\n        }, \"type\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Date\",\n          dataIndex: \"date\"\n        }, \"date\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Total Score\",\n          dataIndex: \"total_score\"\n        }, \"total_score\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"View Audit\",\n          dataIndex: \"view_audit\",\n          render: (text, record) => /*#__PURE__*/_jsxDEV(Button, {\n            className: \"action-buttons\",\n            type: \"primary\",\n            size: \"small\",\n            onClick: () => this.onViewClick(record),\n            children: \"View Audit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, \"view_audit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTenantHome.propTypes = {\n  auditInfo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userID: state.auth.user.id\n});\n\nexport default connect(mapStateToProps, {\n  auditInfo,\n  getTenant,\n  display\n})(TenantHome);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/tenant/TenantHome.js"],"names":["React","Component","Link","axios","NavLink","useHistory","Table","Tag","Space","Button","display","auditInfo","getTenant","connect","store","PropTypes","Column","ColumnGroup","TenantHome","constructor","props","onViewClick","record","history","push","console","log","deleteAudit","bind","state","audits","actualAudits","userID","componentDidMount","getState","auth","user","id","setState","data","tempList","i","length","tenantID","delete","then","res","filter","el","_id","auditList","map","currentaudit","render","x","text","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport { display } from \"../../actions/auditActions.js\";\r\nimport { auditInfo, getTenant } from \"../../actions/tenantActions\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../store.js\";\r\nimport PropTypes from \"prop-types\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n// const Audit = (props) => (\r\n//   <tr>\r\n//     <td>{props.audit.username}</td>\r\n//     <td>{props.audit.image}</td>\r\n//     <td>{props.audit.notes}</td>\r\n//     <td>{props.audit.tags}</td>\r\n//     <td>{props.audit.date.substring(0, 10)}</td>\r\n//     <td>\r\n//       <Link to={\"/edit/\" + props.audit._id}>edit</Link> |\r\n//       <a\r\n//         href=\"#\"\r\n//         onClick={() => {\r\n//           props.deleteAudit(props.audit._id);\r\n//         }}\r\n//       >\r\n//         delete\r\n//       </a>\r\n//     </td>\r\n//   </tr>\r\n// );\r\n\r\nclass TenantHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteAudit = this.deleteAudit.bind(this);\r\n    this.display = this.display.bind(this);\r\n    this.state = {\r\n      audits: [],\r\n      actualAudits: [],\r\n      userID: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Mounted: \", store.getState().auth.user.id);\r\n    this.setState({ userID: store.getState().auth.user.id });\r\n    // getTenant((data) => {\r\n    //   for (var i = 0; i < data.length; i++) {\r\n    //     if (data[i].userId == store.getState().auth.user.id) {\r\n    //       this.setState({ userID: data[i]._id });\r\n    //     }\r\n    //   }\r\n    // });\r\n    this.props.display((data) => {\r\n      console.log(\"data is: \", data);\r\n      var tempList = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        console.log(data[i]);\r\n        if (data[i].tenantID == this.state.userID) {\r\n          tempList.push(data[i]);\r\n        }\r\n      }\r\n      this.setState({ actualAudits: tempList });\r\n    });\r\n    // this.auditList();\r\n  }\r\n\r\n  deleteAudit(id) {\r\n    axios\r\n      .delete(\"http://localhost:5000/audits/\" + id)\r\n      .then((res) => console.log(res.data));\r\n    this.setState({\r\n      audits: this.state.audits.filter((el) => el._id !== id),\r\n    });\r\n  }\r\n\r\n  onViewClick = (record) => {\r\n    //pass to redux\r\n    this.props.auditInfo({ record });\r\n    //if FB, go to FB | if non-FB go to non-FB\r\n    this.props.history.push(\"/viewaudittenant\");\r\n    // this.props.tenantInfo = record;\r\n    console.log({ record });\r\n  };\r\n\r\n  auditList() {\r\n    for (var i = 0; i < this.state.audits.length; i++) {\r\n      console.log(this.state.audits[i]);\r\n      if (this.state.audits[i].tenantID == \"606d8d37f1c72db7882af5c4\") {\r\n        this.state.actualAudits.push(this.state.audits[i]);\r\n      }\r\n    }\r\n    return this.state.actualAudits.map((currentaudit) => {\r\n      return (\r\n        <Audit\r\n          audit={currentaudit}\r\n          deleteAudit={this.deleteAudit}\r\n          key={currentaudit._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={this.state.actualAudits}\r\n          title={() => <div className=\"table-title\">Your Audits</div>}\r\n          scroll={{ x: 400 }}\r\n        >\r\n          <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\r\n          {/* <Column title=\"Tenant\" dataIndex=\"tenantID\" key=\"tenantID\" /> */}\r\n          <Column title=\"Date\" dataIndex=\"date\" key=\"date\" />\r\n          <Column\r\n            title=\"Total Score\"\r\n            dataIndex=\"total_score\"\r\n            key=\"total_score\"\r\n          />\r\n          <Column\r\n            title=\"View Audit\"\r\n            dataIndex=\"view_audit\"\r\n            key=\"view_audit\"\r\n            render={(text, record) => (\r\n              <Button\r\n                className=\"action-buttons\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => this.onViewClick(record)}\r\n              >\r\n                View Audit\r\n              </Button>\r\n            )}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTenantHome.propTypes = {\r\n  auditInfo: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userID: state.auth.user.id,\r\n});\r\nexport default connect(mapStateToProps, { auditInfo, getTenant, display })(\r\n  TenantHome\r\n);\r\n"]},"metadata":{},"sourceType":"module"}