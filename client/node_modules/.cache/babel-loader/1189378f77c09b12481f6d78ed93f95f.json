{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\TenantList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Input, Button, Space, Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { connect } from \"react-redux\";\nimport { getTenants } from \"../actions/tenantActions\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table; // const hardData = [\n//   {\n//     _id: \"60631883a28310df640dcfe9\",\n//     userId: \"60631883a28310df640dcfe8\",\n//     address: \"addtenent7\",\n//     institution: \"CGH\",\n//     auditor: \"1\",\n//     __v: 0,\n//   },\n//   {\n//     _id: \"60631d491b5182a0d81d3942\",\n//     userId: \"60631d491b5182a0d81d3941\",\n//     address: \"tenant1\",\n//     institution: \"SGH\",\n//     auditor: \"staff1\",\n//     __v: 0,\n//   },\n// ];\n\nclass Directory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tenantData: []\n    };\n  } // TODO: can't get data to assign to state before rendering\n\n\n  componentDidMount() {\n    console.log(\"data\");\n    this.props.getTenants(data => {\n      this.setState({\n        tenantData: data\n      });\n      console.log(this.state.tenantData);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: this.state.tenantData,\n        scroll: {\n          x: 400\n        },\n        title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-title\",\n          children: \"Tenants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"Address\",\n          dataIndex: \"address\"\n        }, \"address\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Institution\",\n          dataIndex: \"institution\"\n        }, \"institution\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Auditor\",\n          dataIndex: \"auditor\"\n        }, \"auditor\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"User Id\",\n          dataIndex: \"userId\"\n        }, \"userId\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this); //     <div className=\"panels\">\n    //       {/* <Table> */}\n    //       {this.state.tenants.map((tenant, tenIndex) => {\n    //         console.log(tenant);\n    //         return <div>{tenant}</div>;\n    //       })}\n    //       {/* </Table> */}\n    //     </div>\n    //   );\n    // }\n  }\n\n}\n\nDirectory.propTypes = {\n  getTenants: PropTypes.func.isRequired,\n  tenantData: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantData: state.tenantData\n});\n\nexport default connect(mapStateToProps, {\n  getTenants\n})(Directory);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/TenantList.js"],"names":["React","Component","axios","Input","Button","Space","Table","Highlighter","connect","getTenants","PropTypes","Column","ColumnGroup","Directory","constructor","state","tenantData","componentDidMount","console","log","props","data","setState","render","x","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BN,KAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMO,SAAN,SAAwBZ,SAAxB,CAAkC;AAChCa,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD,GAN+B,CAQhC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,SAAKC,KAAL,CAAWX,UAAX,CAAuBY,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEK;AAAd,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,UAAvB;AACD,KAHD;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,UADzB;AAEE,QAAA,MAAM,EAAE;AAAEQ,UAAAA,CAAC,EAAE;AAAL,SAFV;AAGE,QAAA,KAAK,EAAE,mBAAM;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHf;AAAA,gCAKE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,SAAS,EAAC;AAAlC,WAAgD,SAAhD;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,aADR;AAEE,UAAA,SAAS,EAAC;AAFZ,WAGM,aAHN;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,SAAS,EAAC;AAAlC,WAAgD,SAAhD;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,SAAS,EAAC;AAAlC,WAA+C,QAA/C;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CADO,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AA/C+B;;AAkDlCX,SAAS,CAACY,SAAV,GAAsB;AACpBhB,EAAAA,UAAU,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UADP;AAEpBX,EAAAA,UAAU,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAFT,CAAtB;;AAIA,MAAME,eAAe,GAAId,KAAD,KAAY;AAClCC,EAAAA,UAAU,EAAED,KAAK,CAACC;AADgB,CAAZ,CAAxB;;AAGA,eAAeR,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAyCI,SAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Input, Button, Space, Table } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getTenants } from \"../actions/tenantActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n// const hardData = [\r\n//   {\r\n//     _id: \"60631883a28310df640dcfe9\",\r\n//     userId: \"60631883a28310df640dcfe8\",\r\n//     address: \"addtenent7\",\r\n//     institution: \"CGH\",\r\n//     auditor: \"1\",\r\n//     __v: 0,\r\n//   },\r\n//   {\r\n//     _id: \"60631d491b5182a0d81d3942\",\r\n//     userId: \"60631d491b5182a0d81d3941\",\r\n//     address: \"tenant1\",\r\n//     institution: \"SGH\",\r\n//     auditor: \"staff1\",\r\n//     __v: 0,\r\n//   },\r\n// ];\r\nclass Directory extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tenantData: [],\r\n    };\r\n  }\r\n\r\n  // TODO: can't get data to assign to state before rendering\r\n  componentDidMount() {\r\n    console.log(\"data\");\r\n\r\n    this.props.getTenants((data) => {\r\n      this.setState({ tenantData: data });\r\n      console.log(this.state.tenantData);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        <Table\r\n          dataSource={this.state.tenantData}\r\n          scroll={{ x: 400 }}\r\n          title={() => <div className=\"table-title\">Tenants</div>}\r\n        >\r\n          <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\r\n          <Column\r\n            title=\"Institution\"\r\n            dataIndex=\"institution\"\r\n            key=\"institution\"\r\n          />\r\n          <Column title=\"Auditor\" dataIndex=\"auditor\" key=\"auditor\" />\r\n          <Column title=\"User Id\" dataIndex=\"userId\" key=\"userId\" />\r\n        </Table>\r\n      </div>\r\n    );\r\n    //     <div className=\"panels\">\r\n    //       {/* <Table> */}\r\n    //       {this.state.tenants.map((tenant, tenIndex) => {\r\n    //         console.log(tenant);\r\n    //         return <div>{tenant}</div>;\r\n    //       })}\r\n    //       {/* </Table> */}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n\r\nDirectory.propTypes = {\r\n  getTenants: PropTypes.func.isRequired,\r\n  tenantData: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tenantData: state.tenantData,\r\n});\r\nexport default connect(mapStateToProps, { getTenants })(Directory);\r\n"]},"metadata":{},"sourceType":"module"}