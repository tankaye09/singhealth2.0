{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_SELECTED_TENANT } from \"./types\"; // Get Tenants\n\nexport const getTenants = onDataReceived => dispatch => {\n  axios.get(\"/api/tenants\").then(response => {\n    // console.log(\"response is:\", response.data);\n    onDataReceived(response.data);\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }) // console.log(\"err\")\n  );\n}; // Update tenantInfo in store with the row selected tenantInfo\n\nexport const setSelectedTenant = tenantInfo => {\n  console.log(tenantInfo);\n  return {\n    type: SET_SELECTED_TENANT,\n    payload: {\n      tenantInfo\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/actions/tenantActions.js"],"names":["axios","GET_ERRORS","SET_SELECTED_TENANT","getTenants","onDataReceived","dispatch","get","then","response","data","catch","err","type","payload","setSelectedTenant","tenantInfo","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,SAAhD,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,cAAD,IAAqBC,QAAD,IAAc;AAC1DL,EAAAA,KAAK,CACFM,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB;AACAJ,IAAAA,cAAc,CAACI,QAAQ,CAACC,IAAV,CAAd;AACD,GALH,EAMGC,KANH,CAOKC,GAAD,IACEN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEX,UADC;AAEPY,IAAAA,OAAO,EAAEF,GAAG,CAACH,QAAJ,CAAaC;AAFf,GAAD,CARd,CAYI;AAZJ;AAcD,CAfM,C,CAiBP;;AACA,OAAO,MAAMK,iBAAiB,GAAIC,UAAD,IAAgB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAO;AACLH,IAAAA,IAAI,EAAEV,mBADD;AAELW,IAAAA,OAAO,EAAE;AAAEE,MAAAA;AAAF;AAFJ,GAAP;AAID,CANM","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, SET_SELECTED_TENANT } from \"./types\";\r\n\r\n// Get Tenants\r\nexport const getTenants = (onDataReceived) => (dispatch) => {\r\n  axios\r\n    .get(\"/api/tenants\")\r\n    .then((response) => {\r\n      // console.log(\"response is:\", response.data);\r\n      onDataReceived(response.data);\r\n    })\r\n    .catch(\r\n      (err) =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data,\r\n        })\r\n      // console.log(\"err\")\r\n    );\r\n};\r\n\r\n// Update tenantInfo in store with the row selected tenantInfo\r\nexport const setSelectedTenant = (tenantInfo) => {\r\n  console.log(tenantInfo);\r\n  return {\r\n    type: SET_SELECTED_TENANT,\r\n    payload: { tenantInfo },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}