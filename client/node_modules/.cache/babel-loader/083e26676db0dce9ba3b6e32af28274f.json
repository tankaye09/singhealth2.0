{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ViewAudit.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nexport default class ViewAudit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"85\",\n      tenant: \"tenant1\",\n      auditor: \"auditor\",\n      auditorComments: [\"Bla\", \"blabla\"],\n      tenantComments: [\"Response\", \"response\"],\n      image: \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\",\n      decodedImage: \"\",\n      newComment: \"\"\n    };\n\n    this.onChange = value => {\n      console.log(value.Text);\n      this.setState({\n        newComment: value\n      });\n      console.log(this.state.newComment);\n    };\n\n    this.newComment = values => {\n      // console.log(values.nativeEvent.explicitOriginalTarget.value);\n      this.setState({\n        newComment: values.nativeEvent.explicitOriginalTarget.value\n      }); // console.log(this.state.newComment)\n    };\n\n    this.submitComment = () => {\n      var tempArray = this.state.auditorComments;\n      console.log(tempArray);\n      tempArray.push(this.state.newComment);\n      console.log(tempArray);\n      this.setState({\n        auditorComments: tempArray\n      });\n      console.log(this.state.auditorComments);\n    };\n  }\n\n  displayComments() {\n    var Comm = [];\n\n    for (var i = 0; i < Math.max(this.state.auditorComments.length, this.state.tenantComments.length); i++) {\n      if (this.state.auditorComments[i] != null) {\n        Comm.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: this.state.auditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this),\n            className: \"comment\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.auditorComments[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }, this));\n      }\n\n      if (this.state.tenantComments[i] != null) {\n        Comm.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: this.state.tenant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this),\n            className: \"comment\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.tenantComments[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Comm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        className: \"score\",\n        type: \"circle\",\n        percent: this.state.input,\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Tenant: \", this.state.tenant]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Auditor: \", this.state.auditor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name2\",\n          children: \"ImageList:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          width: 200,\n          src: `data:image/jpeg;base64,${this.state.image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), this.displayComments(), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"addComment\",\n          onChange: this.newComment,\n          initialValues: {\n            remember: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"addComment\",\n            label: \"Add Comment\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: \"addCommentText\",\n              placeholder: \"Add Comment\",\n              rows: 4,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submit-comment\",\n              onClick: this.submitComment,\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ViewAudit.js"],"names":["React","Component","Link","Typography","Progress","Image","Input","Comment","Form","Button","Text","TextArea","ViewAudit","state","input","tenant","auditor","auditorComments","tenantComments","image","decodedImage","newComment","onChange","value","console","log","setState","values","nativeEvent","explicitOriginalTarget","submitComment","tempArray","push","displayComments","Comm","i","Math","max","length","render","remember"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\nexport default class ViewAudit extends Component {\r\n    state = {\r\n        input: \"85\",\r\n        tenant: \"tenant1\",\r\n        auditor: \"auditor\",\r\n        auditorComments: [\"Bla\", \"blabla\"],\r\n        tenantComments: [\"Response\", \"response\"],\r\n        image: \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\",\r\n        decodedImage: \"\",\r\n        newComment: \"\",\r\n    };\r\n\r\n\r\n\r\n    displayComments() {\r\n        var Comm = [];\r\n        for (var i = 0; i < Math.max(this.state.auditorComments.length, this.state.tenantComments.length); i++) {\r\n            if (this.state.auditorComments[i] != null) {\r\n                Comm.push(<div>\r\n                    <Comment\r\n                        author={<a>{this.state.auditor}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{this.state.auditorComments[i]}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n            if (this.state.tenantComments[i] != null) {\r\n                Comm.push(<div>\r\n                    <Comment\r\n                        author={<a>{this.state.tenant}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{this.state.tenantComments[i]}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {Comm}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange = value => {\r\n        console.log(value.Text);\r\n        this.setState({\r\n            newComment: value\r\n        })\r\n        console.log(this.state.newComment);\r\n    };\r\n\r\n    newComment = (values) => {\r\n        // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n        this.setState({\r\n            newComment: values.nativeEvent.explicitOriginalTarget.value\r\n        })\r\n        // console.log(this.state.newComment)\r\n    }\r\n\r\n    submitComment = () => {\r\n        var tempArray = this.state.auditorComments;\r\n        console.log(tempArray);\r\n        tempArray.push(this.state.newComment);\r\n        console.log(tempArray);\r\n        this.setState({\r\n            auditorComments: tempArray,\r\n        })\r\n        console.log(this.state.auditorComments);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <Progress className=\"score\"\r\n                    type=\"circle\"\r\n                    percent={this.state.input} width={300} />\r\n                <div>\r\n                    <Text className=\"name\">\r\n                        Tenant: {this.state.tenant}\r\n                    </Text>\r\n                    <div />\r\n                    <Text className=\"name\">\r\n                        Auditor: {this.state.auditor}\r\n                    </Text>\r\n                    <div />\r\n                    <p className=\"name2\">ImageList:</p>\r\n                    <Image\r\n                        width={200}\r\n                        src={`data:image/jpeg;base64,${this.state.image}`}\r\n                    />\r\n                    <div />\r\n                    {this.displayComments()}\r\n                    <div />\r\n                    <Form className=\"addComment\" onChange={this.newComment} initialValues={{\r\n                        remember: false,\r\n                    }}>\r\n                        <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n                            <TextArea className=\"addCommentText\" placeholder=\"Add Comment\" rows={4} allowClear={true} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                                Submit Comment\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}