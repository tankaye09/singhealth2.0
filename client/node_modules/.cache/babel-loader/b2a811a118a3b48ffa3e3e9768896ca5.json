{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\MessageDisplay.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessageDisplay extends Component {\n  constructor() {\n    super();\n\n    this.onClose = () => {\n      this.setState({\n        errors: {},\n        messages: {}\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.state = {\n      errors: {},\n      messages: {},\n      visible: true\n    };\n  } // might be deprecated\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Object.keys(errors).length !== 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: Object.values(errors),\n        type: \"warning\",\n        className: \"error-message\",\n        closable: true,\n        onClose: this.onClose,\n        afterClose: this.handleClose,\n        banner: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) // Error shown when redux state errors is not empty\n      : \"\", Object.keys(errors).length !== 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: Object.values(errors),\n        type: \"warning\",\n        className: \"error-message\",\n        closable: true,\n        onClose: this.onClose,\n        afterClose: this.handleClose,\n        banner: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) // Error shown when redux state errors is not empty\n      : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMessageDisplay.propTypes = {\n  errors: PropTypes.object.isRequired,\n  messages: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps)(MessageDisplay);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/MessageDisplay.js"],"names":["React","Component","PropTypes","connect","Alert","MessageDisplay","constructor","onClose","setState","errors","messages","handleClose","visible","state","componentWillReceiveProps","nextProps","render","Object","keys","length","values","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,KAAT,QAAsB,MAAtB;;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACrCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,OAlBc,GAkBJ,MAAM;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,EADI;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAvBa;;AAAA,SAyBdC,WAzBc,GAyBA,MAAM;AAClB,WAAKH,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA7Ba;;AAEZ,SAAKC,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD,GARoC,CAUrC;;;AACAE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACN,MAAd,EAAsB;AACpB,WAAKD,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEM,SAAS,CAACN;AADN,OAAd;AAGD;AACF;;AAeDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAa,KAAKI,KAAxB;AACA,wBACE;AAAA,iBACGI,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,KAA+B,CAA/B,gBACC,QAAC,KAAD;AACE,QAAA,OAAO,EAAEF,MAAM,CAACG,MAAP,CAAcX,MAAd,CADX;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,OAAO,EAAE,KAAKF,OALhB;AAME,QAAA,UAAU,EAAE,KAAKI,WANnB;AAOE,QAAA,MAAM;AAPR;AAAA;AAAA;AAAA;AAAA,cADD,CASI;AATJ,QAWC,EAZJ,EAcGM,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,KAA+B,CAA/B,gBACC,QAAC,KAAD;AACE,QAAA,OAAO,EAAEF,MAAM,CAACG,MAAP,CAAcX,MAAd,CADX;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,OAAO,EAAE,KAAKF,OALhB;AAME,QAAA,UAAU,EAAE,KAAKI,WANnB;AAOE,QAAA,MAAM;AAPR;AAAA;AAAA;AAAA;AAAA,cADD,CASI;AATJ,QAWC,EAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAhEoC;;AAkEvCN,cAAc,CAACgB,SAAf,GAA2B;AACzBZ,EAAAA,MAAM,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADA;AAEzBb,EAAAA,QAAQ,EAAER,SAAS,CAACoB,MAAV,CAAiBC;AAFF,CAA3B;;AAIA,MAAMC,eAAe,GAAIX,KAAD,KAAY;AAClCJ,EAAAA,MAAM,EAAEI,KAAK,CAACJ,MADoB;AAElCC,EAAAA,QAAQ,EAAEG,KAAK,CAACH;AAFkB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,cAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Alert } from \"antd\";\r\n\r\nclass MessageDisplay extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      messages: {},\r\n      visible: true,\r\n    };\r\n  }\r\n\r\n  // might be deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      errors: {},\r\n      messages: {},\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        {Object.keys(errors).length !== 0 ? (\r\n          <Alert\r\n            message={Object.values(errors)}\r\n            type=\"warning\"\r\n            className=\"error-message\"\r\n            closable\r\n            onClose={this.onClose}\r\n            afterClose={this.handleClose}\r\n            banner\r\n          /> // Error shown when redux state errors is not empty\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {Object.keys(errors).length !== 0 ? (\r\n          <Alert\r\n            message={Object.values(errors)}\r\n            type=\"warning\"\r\n            className=\"error-message\"\r\n            closable\r\n            onClose={this.onClose}\r\n            afterClose={this.handleClose}\r\n            banner\r\n          /> // Error shown when redux state errors is not empty\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMessageDisplay.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  messages: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  messages: state.messages,\r\n});\r\nexport default connect(mapStateToProps)(MessageDisplay);\r\n"]},"metadata":{},"sourceType":"module"}