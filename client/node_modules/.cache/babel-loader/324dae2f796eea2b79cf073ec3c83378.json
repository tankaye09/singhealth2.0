{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\Checklist.js\";\nimport \"../App.css\";\nimport { Collapse, Divider, List, Input, Checkbox, Button } from \"antd\";\nimport React, { Component } from \"react\";\nimport importJSON from \"../data/questionsDict.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fb = importJSON.fb;\nconst {\n  Panel\n} = Collapse;\n\nclass Checklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentWillMount = () => {\n      this.selectedCheckboxes = new Set();\n    };\n\n    this.toggleCheckbox = label => {\n      if (this.selectedCheckboxes.has(label)) {\n        this.selectedCheckboxes.delete(label);\n      } else {\n        this.selectedCheckboxes.add(label);\n      }\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n\n      for (const checkbox of this.selectedCheckboxes) {\n        console.log(checkbox, 'is selected.');\n      }\n    };\n\n    this.createprofCheckbox = label => /*#__PURE__*/_jsxDEV(Checkbox, {\n      label: label,\n      handleCheckboxChange: this.toggleCheckbox,\n      onChange: e => this.handleprofCheckCount(e)\n    }, label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      checked: false,\n      profcount: 0\n    };\n\n    this.handleprofCheckCount = e => {\n      const {\n        checked,\n        type\n      } = e.target;\n\n      if (type === \"checkbox\" && checked === true) {\n        this.setState(state => state.profcount++, this.logCount);\n      } else {\n        this.setState(state => state.profcount--, this.logCount);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panels\",\n      children: [Fb.map((cat, catIndex) => {\n        return (\n          /*#__PURE__*/\n          // Category\n          _jsxDEV(Collapse, {\n            defaultActiveKey: [\"1\"],\n            children: /*#__PURE__*/_jsxDEV(Panel, {\n              header: /*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this),\n              className: \"bg-orange\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                catIndex: catIndex,\n                children: cat.subcategories.map((subCat, subCatIndex) => {\n                  return (\n                    /*#__PURE__*/\n                    // SubCategory\n                    _jsxDEV(Collapse, {\n                      defaultActiveKey: [\"1\"],\n                      children: /*#__PURE__*/_jsxDEV(Panel, {\n                        header: /*#__PURE__*/_jsxDEV(\"div\", {\n                          subCatIndex: subCatIndex,\n                          children: subCat.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 33\n                        }, this),\n                        className: \"bg-orange\",\n                        children: /*#__PURE__*/_jsxDEV(List, {\n                          dataSource: subCat.questions // Questions\n                          ,\n                          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"create-audit-row\",\n                              children: item\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 85,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: this.createprofCheckbox()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 86,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 81,\n                          columnNumber: 31\n                        }, this)\n                      }, subCatIndex + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this)\n                  );\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"pt-10 font-bold text-right\",\n                children: [\"Score: \", this.state.profcount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, catIndex + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        );\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.cat0count + this.state.cat1count + this.state.cat2count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"submit-button\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Checklist;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/singhealth2.0/client/src/components/Checklist.js"],"names":["Collapse","Divider","List","Input","Checkbox","Button","React","Component","importJSON","Fb","fb","Panel","Checklist","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","console","log","createprofCheckbox","e","handleprofCheckCount","state","checked","profcount","type","target","setState","logCount","render","map","cat","catIndex","name","subcategories","subCat","subCatIndex","questions","item","cat0count","cat1count","cat2count"],"mappings":"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","sourcesContent":["\r\nimport \"../App.css\";\r\nimport { Collapse, Divider, List, Input, Checkbox, Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport importJSON from \"../data/questionsDict.json\";\r\nconst Fb = importJSON.fb;\r\nconst { Panel } = Collapse;\r\n\r\n\r\n\r\nclass Checklist extends Component {\r\n    componentWillMount = () => {\r\n        this.selectedCheckboxes = new Set();\r\n      }\r\n    \r\n      toggleCheckbox = label => {\r\n        if (this.selectedCheckboxes.has(label)) {\r\n          this.selectedCheckboxes.delete(label);\r\n        } else {\r\n          this.selectedCheckboxes.add(label);\r\n        }\r\n      }\r\n    \r\n      handleFormSubmit = formSubmitEvent => {\r\n        formSubmitEvent.preventDefault();\r\n    \r\n        for (const checkbox of this.selectedCheckboxes) {\r\n          console.log(checkbox, 'is selected.');\r\n        }\r\n      }\r\n    \r\n      createprofCheckbox = label => (\r\n        <Checkbox\r\n                label={label}\r\n                handleCheckboxChange={this.toggleCheckbox}\r\n                key={label}\r\n                onChange = {e => this.handleprofCheckCount(e)}\r\n            />\r\n      )\r\n\r\n      state={\r\n          checked:false,\r\n          profcount:0\r\n      }\r\n      handleprofCheckCount=(e)=>{\r\n          const {checked,type} = e.target;\r\n          if(type === \"checkbox\" && checked === true) {\r\n            this.setState(state => state.profcount++, this.logCount)\r\n          } else {\r\n            this.setState(state => state.profcount--, this.logCount)\r\n          }\r\n          \r\n      }\r\n \r\n      render() {\r\n        return (\r\n          <div className=\"panels\">\r\n            {Fb.map((cat, catIndex) => {\r\n              return (\r\n                // Category\r\n    \r\n                <Collapse defaultActiveKey={[\"1\"]}>\r\n                  <Panel\r\n                    header={<div catIndex={catIndex}>{cat.name}</div>}\r\n                    key={catIndex + 1}\r\n                    className=\"bg-orange\"\r\n                  >\r\n                    <div catIndex={catIndex}>\r\n                      {cat.subcategories.map((subCat, subCatIndex) => {\r\n                        return (\r\n                          // SubCategory\r\n                          <Collapse defaultActiveKey={[\"1\"]}>\r\n                            \r\n                            <Panel\r\n                              header={\r\n                                <div subCatIndex={subCatIndex}>{subCat.name}</div>\r\n                              }\r\n                              key={subCatIndex + 1}\r\n                              className=\"bg-orange\"\r\n                            >\r\n                              <List\r\n                                dataSource={subCat.questions} // Questions\r\n                                renderItem={(item) => (\r\n                                  <List.Item>\r\n                                    <div className=\"create-audit-row\">{item}</div>\r\n                                    <div>{this.createprofCheckbox()}</div>\r\n                                  </List.Item>\r\n                                )}\r\n                              />\r\n    \r\n                            </Panel> \r\n                          </Collapse>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                    <div class=\"pt-10 font-bold text-right\">Score: {this.state.profcount}</div>\r\n      \r\n                  </Panel>\r\n                </Collapse>\r\n              );\r\n            })}\r\n            <div>{this.state.cat0count+this.state.cat1count+this.state.cat2count}</div>\r\n            <Button className=\"submit-button\" type=\"primary\" htmlType=\"submit\">\r\n              SUBMIT\r\n            </Button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default Checklist;\r\n    "]},"metadata":{},"sourceType":"module"}