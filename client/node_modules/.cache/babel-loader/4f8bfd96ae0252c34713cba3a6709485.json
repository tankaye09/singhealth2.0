{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\ViewAuditTenant.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\nimport dateformat from \"dateformat\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { display, updateAudit } from \"../actions/auditActions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nclass ViewAuditTenant extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: this.props.tenantInfo.record._id,\n      audit: null,\n      total_score: this.props.tenantInfo.record.total_score,\n      tenantID: this.props.tenantInfo.record.tenantID,\n      auditor: \"auditor\",\n      // auditorComments: [\"Bla\", \"blabla\"],\n      // tenantComments: [\"Response\", \"response\"],\n      comment: this.props.tenantInfo.record.comment,\n      image: this.props.tenantInfo.record.image,\n      date: this.props.tenantInfo.record.date,\n      catCounts: this.props.tenantInfo.record.catCounts,\n      type: this.props.tenantInfo.record.type,\n      decodedImage: \"\",\n      newComment: \"\"\n    };\n\n    this.onChange = value => {\n      console.log(value.Text);\n      console.log(this.state.newComment);\n    };\n\n    this.newComment = values => {\n      // console.log(values.nativeEvent.explicitOriginalTarget.value);\n      this.setState({\n        newComment: [{\n          \"content\": values.nativeEvent.explicitOriginalTarget.value,\n          \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\n          \"author\": \"tenant\"\n        }]\n      }); // console.log(this.state.newComment)\n    };\n\n    this.submitComment = () => {\n      var tempArray = this.state.comment;\n      console.log(tempArray);\n      tempArray.push(this.state.newComment[0]);\n      console.log(tempArray);\n      this.setState({\n        comment: tempArray\n      });\n      console.log(this.state.comment);\n      this.update();\n    };\n\n    this.update = () => {\n      console.log(this.state);\n      updateAudit({\n        _id: this.props.tenantInfo.record._id,\n        type: this.props.tenantInfo.record.type,\n        catCounts: this.props.tenantInfo.record.catCounts,\n        total_score: this.props.tenantInfo.record.total_score,\n        image: this.props.tenantInfo.record.image,\n        date: this.props.tenantInfo.record.date,\n        comment: this.state.comment,\n        location: this.props.tenantInfo.record.location,\n        tenantID: this.props.tenantInfo.record.tenantID\n      });\n    };\n  }\n\n  displayComments() {\n    var output = [];\n    var Comm = [];\n\n    for (var i = 0; i < Math.max(this.state.comment.length, this.state.image.length); i++) {\n      Comm.push(this.state.comment[i]);\n\n      if (this.state.image[i] != null) {\n        Comm.push(this.state.image[i]);\n      }\n    }\n\n    Comm = Comm.sort((a, b) => a.date > b.date);\n    console.log(Comm);\n\n    for (var j = 0; j < Comm.length; j++) {\n      if (Comm[j].content) {\n        output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: Comm[j].author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this),\n            className: \"comment\",\n            content: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: Comm[j].content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this));\n      } else {\n        output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            width: 100,\n            src: `data:image/jpeg;base64,${Comm[j].base64}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        className: \"score\",\n        type: \"circle\",\n        percent: this.state.total_score,\n        width: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Tenant: \", this.state.tenantID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          className: \"name\",\n          children: [\"Auditor: \", this.state.auditor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), this.displayComments(), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"addComment\",\n          onChange: this.newComment,\n          initialValues: {\n            remember: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"addComment\",\n            label: \"Add Comment\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: \"addCommentText\",\n              placeholder: \"Add Comment\",\n              rows: 4,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submit-comment\",\n              onClick: this.submitComment,\n              children: \"Submit Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nViewAuditTenant.propTypes = {\n  tenantInfo: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tenantInfo: state.tenantInfo\n});\n\nexport default connect(mapStateToProps)(ViewAuditTenant);","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/ViewAuditTenant.js"],"names":["React","Component","Link","Typography","Progress","Image","Input","Comment","Form","Button","dateformat","PropTypes","connect","display","updateAudit","Text","TextArea","ViewAuditTenant","state","_id","props","tenantInfo","record","audit","total_score","tenantID","auditor","comment","image","date","catCounts","type","decodedImage","newComment","onChange","value","console","log","values","setState","nativeEvent","explicitOriginalTarget","Date","toString","submitComment","tempArray","push","update","location","displayComments","output","Comm","i","Math","max","length","sort","a","b","j","content","author","base64","render","remember","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Progress, Image, Input, Comment, Form, Button } from \"antd\";\r\nimport dateformat from \"dateformat\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { display, updateAudit } from \"../actions/auditActions.js\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass ViewAuditTenant extends Component {\r\n    state = {\r\n        _id: this.props.tenantInfo.record._id,\r\n        audit: null,\r\n        total_score: this.props.tenantInfo.record.total_score,\r\n        tenantID: this.props.tenantInfo.record.tenantID,\r\n        auditor: \"auditor\",\r\n        // auditorComments: [\"Bla\", \"blabla\"],\r\n        // tenantComments: [\"Response\", \"response\"],\r\n        comment: this.props.tenantInfo.record.comment,\r\n        image: this.props.tenantInfo.record.image,\r\n        date: this.props.tenantInfo.record.date,\r\n        catCounts: this.props.tenantInfo.record.catCounts,\r\n        type: this.props.tenantInfo.record.type,\r\n        decodedImage: \"\",\r\n        newComment: \"\",\r\n    };\r\n\r\n    displayComments() {\r\n        var output = [];\r\n        var Comm = [];\r\n        for (var i = 0; i < Math.max(this.state.comment.length, this.state.image.length); i++) {\r\n            Comm.push(this.state.comment[i]);\r\n            if (this.state.image[i] != null) {\r\n                Comm.push(this.state.image[i])\r\n            }\r\n        }\r\n        Comm = Comm.sort((a, b) => a.date > b.date);\r\n        console.log(Comm);\r\n\r\n        for (var j = 0; j < Comm.length; j++) {\r\n            if (Comm[j].content) {\r\n                output.push(<div>\r\n                    <Comment\r\n                        author={<a>{Comm[j].author}</a>}\r\n                        className=\"comment\"\r\n                        content={\r\n                            <p>{Comm[j].content}</p>\r\n                        } />\r\n                </div>);\r\n            }\r\n            else {\r\n                output.push(<div className=\"image\">\r\n                    <Image\r\n                        width={100}\r\n                        src={`data:image/jpeg;base64,${Comm[j].base64}`}\r\n                    />\r\n                </div>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onChange = value => {\r\n        console.log(value.Text);\r\n        console.log(this.state.newComment);\r\n    };\r\n\r\n    newComment = (values) => {\r\n        // console.log(values.nativeEvent.explicitOriginalTarget.value);\r\n        this.setState({\r\n            newComment:\r\n                [{\r\n                    \"content\": values.nativeEvent.explicitOriginalTarget.value,\r\n                    \"date\": dateformat(Date().toString(), \"yyyy-mm-dd'T'HH:MM:ss.sssZ\"),\r\n                    \"author\": \"tenant\",\r\n                }]\r\n        })\r\n        // console.log(this.state.newComment)\r\n    }\r\n\r\n    submitComment = () => {\r\n        var tempArray = this.state.comment;\r\n        console.log(tempArray);\r\n        tempArray.push(this.state.newComment[0]);\r\n        console.log(tempArray);\r\n        this.setState({\r\n            comment: tempArray,\r\n        })\r\n        console.log(this.state.comment);\r\n        this.update();\r\n\r\n    }\r\n\r\n    update = () => {\r\n        console.log(this.state);\r\n        updateAudit({\r\n            _id: this.props.tenantInfo.record._id,\r\n            type: this.props.tenantInfo.record.type,\r\n            catCounts: this.props.tenantInfo.record.catCounts,\r\n            total_score: this.props.tenantInfo.record.total_score,\r\n            image: this.props.tenantInfo.record.image,\r\n            date: this.props.tenantInfo.record.date,\r\n            comment: this.state.comment,\r\n            location: this.props.tenantInfo.record.location,\r\n            tenantID: this.props.tenantInfo.record.tenantID,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <Progress className=\"score\"\r\n                    type=\"circle\"\r\n                    percent={this.state.total_score} width={200} />\r\n                <div>\r\n                    <Text className=\"name\">\r\n                        Tenant: {this.state.tenantID}\r\n                    </Text>\r\n                    <div />\r\n                    <Text className=\"name\">\r\n                        Auditor: {this.state.auditor}\r\n                    </Text>\r\n                    <div />\r\n                    {this.displayComments()}\r\n                    <div />\r\n                    <Form className=\"addComment\" onChange={this.newComment} initialValues={{\r\n                        remember: false,\r\n                    }}>\r\n                        <Form.Item name=\"addComment\" label=\"Add Comment\">\r\n                            <TextArea className=\"addCommentText\" placeholder=\"Add Comment\" rows={4} allowClear={true} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button className=\"submit-comment\" onClick={this.submitComment}>\r\n                                Submit Comment\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nViewAuditTenant.propTypes = {\r\n    tenantInfo: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    tenantInfo: state.tenantInfo,\r\n});\r\nexport default connect(mapStateToProps)(ViewAuditTenant);"]},"metadata":{},"sourceType":"module"}