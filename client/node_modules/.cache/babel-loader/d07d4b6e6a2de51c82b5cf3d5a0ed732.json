{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\checklist\\\\Checklist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport { Button, Card, Form, Row, Col } from \"antd\";\nimport ChecklistAccordion from \"./ChecklistAccordion\";\nimport questionJson from \"../../data/questions.json\";\nimport exampleJson from \"../data/test.json\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport FormCheckInput from \"react-bootstrap/esm/FormCheckInput\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checklist = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  var d = new Date();\n  var todaydate = new Date(d.getTime() - d.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  const [date, setDate] = useState(todaydate);\n  const [institute, setInstitute] = useState([{\n    name: \"Select Institution...\"\n  }]);\n  const [auditor, setAuditor] = useState();\n  const [auditee, setAuditee] = useState([{\n    name: \"Select Auditee...\",\n    id: \"\"\n  }]);\n  const [auditeeType, setAuditeeType] = useState(\"FB\");\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"add\":\n        console.log(\"Adding\");\n        console.log(state);\n        return [action.text, ...state];\n\n      case \"toggle\":\n        // console.log(\"Question: \" + action.question)\n        // return the whole old json, but u toggle the checklist to be !prevValue (only for that field)\n        const newArray = state[\"report_checklists\"].map(checklist => {\n          if (checklist.category === action.category) {\n            let betterNewArray;\n            console.log(checklist[\"checklist_items\"]);\n            checklist[\"checklist_items\"].map(item => {\n              if (item.question === action.question) {\n                console.log(\"equal\");\n                console.log(item);\n                return { ...checklist,\n                  point: !item.point\n                };\n              } else {\n                return checklist;\n              }\n            });\n          }\n        });\n        return;\n    }\n  }\n\n  const [state, globalDispatch] = useReducer(reducer, exampleJson);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // call a function that gets data from child ...\n  };\n\n  const changeAuditeeDropDown = e => {\n    setAuditee([{\n      name: \"Select Auditee...\",\n      id: \"\"\n    }]);\n    setAuditeeType(\"\");\n\n    if (e.target.value != \"Select Institution...\") {\n      var result = institute.find(x => x.name === e.target.value);\n      result = result[\"tenants\"];\n\n      for (let i = 0; i < result.length; i++) {\n        axios.post(\"/user/retrieve-name\", {\n          userId: result[i]\n        }).then(res => {\n          setAuditee(oldAuditee => [...oldAuditee, {\n            name: res.data,\n            id: result[i]\n          }]);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  };\n\n  const changeAuditeeType = e => {\n    setAuditeeType();\n\n    if (e.target.value != \"Select Auditee...\") {\n      var result = auditee.find(x => x.name === e.target.value);\n      result = result[\"id\"];\n      axios.post(\"/user/retrieve-tenanttype\", {\n        userId: result\n      }).then(res => {\n        setAuditeeType(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.post(\"/user/retrieve-name\", {\n      userId: currentUser\n    }).then(res => {\n      const auditorName = res.data;\n      setAuditor(auditorName);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [currentUser]);\n  useEffect(() => {\n    axios.get(\"/inst/list-all\").then(res => {\n      setInstitute(res.data);\n      var result = res.data.find(x => x.name === res.data[0].name);\n      result = result[\"tenants\"];\n\n      for (let i = 0; i < result.length; i++) {\n        axios.post(\"/user/retrieve-name\", {\n          userId: result[i]\n        }).then(res => {\n          setAuditee(oldAuditee => [...oldAuditee, {\n            name: res.data,\n            id: result[i]\n          }]);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-100 ml-auto mr-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Retail Audit Checklist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sx: \"4\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: date,\n                onChange: e => {\n                  setDate(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"institution\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: \"4\",\n              children: \"Institution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                type: \"select\",\n                placeholder: \"Choose Institution...\",\n                onClick: e => changeAuditeeDropDown(e),\n                children: [\"value =\", \" \", institute.map(inst => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: inst.name\n                  }, `option-${inst.name}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this);\n                }), \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"auditor\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: \"4\",\n              children: \"Auditor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: auditor,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"auditee\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: \"4\",\n              children: \"Auditee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                type: \"select\",\n                placeholder: \"Choose Auditee...\",\n                onClick: e => changeAuditeeType(e),\n                children: auditee.map(aud => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: aud.name\n                  }, `option-${aud.name}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"auditeeType\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: \"4\",\n              children: \"Auditee Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"8\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: auditeeType,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), Object.entries(questionJson[auditeeType]).map(([key, value]) => {\n            return /*#__PURE__*/_jsxDEV(ChecklistAccordion, {\n              title1: key,\n              v: value,\n              globalDispatch: globalDispatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: dbclear,\n        children: \"Clear DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checklist, \"uo7qzRtXZVPabJcFE0F3YYHgMMc=\", false, function () {\n  return [useAuth];\n});\n\n_c = Checklist;\n\nfunction dbclear() {\n  //console.log(\"test\");\n  axios.post(\"http://localhost:5000/report/clearDB\").then(res => {\n    alert(res);\n  }).catch(err => {\n    console.log(err);\n  });\n  axios.post(\"http://localhost:5000/checklistitem/clearDB\").then(res => {\n    alert(res);\n  }).catch(err => {\n    console.log(err);\n  });\n  axios.post(\"http://localhost:5000/checklist/clearDB\").then(res => {\n    alert(res);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nfunction submit(e) {\n  e.preventDefault();\n  var test_json = {\n    date: \"2021-02-10\",\n    type: \"CheckList Test\",\n    auditee: \"123\",\n    auditor: \"456\",\n    report_checklists: [\"SafetyID\", \"HygeneID\"],\n    final_score: 1.1111,\n    comments: \"Need to do better in cleaning\",\n    status: \"active\",\n    list_of_non_compliance: [\"False1\", \"False2\"]\n  }; // axios.post('http://localhost:5000/checklist/add', test_json).then(function (response) { console.log(response); })\n\n  axios.post(\"http://localhost:5000/report/add\", test_json).then(res => {\n    alert(res);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nexport default Checklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/checklist/Checklist.js"],"names":["React","useEffect","useState","useReducer","Button","Card","Form","Row","Col","ChecklistAccordion","questionJson","exampleJson","axios","useAuth","FormCheckInput","useFormik","Checklist","currentUser","d","Date","todaydate","getTime","getTimezoneOffset","toISOString","split","date","setDate","institute","setInstitute","name","auditor","setAuditor","auditee","setAuditee","id","auditeeType","setAuditeeType","reducer","state","action","type","console","log","text","newArray","map","checklist","category","betterNewArray","item","question","point","globalDispatch","handleSubmit","e","preventDefault","changeAuditeeDropDown","target","value","result","find","x","i","length","post","userId","then","res","oldAuditee","data","catch","err","changeAuditeeType","auditorName","get","inst","aud","Object","entries","key","dbclear","alert","submit","test_json","report_checklists","final_score","comments","status","list_of_non_compliance"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useReducer } from \"react\";\r\nimport { Button, Card, Form, Row, Col } from \"antd\";\r\nimport ChecklistAccordion from \"./ChecklistAccordion\";\r\nimport questionJson from \"../../data/questions.json\";\r\nimport exampleJson from \"../data/test.json\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport FormCheckInput from \"react-bootstrap/esm/FormCheckInput\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Checklist = () => {\r\n  const { currentUser } = useAuth();\r\n  var d = new Date();\r\n  var todaydate = new Date(d.getTime() - d.getTimezoneOffset() * 60000)\r\n    .toISOString()\r\n    .split(\"T\")[0];\r\n\r\n  const [date, setDate] = useState(todaydate);\r\n  const [institute, setInstitute] = useState([\r\n    { name: \"Select Institution...\" },\r\n  ]);\r\n  const [auditor, setAuditor] = useState();\r\n  const [auditee, setAuditee] = useState([\r\n    { name: \"Select Auditee...\", id: \"\" },\r\n  ]);\r\n  const [auditeeType, setAuditeeType] = useState(\"FB\");\r\n\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"add\":\r\n        console.log(\"Adding\");\r\n        console.log(state);\r\n        return [action.text, ...state];\r\n      case \"toggle\":\r\n        // console.log(\"Question: \" + action.question)\r\n        // return the whole old json, but u toggle the checklist to be !prevValue (only for that field)\r\n        const newArray = state[\"report_checklists\"].map((checklist) => {\r\n          if (checklist.category === action.category) {\r\n            let betterNewArray;\r\n            console.log(checklist[\"checklist_items\"]);\r\n            checklist[\"checklist_items\"].map((item) => {\r\n              if (item.question === action.question) {\r\n                console.log(\"equal\");\r\n                console.log(item);\r\n                return { ...checklist, point: !item.point };\r\n              } else {\r\n                return checklist;\r\n              }\r\n            });\r\n          }\r\n        });\r\n        return;\r\n    }\r\n  }\r\n\r\n  const [state, globalDispatch] = useReducer(reducer, exampleJson);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // call a function that gets data from child ...\r\n  };\r\n\r\n  const changeAuditeeDropDown = (e) => {\r\n    setAuditee([{ name: \"Select Auditee...\", id: \"\" }]);\r\n    setAuditeeType(\"\");\r\n    if (e.target.value != \"Select Institution...\") {\r\n      var result = institute.find((x) => x.name === e.target.value);\r\n      result = result[\"tenants\"];\r\n      for (let i = 0; i < result.length; i++) {\r\n        axios\r\n          .post(\"/user/retrieve-name\", { userId: result[i] })\r\n          .then((res) => {\r\n            setAuditee((oldAuditee) => [\r\n              ...oldAuditee,\r\n              { name: res.data, id: result[i] },\r\n            ]);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeAuditeeType = (e) => {\r\n    setAuditeeType();\r\n    if (e.target.value != \"Select Auditee...\") {\r\n      var result = auditee.find((x) => x.name === e.target.value);\r\n      result = result[\"id\"];\r\n      axios\r\n        .post(\"/user/retrieve-tenanttype\", { userId: result })\r\n        .then((res) => {\r\n          setAuditeeType(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/user/retrieve-name\", { userId: currentUser })\r\n      .then((res) => {\r\n        const auditorName = res.data;\r\n        setAuditor(auditorName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/inst/list-all\")\r\n      .then((res) => {\r\n        setInstitute(res.data);\r\n        var result = res.data.find((x) => x.name === res.data[0].name);\r\n        result = result[\"tenants\"];\r\n        for (let i = 0; i < result.length; i++) {\r\n          axios\r\n            .post(\"/user/retrieve-name\", { userId: result[i] })\r\n            .then((res) => {\r\n              setAuditee((oldAuditee) => [\r\n                ...oldAuditee,\r\n                { name: res.data, id: result[i] },\r\n              ]);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <Card className=\"w-100 ml-auto mr-auto\">\r\n        <Card.Header>\r\n          <h4>Retail Audit Checklist</h4>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group as={Row} controlId=\"date\">\r\n              <Form.Label column sx=\"4\">\r\n                Date\r\n              </Form.Label>\r\n              <Col xs=\"8\">\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"institution\">\r\n              <Form.Label column xs=\"4\">\r\n                Institution\r\n              </Form.Label>\r\n              <Col xs=\"8\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"select\"\r\n                  placeholder=\"Choose Institution...\"\r\n                  onClick={(e) => changeAuditeeDropDown(e)}\r\n                >\r\n                  value ={\" \"}\r\n                  {institute.map((inst) => {\r\n                    return (\r\n                      <option key={`option-${inst.name}`}>{inst.name}</option>\r\n                    );\r\n                  })}\r\n                  ;\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            {/* ----- AUDITOR ------ */}\r\n            <Form.Group as={Row} controlId=\"auditor\">\r\n              <Form.Label column xs=\"4\">\r\n                Auditor\r\n              </Form.Label>\r\n              <Col xs=\"8\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={auditor}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"auditee\">\r\n              <Form.Label column xs=\"4\">\r\n                Auditee\r\n              </Form.Label>\r\n              <Col xs=\"8\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"select\"\r\n                  placeholder=\"Choose Auditee...\"\r\n                  onClick={(e) => changeAuditeeType(e)}\r\n                >\r\n                  {auditee.map((aud) => {\r\n                    return (\r\n                      <option key={`option-${aud.name}`}>{aud.name}</option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"auditeeType\">\r\n              <Form.Label column xs=\"4\">\r\n                Auditee Type\r\n              </Form.Label>\r\n              <Col xs=\"8\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={auditeeType}\r\n                  readOnly\r\n                ></Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            {Object.entries(questionJson[auditeeType]).map(([key, value]) => {\r\n              return (\r\n                <ChecklistAccordion\r\n                  title1={key}\r\n                  v={value}\r\n                  globalDispatch={globalDispatch}\r\n                />\r\n              );\r\n            })}\r\n            <br></br>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <Button variant=\"primary\" onClick={dbclear}>\r\n          Clear DB\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction dbclear() {\r\n  //console.log(\"test\");\r\n  axios\r\n    .post(\"http://localhost:5000/report/clearDB\")\r\n    .then((res) => {\r\n      alert(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  axios\r\n    .post(\"http://localhost:5000/checklistitem/clearDB\")\r\n    .then((res) => {\r\n      alert(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  axios\r\n    .post(\"http://localhost:5000/checklist/clearDB\")\r\n    .then((res) => {\r\n      alert(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nfunction submit(e) {\r\n  e.preventDefault();\r\n  var test_json = {\r\n    date: \"2021-02-10\",\r\n    type: \"CheckList Test\",\r\n    auditee: \"123\",\r\n    auditor: \"456\",\r\n    report_checklists: [\"SafetyID\", \"HygeneID\"],\r\n    final_score: 1.1111,\r\n    comments: \"Need to do better in cleaning\",\r\n    status: \"active\",\r\n    list_of_non_compliance: [\"False1\", \"False2\"],\r\n  };\r\n  // axios.post('http://localhost:5000/checklist/add', test_json).then(function (response) { console.log(response); })\r\n  axios\r\n    .post(\"http://localhost:5000/report/add\", test_json)\r\n    .then((res) => {\r\n      alert(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport default Checklist;\r\n"]},"metadata":{},"sourceType":"module"}