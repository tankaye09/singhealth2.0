{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanka\\\\Desktop\\\\ESC\\\\Project\\\\SingHealthApp\\\\singhealth2.0\\\\client\\\\src\\\\components\\\\photo\\\\PhotoPop.js\";\nimport React, { Component } from \"react\";\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\nimport { uploadPhoto } from \"../../actions/photoActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fileUpload = require('fuctbase64');\n\nexport default class PhotoPop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      date: null,\n      description: \"\",\n      location: \"\",\n      photo: null,\n      visible: false\n    };\n\n    this.fileSelectedHandler = event => {\n      // console.log(event.target.files[0]);\n      fileUpload(event).then(data => {\n        // console.log(\"base64: \", data.base64);\n        this.setState({\n          image: data.base64\n        });\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onChangeDate = (date, dateString) => {\n      this.setState({\n        date: date\n      });\n    };\n\n    this.upload = values => {\n      // console.log(values);\n      uploadPhoto(values);\n      this.showModal();\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = e => {\n      console.log(e);\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"photo_upload\",\n        className: \"photo-upload\",\n        onFinish: this.onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: this.fileSelectedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"date\",\n          rules: [{\n            required: true,\n            message: \"Date of Incident\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            placeholder: \"Date\",\n            onChange: this.onChangeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"description\",\n          rules: [{\n            required: true,\n            message: \"Description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Description\",\n            onChange: this.onChange,\n            value: this.state.description,\n            id: \"description\",\n            type: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"location\",\n          rules: [{\n            required: true,\n            message: \"Location of Incident\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Location\",\n            onChange: this.onChange,\n            value: this.state.location,\n            id: \"location\",\n            type: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"upload-photo-button\",\n          onClick: () => {\n            this.upload(this.state);\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        okButtonProps: {\n          disabled: false\n        },\n        cancelButtonProps: {\n          disabled: true,\n          visible: false\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Photo Uploaded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tanka/Desktop/ESC/Project/SingHealthApp/singhealth2.0/client/src/components/photo/PhotoPop.js"],"names":["React","Component","Button","Input","Form","Modal","DatePicker","uploadPhoto","fileUpload","require","PhotoPop","state","image","date","description","location","photo","visible","fileSelectedHandler","event","then","data","setState","base64","onChange","e","target","id","value","onChangeDate","dateString","upload","values","showModal","handleOk","console","log","render","onFinish","required","message","disabled"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,UAArC,QAAuD,MAAvD;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,eAAe,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CU,KAD4C,GACpC;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,KAAK,EAAE,IALH;AAMJC,MAAAA,OAAO,EAAE;AANL,KADoC;;AAAA,SAU5CC,mBAV4C,GAUtBC,KAAK,IAAI;AAC3B;AACAX,MAAAA,UAAU,CAACW,KAAD,CAAV,CACKC,IADL,CACWC,IAAD,IAAU;AACZ;AACA,aAAKC,QAAL,CAAc;AACVV,UAAAA,KAAK,EAAES,IAAI,CAACE;AADF,SAAd;AAGH,OANL;AAOH,KAnB2C;;AAAA,SAqB5CC,QArB4C,GAqBhCC,CAAD,IAAO;AACd,WAAKH,QAAL,CAAc;AAAE,SAACG,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAA1B,OAAd;AACH,KAvB2C;;AAAA,SAyB5CC,YAzB4C,GAyB7B,CAAChB,IAAD,EAAOiB,UAAP,KAAsB;AACjC,WAAKR,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACH,KA3B2C;;AAAA,SA8B5CkB,MA9B4C,GA8BlCC,MAAD,IAAY;AACjB;AACAzB,MAAAA,WAAW,CAACyB,MAAD,CAAX;AACA,WAAKC,SAAL;AACH,KAlC2C;;AAAA,SAoC5CA,SApC4C,GAoChC,MAAM;AACd,WAAKX,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAxC2C;;AAAA,SA0C5CiB,QA1C4C,GA0CjCT,CAAC,IAAI;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACA,WAAKH,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KA/C2C;AAAA;;AAiD5CoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAC,cADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAHnB;AAAA,gCAKI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAE,KAAKpB;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAE,CAAC;AAAEqB,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAFX;AAAA,iCAII,QAAC,UAAD;AACI,YAAA,WAAW,EAAC,MADhB;AAEI,YAAA,QAAQ,EAAE,KAAKX;AAFnB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAkBI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,aADT;AAEI,UAAA,KAAK,EAAE,CACH;AACIU,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,CAFX;AAAA,iCASI,QAAC,KAAD;AACI,YAAA,WAAW,EAAC,aADhB;AAEI,YAAA,QAAQ,EAAE,KAAKhB,QAFnB;AAGI,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,WAHtB;AAII,YAAA,EAAE,EAAC,aAJP;AAKI,YAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAoCI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAE,CAAC;AAAEyB,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAFX;AAAA,iCAII,QAAC,KAAD;AACI,YAAA,WAAW,EAAC,UADhB;AAEI,YAAA,QAAQ,EAAE,KAAKhB,QAFnB;AAGI,YAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,QAHtB;AAII,YAAA,EAAE,EAAC,UAJP;AAKI,YAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkDI,QAAC,IAAD;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,QAAQ,EAAC,QAFb;AAGI,UAAA,SAAS,EAAC,qBAHd;AAII,UAAA,OAAO,EAAE,MAAM;AAAE,iBAAKgB,MAAL,CAAY,KAAKpB,KAAjB;AAA0B,WAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlDJ,eA4DI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,EADV;AAEI,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWM,OAFxB;AAGI,QAAA,IAAI,EAAE,KAAKiB,QAHf;AAII,QAAA,aAAa,EAAE;AAAEO,UAAAA,QAAQ,EAAE;AAAZ,SAJnB;AAKI,QAAA,iBAAiB,EAAE;AAAEA,UAAAA,QAAQ,EAAE,IAAZ;AAAkBxB,UAAAA,OAAO,EAAE;AAA3B,SALvB;AAAA,+BAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cA5DJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwEH;;AA1H2C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Input, Form, Modal, DatePicker } from \"antd\";\r\nimport { uploadPhoto } from \"../../actions/photoActions\";\r\nconst fileUpload = require('fuctbase64');\r\n\r\nexport default class PhotoPop extends Component {\r\n    state = {\r\n        image: null,\r\n        date: null,\r\n        description: \"\",\r\n        location: \"\",\r\n        photo: null,\r\n        visible: false,\r\n    }\r\n\r\n    fileSelectedHandler = event => {\r\n        // console.log(event.target.files[0]);\r\n        fileUpload(event)\r\n            .then((data) => {\r\n                // console.log(\"base64: \", data.base64);\r\n                this.setState({\r\n                    image: data.base64\r\n                })\r\n            })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        this.setState({ date: date });\r\n    };\r\n\r\n\r\n    upload = (values) => {\r\n        // console.log(values);\r\n        uploadPhoto(values);\r\n        this.showModal();\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    name=\"photo_upload\"\r\n                    className=\"photo-upload\"\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item>\r\n                        <Input type=\"file\" onChange={this.fileSelectedHandler} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"date\"\r\n                        rules={[{ required: true, message: \"Date of Incident\" }]}\r\n                    >\r\n                        <DatePicker\r\n                            placeholder=\"Date\"\r\n                            onChange={this.onChangeDate}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Description\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Description\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.description}\r\n                            id=\"description\"\r\n                            type=\"description\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"location\"\r\n                        rules={[{ required: true, message: \"Location of Incident\" }]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Location\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.location}\r\n                            id=\"location\"\r\n                            type=\"location\"\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n                <Form>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"upload-photo-button\"\r\n                        onClick={() => { this.upload(this.state); }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    okButtonProps={{ disabled: false }}\r\n                    cancelButtonProps={{ disabled: true, visible: false, }}\r\n                >\r\n                    <p>Photo Uploaded!</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}