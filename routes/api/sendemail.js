const express = require("express");
const router = express.Router();
const nodemailer = require("nodemailer");
const Tenant = require("../../models/Tenant");
const User = require("../../models/User");
const moment = require("moment");

// @route POST api/sendemail/create
// @desc send email notification
router.post("/create", async (req, res) => {
  console.log("Res in sendemail/create: ", req.body);
  const output = `
    <h3>Singhealth Tenant Account Created</h3>
    <p>Hello ${req.body.name},</p>
    <p>Your Sinhealth Tenant Account has been created. Please visit http://localhost:3000/ to login to your account </p>
    <ul>
      <li>Your username: ${req.body.email}</li>
      <li>Your password: autogenerated</li>
    </ul>
    <p>You are advised to change your password upon your first log in to your account</p>
    <p>Thank you</p>
    `;

  let transporter = nodemailer.createTransport({
    host: "smtp-mail.outlook.com",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: "singhealthbot@outlook.com", // username
      pass: "Singhealthb0t", // password
    },
    tls: {
      rejectUnauthorized: false,
    },
  });

  // send mail with defined transport object
  let info = await transporter.sendMail(
    {
      from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
      to: `${req.body.email}`, // list of receivers
      subject: "Singhealth Notification: New Singhealth Tenant Account Created", // Subject line
      // text: "Hello world?", // plain text body
      html: output, // html body
    },
    (error, info) => {
      if (error) {
        console.log("email sent error");
        res.send(error);
      } else {
        console.log("Message sent: %s", info.messageId);
        res.send(info.messageId);
      }
    }
  );
  // console.log("Message sent: %s", info.messageId);
  // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
});

// @route POST api/sendemail/audit
// @desc send email notification
router.post("/audit", (req, res) => {
  console.log("Res in sendemail/audit: ", req.body);
  Tenant.findOne({ _id: req.body.tenantID }).then((tenant) => {
    console.log("tenant in findone: ", tenant);
    User.findOne({ _id: tenant.userId }).then(async (user) => {
      console.log("user in findone: ", user);
      const output = `
      <h3>Singhealth has given you an Audit</h3>
      <p>Hello ${user.name},</p>
      <p>You have been given a new Singhealth Audit. Please visit http://localhost:3000/ to login to your account and view the audit </p>
      <p>Thank you</p>
      `;

      let transporter = nodemailer.createTransport({
        host: "smtp-mail.outlook.com",
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
          user: "singhealthbot@outlook.com", // username
          pass: "Singhealthb0t", // password
        },
        tls: {
          rejectUnauthorized: false,
        },
      });

      // send mail with defined transport object
      let info = await transporter.sendMail(
        {
          from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
          to: `${user.email}`, // list of receivers
          subject: "Singhealth Notification: New Audit Created", // Subject line
          // text: "Hello world?", // plain text body
          html: output, // html body
        },
        (error, info) => {
          if (error) {
            console.log("email sent error");
            res.send(error);
          } else {
            console.log("Message sent: %s", info.messageId);
            res.send(info.messageId);
          }
        }
      );
      // console.log("Message sent: %s", info.messageId);
      // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
    });
  });
});

// @route POST api/sendemail/auditupdate
// @desc send email notification
router.post("/auditupdate", (req, res) => {
  console.log("Res in sendemail/audit: ", req.body);

  // tenant makes update, email sent to auditor
  let receiverId;
  let promise = new Promise((resolve, reject) => {
    console.log("auditorId: ", req.body.auditorId);
    console.log("tenant_id: ", req.body.tenantID);
    if (typeof req.body.auditorId !== "undefined") {
      console.log("if");
      receiverId = req.body.auditorId;
      resolve("Preparing to send to auditor");
    } else {
      console.log("else");
      Tenant.findOne({ _id: req.body.tenantID })
        .then((tenant) => {
          receiverId = tenant.userId;
          console.log("ReceiverID: ", receiverId);
          resolve("Preparing to send to tenant");
        })
        .catch(() => {
          reject("Promise Error");
        });
    }
  });

  promise
    .then(() => {
      User.findOne({ _id: receiverId }).then(async (user) => {
        console.log("user in findone: ", user);
        const output = `
            <h3>There has been an update to your Audit</h3>
            <p>Hello ${user.name},</p>
            <p>Please visit http://localhost:3000/ to login to your account and view the audit changes for the tenant located at address: <b>${req.body.location}</b> </p>
            <p>Thank you</p>
            `;

        let transporter = nodemailer.createTransport({
          host: "smtp-mail.outlook.com",
          port: 587,
          secure: false, // true for 465, false for other ports
          auth: {
            user: "singhealthbot@outlook.com", // username
            pass: "Singhealthb0t", // password
          },
          tls: {
            rejectUnauthorized: false,
          },
        });

        // send mail with defined transport object
        let info = await transporter.sendMail(
          {
            from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
            to: `${user.email}`, // list of receivers
            subject: "Singhealth Notification: New Audit Update", // Subject line
            // text: "Hello world?", // plain text body
            html: output, // html body
          },
          (error, info) => {
            if (error) {
              console.log("email sent error");
              res.send(error);
            } else {
              console.log("Message sent: %s", info.messageId);
              res.send(info.messageId);
            }
          }
        );
        // console.log("Message sent: %s", info.messageId);
        // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
      });
    })
    .catch((message) => {
      console.log(message);
    });
});

// @route POST api/sendemail/reminder
// @desc send email notification
router.post("/reminder", (req, res) => {
  console.log("Res in sendemail/reminder: ", req.body);
  Tenant.findOne({ _id: req.body.record.tenantID })
    .then((tenant) => {
      console.log("tenant in findone: ", tenant);
      User.findOne({ _id: tenant.userId })
        .then(async (user) => {
          console.log("user in findone: ", user);
          const output = `
      <h3>Gentle Reminder From Singhealth</h3>
      <p>Hello ${user.name},</p>
      <p>Your Singhealth Audit will expire on 
      ${moment(req.body.record.rectifyDate, "YYYY-MM-DDTHH:mm:ss.SSS").format(
            "DD/MM/YYYY"
          )}. Please visit http://localhost:3000/ to login to your account and resolve the audit. 
      </p>
      <p>Thank you</p>
      `;

          let transporter = nodemailer.createTransport({
            host: "smtp-mail.outlook.com",
            port: 587,
            secure: false, // true for 465, false for other ports
            auth: {
              user: "singhealthbot@outlook.com", // username
              pass: "Singhealthb0t", // password
            },
            tls: {
              rejectUnauthorized: false,
            },
          });

          // send mail with defined transport object
          let info = await transporter.sendMail(
            {
              from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
              to: `${user.email}`, // list of receivers
              subject: "Singhealth Notification: Audit Expiry Reminder", // Subject line
              // text: "Hello world?", // plain text body
              html: output, // html body
            },
            (error, info) => {
              if (error) {
                console.log("email sent error");
                res.send(error);
              } else {
                console.log("Message sent: %s", info.messageId);
                res.send(info.messageId);
              }
            }
          );
          // console.log("Message sent: %s", info.messageId);
          // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
        })
        .catch((err) => console.log("Error finding user: ", err));
    })
    .catch((err) => console.log("Error finding tenant: ", err));
});

// Send password reset email with new password
router.post("/reset", async (req, res) => {
  console.log("Res in sendemail/reset: ", req.body);
  const output = `
    <h3>Singhealth Account Password Reset</h3>
    <p>Hello User,</p>
    <p>Your Password has been reset. Please visit http://localhost:3000/ to login to your account </p>
    <ul>
      <li>New password: ${req.body.password}</li>
    </ul>
    <p>You are advised to change your password after logging in</p>
    <p>Thank you</p>
    `;

  let transporter = nodemailer.createTransport({
    host: "smtp-mail.outlook.com",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: "singhealthbot@outlook.com", // username
      pass: "Singhealthb0t", // password
    },
    tls: {
      rejectUnauthorized: false,
    },
  });

  // send mail with defined transport object
  let info = await transporter.sendMail(
    {
      from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
      to: `${req.body.email}`, // list of receivers
      subject: "Singhealth Notification: New Singhealth Tenant Account Created", // Subject line
      // text: "Hello world?", // plain text body
      html: output, // html body
    },
    (error, info) => {
      if (error) {
        console.log("email sent error");
        res.send(error);
      } else {
        console.log("Message sent: %s", info.messageId);
        res.send(info.messageId);
      }
    }
  );
  // console.log("Message sent: %s", info.messageId);
  // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
});

router.post("/change", async (req, res) => {
  console.log("Res in sendemail/change: ", req.body);
  const output = `
    <h3>Singhealth Account Password Change</h3>
    <p>Hello User,</p>
    <p>Your Password has been changed. Please visit http://localhost:3000/ to login to your account </p>
    <ul>
      <li>New password: ${req.body.password}</li>
    </ul>
    <p>Thank you</p>
    `;

  let transporter = nodemailer.createTransport({
    host: "smtp-mail.outlook.com",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: "singhealthbot@outlook.com", // username
      pass: "Singhealthb0t", // password
    },
    tls: {
      rejectUnauthorized: false,
    },
  });

  // send mail with defined transport object
  let info = await transporter.sendMail(
    {
      from: '"Singhealth Bot" <singhealthbot@outlook.com>', // sender address
      to: `${req.body.email}`, // list of receivers
      subject: "Singhealth Notification: New Singhealth Tenant Account Created", // Subject line
      // text: "Hello world?", // plain text body
      html: output, // html body
    },
    (error, info) => {
      if (error) {
        console.log("email sent error");
        res.send(error);
      } else {
        console.log("Message sent: %s", info.messageId);
        res.send(info.messageId);
      }
    }
  );
  // console.log("Message sent: %s", info.messageId);
  // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
});

module.exports = router;
